{"vmdversion":"2.0.3.0710","vmdlayout":"{\"components\":[{\"cid\":\"uxpanel\",\"id\":\"Borderline\",\"layoutConfig\":{},\"userConfig\":{\"layout\":\"absolute\",\"header\":false,\"width\":320,\"height\":621,\"afterrender\":\"Borderline_afterrender\"},\"cn\":[{\"cid\":\"vmd.ux.LineStyle\",\"id\":\"LineStyle\",\"layoutConfig\":{},\"userConfig\":{\"x\":60,\"y\":10,\"width\":160,\"lineChagen\":\"LineStyle_lineChagen\"}},{\"cid\":\"label\",\"id\":\"label\",\"layoutConfig\":{},\"userConfig\":{\"x\":10,\"y\":10,\"text\":\"样式：\"}},{\"cid\":\"label\",\"id\":\"label1\",\"layoutConfig\":{},\"userConfig\":{\"x\":10,\"y\":110,\"text\":\"颜色：\"}},{\"cid\":\"label\",\"id\":\"label2\",\"layoutConfig\":{},\"userConfig\":{\"x\":10,\"y\":60,\"text\":\"边框：\"}},{\"cid\":\"vmdCombo\",\"id\":\"BorderStyle\",\"layoutConfig\":{},\"userConfig\":{\"x\":60,\"y\":50,\"beforerender\":\"combo_beforerender\",\"afterrender\":\"combo_afterrender\",\"width\":160,\"id\":\"BorderStyle\",\"style\":\"border: 1px solid #dddddd\"}},{\"cid\":\"container\",\"id\":\"ColorSelect\",\"layoutConfig\":{},\"userConfig\":{\"x\":60,\"y\":100,\"width\":150,\"height\":30,\"id\":\"ColorSelect\",\"afterrender\":\"ColorSelect_afterrender\"}},{\"cid\":\"vmdButton\",\"id\":\"button\",\"layoutConfig\":{},\"userConfig\":{\"x\":210,\"y\":100,\"text\":\"\",\"style\":\"border-radius: 0;    background-size: 120%;    background-position: right;    border: 0;    float: right\",\"width\":22,\"height\":25,\"icon\":\"icon-caret-down\",\"click\":\"button_click\"}},{\"cid\":\"container\",\"id\":\"myColor\",\"layoutConfig\":{},\"userConfig\":{\"x\":60,\"y\":130,\"width\":150,\"height\":160,\"layout\":\"absolute\",\"id\":\"myColor\",\"hidden\":true},\"cn\":[{\"cid\":\"vmdButton\",\"id\":\"button1\",\"layoutConfig\":{},\"userConfig\":{\"x\":1.5,\"y\":130,\"width\":145,\"text\":\"其他颜色\",\"click\":\"button1_click\",\"style\":\"border:none;\"}}]},{\"cid\":\"container\",\"id\":\"myAnchor\",\"layoutConfig\":{},\"userConfig\":{\"x\":50,\"y\":130,\"width\":10,\"height\":40,\"border\":false,\"id\":\"myAnchor\"}}]}]}","vmdevents":"var isCp = false,\n    isCpPick = false; // 颜色面板是否已存在\nvar value = '',\n    selectColor = '';\nvar colorShow, myColorPicker;\nvar page = this\n\nvar store = new Ext.data.JsonStore({\n    proxy: new Ext.data.MemoryProxy(),\n    fields: ['borderStyle', 'describe']\n});\n//上框线top 下框线below 左left 右right 无none 所有all \n// 外侧outer 粗匣bold 粗底bold-below 上和粗下top-boldbelow\nvar data = [{\n    borderStyle: 'top',\n    img_dis: \"/system/img/report/border/borderTop.png\",\n    describe: '上框线'\n}, {\n    borderStyle: 'below',\n    img_dis: \"/system/img/report/border/borderBottom.png\",\n    describe: '下框线'\n}, {\n    borderStyle: 'left',\n    img_dis: \"/system/img/report/border/borderLeft.png\",\n    describe: '左框线'\n}, {\n    borderStyle: 'right',\n    img_dis: \"/system/img/report/border/borderRight.png\",\n    describe: '右框线'\n}, {\n    borderStyle: 'none',\n    img_dis: \"/system/img/report/border/borderNone.png\",\n    describe: '无框线'\n}, {\n    borderStyle: 'all',\n    img_dis: \"/system/img/report/border/BordersAll.png\",\n    describe: '所有框线'\n}, {\n    borderStyle: 'outer',\n    img_dis: \"/system/img/report/border/borderOutside.png\",\n    describe: '外侧框线'\n}, {\n    borderStyle: 'bold',\n    img_dis: \"/system/img/report/border/BorderThickOutside.png\",\n    describe: '粗匣框线'\n}, {\n    borderStyle: 'bold-below',\n    img_dis: \"/system/img/report/border/BorderThickBottom.png\",\n    describe: '粗底框线'\n}, {\n    borderStyle: 'top-below',\n    img_dis: \"/system/img/report/border/BorderTopAndBottom.png\",\n    describe: '上框线和下框线'\n}, {\n    borderStyle: 'top-boldbelow',\n    img_dis: \"/system/img/report/border/BorderTopAndThickBottom.png\",\n    describe: '上框线和粗下框线'\n}];\nstore.loadData(data);\n\nfunction comlist_afterrender(sender) {\n    // BorderStyle.store = store;\n    // BorderStyle.displayField = 'describe';\n    // BorderStyle.valueField = 'borderStyle'\n    // var list = BorderStyle.getList();\n    // Ext.each(list.children, function(item, index) {\n    //     var imgPath = data[index] && data[index].img_dis;\n    //     if(!imgPath) return;\n    //     item.firstChild.style.backgroundImage = \"url(\" + imgPath + \")\";\n    //     item.firstChild.style.backgroundRepeat = \"no-repeat\";\n    //     item.firstChild.style.backgroundPosition = \"left center\";\n    //     item.firstChild.style.paddingLeft = \"18px\";\n    // })\n}\n\nfunction combo_beforerender(sender) {\n    BorderStyle.store = store;\n    BorderStyle.displayField = 'describe';\n    BorderStyle.valueField = 'borderStyle'\n}\n\nfunction combo_afterrender(sender) {\n    var list = BorderStyle.getList();\n    Ext.each(list.children, function(item, index) {\n        var imgPath = data[index] && data[index].img_dis;\n        if(!imgPath) return;\n        item.firstChild.style.backgroundImage = \"url(\" + imgPath + \")\";\n        item.firstChild.style.backgroundRepeat = \"no-repeat\";\n        item.firstChild.style.backgroundPosition = \"left center\";\n        item.firstChild.style.paddingLeft = \"18px\";\n    })\n}\n\nfunction ColorSelect_colorchange(sender, selColor) {\n    // page.fireEvent('colorChanged', ColorSelect, selColor)\n}\n\nfunction LineStyle_lineChagen(sender, line) {\n    page.fireEvent('borderStyleChanged', LineStyle, line)\n}\n\nfunction showColor(value) {\n    if(isCp) {\n        return\n    }\n    var cValue = value;\n    var colors = ['000000', '993300', '333300', '003300', '003366', '000080', '333399', '333333', '800000', 'FF6600', '808000', '008000', '008080', '0000FF', '666699', '808080', 'FF0000', 'FF9900', '99CC00', '339966', '33CCCC', '3366FF', '800080', '969696', 'FF00FF', 'FFCC00', 'FFFF00', '00FF00', '00FFFF', '00CCFF', '993366', 'C0C0C0', 'FF99CC', 'FFCC99', 'FFFF99', 'CCFFCC', 'CCFFFF', '99CCFF', 'CC99FF', 'FFFFFF'];\n    if(value.indexOf(\"#\") != -1) {\n        cValue = value.slice(1);\n    }\n    if(!isInArray(colors, cValue)) {\n        cValue = '';\n    }\n    var cp = new Ext.ColorPalette({\n        value: cValue,\n    });\n    cp.colors = colors;\n    cp.render(myColor.id);\n    cp.on('select', function(palette, color) {\n        selectColor = \"#\" + color;\n        setBackColor(color);\n        page.fireEvent('colorChanged', ColorSelect, \"#\" + color);\n        // page.fireEvent('colorChanged', ColorSelect, selColor)\n        myColor.hide();\n        if(isCpPick) {\n            myColorPicker.unload();\n            myColorPicker = null;\n            isCpPick = false;\n        }\n    });\n    isCp = true;\n}\n\nfunction isInArray(arr, value) {\n    for(var i = 0; i < arr.length; i++) {\n        if(value === arr[i]) {\n            return true;\n        }\n    }\n    return false;\n}\n\nfunction button_click(sender, e) {\n    if(myColor.hidden) {\n        myColor.show();\n        showColor(value);\n    } else {\n        myColor.hide();\n        if(isCpPick) {\n            myColorPicker.unload();\n            myColorPicker = null;\n            isCpPick = false;\n        }\n    }\n}\n// 设置图框背景颜色\nfunction setBackColor(selColor) {\n    if(selColor) {\n        colorShow = vmd.getElement(ColorSelect.id);\n        if(selColor.indexOf('#') == -1) {\n            colorShow.applyStyles('backgroundColor:#' + selColor);\n        } else {\n            colorShow.applyStyles('backgroundColor:' + selColor);\n        }\n    }\n}\n\nfunction button1_click(sender, e) {\n    \n    // if(isCpPick) {\n    //     return;\n    // }\n    myColor.hide()\n    isCpPick = true;\n    // 语言设置\n    dhtmlXColorPicker.prototype.i18n.zn = {\n        labelHue: \"H\",\n        labelSat: \"S\",\n        labelLum: \"L\",\n        labelRed: \"R\",\n        labelGreen: \"g\",\n        labelBlue: \"B\",\n        btnSelect: \"选择\",\n        btnCancel: \"取消\"\n    }\n    myColorPicker = new dhtmlXColorPicker({\n        // parent: document.body,\n        input: myAnchor.id,\n        color: value,\n        closeable: false\n    });\n    myColorPicker.loadUserLanguage('zn');\n    myColorPicker.show();\n    myColorPicker.setPosition(100, 100)\n    var myEvent = myColorPicker.attachEvent(\"onSelect\", function(color, node) {\n        \n        selectColor = color;\n        page.fireEvent('colorChanged', ColorSelect, color);\n        temp = vmd.getElement(myAnchor.id);\n        temp.applyStyles('backgroundColor:#fff');\n        setBackColor(color)\n        myColor.hide();\n        myColorPicker.unload();\n        myColorPicker = null;\n        isCpPick = false\n    });\n    var myEvent = myColorPicker.attachEvent(\"onCancel\", function(color, node) {\n        myColorPicker.unload();\n        myColorPicker = null;\n        isCpPick = false\n    });\n}\n\nfunction ColorSelect_afterrender(sender) {\n    colorShow = vmd.getElement(ColorSelect.id);\n    colorShow.applyStyles('backgroundColor:#' + value);\n}\n\nfunction setColorValue(color) {\n    value = color\n    selectColor = color;\n}\n\nfunction setInfo(info, cell) {\n    //直接填写方法内容\n    if(info) {\n        \n        LineStyle.setOriLine(info.LineStyle.value);\n        BorderStyle.setValue(info.BorderStyle.value)\n        // ColorSelect.setOriColor(\"#5e5e5e\")\n        setBackColor(info.ColorSelect.value)\n        setColorValue(info.ColorSelect.value)\n    }\n}\n\nfunction Borderline_afterrender(sender){\n\n}","vmdcss":"","vmdprops":"\"\"","type":"ux","vmdinterface":"{\"components\":[{\"cid\":\"vmduxprops\",\"layoutConfig\":{},\"userConfig\":{}},{\"cid\":\"vmduxmethods\",\"id\":\"方法\",\"layoutConfig\":{},\"userConfig\":{},\"cn\":[{\"cid\":\"uxmethod\",\"id\":\"getBorderLineInfo\",\"layoutConfig\":{},\"userConfig\":{\"id\":\"getBorderLineInfo\",\"zhname\":\"\",\"bindCmp\":\"\",\"bindValue\":\"\",\"isPublic\":\"on\",\"desc\":\"\",\"uxcid\":\"\",\"params\":\"att\",\"code\":\"//直接填写方法内容\\nvar a;\\nif(att == \\\"BorderStyle\\\") {\\n    a = BorderStyle.getValue()\\n} else if(att == \\\"LineStyle\\\") {\\n    a = LineStyle.getLine()\\n} else if(att == \\\"ColorSelect\\\") {\\n    a = ColorSelect.getSelColor()\\n}\\nreturn a;\",\"returnType\":\"\"}},{\"cid\":\"uxmethod\",\"id\":\"setBorderLineInfo\",\"layoutConfig\":{},\"userConfig\":{\"id\":\"setBorderLineInfo\",\"zhname\":\"\",\"bindCmp\":\"\",\"bindValue\":\"\",\"isPublic\":\"on\",\"desc\":\"\",\"uxcid\":\"\",\"params\":\"info,cell\",\"code\":\"setInfo(info,cell)\",\"returnType\":\"\"}}]},{\"cid\":\"vmduxevents\",\"id\":\"事件\",\"layoutConfig\":{},\"userConfig\":{},\"cn\":[{\"cid\":\"uxevent\",\"id\":\"colorChanged\",\"layoutConfig\":{},\"userConfig\":{\"id\":\"colorChanged\",\"params\":\"color\",\"desc\":\"\"}},{\"cid\":\"uxevent\",\"id\":\"borderStyleChanged\",\"layoutConfig\":{},\"userConfig\":{\"id\":\"borderStyleChanged\",\"params\":\"lineStyle\",\"desc\":\"\"}}]}]}"}