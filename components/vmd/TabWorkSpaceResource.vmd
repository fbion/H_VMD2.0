{"vmdversion":"?ver=2.0.3.0706","vmdlayout":"{\"components\":[{\"cid\":\"uxpanel\",\"id\":\"TabWorkSpaceResource\",\"layoutConfig\":{},\"userConfig\":{\"layout\":\"absolute\",\"header\":false,\"width\":616,\"height\":382,\"beforerender\":\"TabWorkSpaceResource_beforerender\",\"afterrender\":\"TabWorkSpaceResource_afterrender\"},\"cn\":[{\"cid\":\"tabpanel\",\"id\":\"TabsWorkSpaceResource\",\"layoutConfig\":{},\"userConfig\":{\"x\":0,\"y\":0,\"id\":\"TabsWorkSpaceResource\",\"height\":380,\"width\":610,\"activeTab\":0,\"tabchange\":\"TabsWorkSpaceResource_tabchange\",\"beforerender\":\"TabsWorkSpaceResource_beforerender\",\"afterrender\":\"TabsWorkSpaceResource_afterrender\"},\"cn\":[{\"cid\":\"panel\",\"id\":\"panelTabImage\",\"layoutConfig\":{},\"userConfig\":{\"title\":\"图片\",\"id\":\"panelTabImage\",\"layout\":\"absolute\",\"afterrender\":\"panelTabImage_afterrender\"},\"cn\":[{\"cid\":\"vmd.ux.WorkspaceResEdit\",\"id\":\"WorkspaceResEditImage\",\"layoutConfig\":{},\"userConfig\":{\"x\":0,\"y\":0,\"height\":350,\"id\":\"WorkspaceResEditImage\",\"width\":610}}]},{\"cid\":\"panel\",\"id\":\"panelTabJsFile\",\"layoutConfig\":{},\"userConfig\":{\"title\":\"JS文件\",\"id\":\"panelTabJsFile\",\"layout\":\"absolute\",\"afterrender\":\"panelTabJsFile_afterrender\"},\"cn\":[{\"cid\":\"vmd.ux.WorkspaceResEdit\",\"id\":\"WorkspaceResEditJs\",\"layoutConfig\":{},\"userConfig\":{\"x\":0,\"y\":0,\"height\":350,\"id\":\"WorkspaceResEditJs\",\"beforerender\":\"WorkspaceResEditJs_beforerender\",\"afterrender\":\"WorkspaceResEditJs_afterrender\"}}]},{\"cid\":\"panel\",\"id\":\"panelTabTheme\",\"layoutConfig\":{},\"userConfig\":{\"title\":\"主题\",\"id\":\"panelTabTheme\",\"layout\":\"absolute\",\"height\":247,\"afterrender\":\"panelTabTheme_afterrender\"},\"cn\":[{\"cid\":\"vmd.ux.WorkspaceResEdit\",\"id\":\"WorkspaceResEditTheme\",\"layoutConfig\":{},\"userConfig\":{\"x\":0,\"y\":0,\"height\":340,\"id\":\"WorkspaceResEditTheme\",\"width\":610,\"afterrender\":\"WorkspaceResEditTheme_afterrender\",\"onClickBtnAddServer\":\"WorkspaceResEditTheme_onClickBtnAddServer\"}}]}]},{\"cid\":\"vmdButton\",\"id\":\"button\",\"layoutConfig\":{},\"userConfig\":{\"style\":\"position: relative;    margin-right: 20px;    float: right;    top: 4px;\",\"icon\":\" icon-plus\",\"text\":\"添加服务地址\",\"type\":\"text\",\"click\":\"button_click\"}}]},{\"cid\":\"vmddataset\",\"id\":\"数据集\",\"layoutConfig\":{},\"userConfig\":{}}]}","vmdevents":"var page = this;\n\n// 设置工区ID\nfunction setWorkSpaceId(id) {\n    WorkspaceResEditTheme.iSetWorkSpaceId(id);\n    WorkspaceResEditImage.iSetWorkSpaceId(id);\n    WorkspaceResEditJs.iSetWorkSpaceId(id);\n}\n\n// 设置工区ID\nfunction setId(id) {\n    WorkspaceResEditTheme.iSetId(id);\n    WorkspaceResEditImage.iSetId(id);\n    WorkspaceResEditJs.iSetId(id);\n}\n\n// 设置工区ID\nfunction setApplyType(type) {\n    WorkspaceResEditTheme.iSetApplyType(type);\n    WorkspaceResEditImage.iSetApplyType(type);\n    WorkspaceResEditJs.iSetApplyType(type);\n}\n\nfunction queryResource(id) {\n    WorkspaceResEditTheme.iSetWorkSpaceId(id);\n    WorkspaceResEditTheme.iLoadResource(0);\n    WorkspaceResEditImage.iSetWorkSpaceId(id);\n    WorkspaceResEditImage.iLoadResource(1);\n    WorkspaceResEditJs.iLoadResource(2);\n    WorkspaceResEditJs.iSetWorkSpaceId(id);\n}\n\nfunction TabsWorkSpaceResource_tabchange(sender, tab) {\n    if(tab.items) sender.curActiveTab = tab.items.items[0];\n\n    var tabId = tab.id;\n    var tabIndexTheme = tabId.indexOf(\"panelTabTheme\"); // 基于0开始,找不到返回-1\n    var tabIndexImage = tabId.indexOf(\"panelTabImage\"); // 基于0开始,找不到返回-1\n    var tabIndexJs = tabId.indexOf(\"panelTabJsFile\"); // 基于0开始,找不到返回-1\n\n    if(tabIndexTheme > -1) {\n        WorkspaceResEditTheme.iSetResourceType(0);\n        // if(!WorkspaceResEditTheme.iGetIfDataLoaded()) {\n            WorkspaceResEditTheme.iLoadResource(0, 0);\n        // }\n    } else if(tabIndexImage > -1) {\n        WorkspaceResEditImage.iSetResourceType(1);\n        // if(!WorkspaceResEditImage.iGetIfDataLoaded()) {\n            WorkspaceResEditImage.iLoadResource(1, 1);\n        // }\n    } else if(tabIndexJs > -1) {\n        WorkspaceResEditJs.iSetResourceType(2);\n        // if(!WorkspaceResEditJs.iGetIfDataLoaded()) {\n            WorkspaceResEditJs.iLoadResource(2, 2);\n        // }\n    }\n\n}\n\nfunction tabchangeResource() {\n\n    var tabId = TabsWorkSpaceResource.activeTab.id;\n    var tabIndexTheme = tabId.indexOf(\"panelTabTheme\"); // 基于0开始,找不到返回-1\n    var tabIndexImage = tabId.indexOf(\"panelTabImage\"); // 基于0开始,找不到返回-1\n    var tabIndexJs = tabId.indexOf(\"panelTabJsFile\"); // 基于0开始,找不到返回-1\n\n    if(tabIndexTheme > -1) {\n        WorkspaceResEditTheme.iSetResourceType(0);\n        // if(!WorkspaceResEditTheme.iGetIfDataLoaded()) {\n            WorkspaceResEditTheme.iLoadResource(0, 0);\n        // }\n    } else if(tabIndexImage > -1) {\n        WorkspaceResEditImage.iSetResourceType(1);\n        // if(!WorkspaceResEditImage.iGetIfDataLoaded()) {\n            WorkspaceResEditImage.iLoadResource(0, 1);\n        // }\n    } else if(tabIndexJs > -1) {\n        WorkspaceResEditJs.iSetResourceType(2);\n        // if(!WorkspaceResEditJs.iGetIfDataLoaded()) {\n            WorkspaceResEditJs.iLoadResource(0, 2);\n        // }\n    }\n}\n\nfunction ToolbarWorkspaceResourceTheme_onClickBtnAddServer(sender, e) {\n\n    var addResourceServer = function(name, addr, remark) {\n\n        var mytree = treeResourceTheme;\n        var nodeId = vmd.util.guid();\n        // var nodeNameSel = mytree.getSelectedItemText();\n        var resourceServiceName = name;\n        var resourceServiceAddress = addr;\n        var resourceServiceRemark = remark;\n\n        var rootNode = new Ext.tree.TreeNode({\n            id: nodeId,\n            text: resourceServiceName,\n            cls: \"vmd-tree-node\",\n            checked: false\n        });\n\n        rootNode.id = nodeId;\n        rootNode.text = name;\n        rootNode.address = addr;\n        rootNode.remark = remark;\n        // 拖上图片，增加图标\n        // rootNode.setIcon(\"/img/public/{D35D2F80-5F23-46C8-A9EE-CE33B28DD531}.png\");\n        mytree.setRootNode(rootNode); // ???根节点的添加\n\n        // 添加资源中心的服务地址后，需要同步从服务地址\n        // 通过数据服务获取该资源中心有哪些主题添加到服务地址节点下\n        // 此处的主题的展现方式尚需讨论\n        // 获取来的节点数据格式是什么样的？数据集？怎样提取数据？\n        // var treeNode = me.store.data.items[index].data; // ???\n        // 调用服务保存新添加的服务器信息\n\n        // 服务调用，获取主题\n        // var urlService = \"http://192.168.1.186:8888/activiti-rest/service/repository/categorys?info=kermit\";\n        // hwDas.ajax({\n        //     // das: {\n        //     //     idedas: true\n        //     // },\n        //     // das: false,\n\n        //     url: urlService,\n        //     // url: \"http://192.168.1.186:8888/activiti-rest/service/repository/categorys?info=kermit\",\n        //     // einfo=elogin, http://192.168.1.186:8888\n        //     type: 'post',\n        //     timeout: 5000,\n        //     data: { // body传参\n        //         'superId': selId,\n        //         'name': nodename,\n        //         'xh': 1\n        //     },\n        //     success: function(result) {\n\n        //         if(result == \"\") {\n        //             return;\n        //         }\n\n        //         // 获取数据后解析形成树形节点；\n        //         mytree.insertNewChild(selId, result.id, result.name);\n        //         mytree.setItemColor(result.id, '#000000', '#000000');\n        //         mytree.setItemImage2(result.id, \"tree/folderClosed.gif\", \"tree/folderOpen.gif\", \"tree/folderClosed.gif\");\n        //         // mytree.insertNewChild(result.id, result.id + \"-0000\", \"\");\n        //         mytree.closeItem(result.id);\n        //         var treenode = mytree.item(result.id);\n        //         if(treenode) {\n        //             treenode.isTemplate = false; // 标识是否是目标文件\n        //             treenode.childLoaded = true; // 标识是否加载了子节点\n        //             treenode.isDeployment = false; // 标识是否发布\n        //             treenode.url = result.url;\n        //         }\n        //         var objKey = \"hw\" + result.id;\n        //         mytree.itemObj[objKey] = treenode;\n\n        //     },\n        //     error: function(msg) {\n        //         Ext.Msg.alert(\"提示\", \"新建分类失败！\")\n        //     }\n        // })\n    }\n\n    var winForm = new Ext.winAddResourceServer(addResourceServer, \"\", \"\", \"\");\n    winForm.show();\n}\n\nfunction ToolbarWorkspaceResourceTheme_onClickBtnAddCategory(sender, e) {\n    // 主题不需要添加分类节点\n    // 而是添加服务地址后，通过服务获取配置服务器下包含的主题\n}\n\nfunction ToolbarWorkspaceResourceTheme_onClickBtnEdit(sender, e) {\n\n\n    var addResourceServer = function(name, addr, remark) {\n\n        var mytree = treeResourceTheme;\n        var nodeId = vmd.util.guid();\n        var nodeSel = mytree.getSelNode();\n        // var nodeNameSel = mytree.getSelectedItemText();\n        var resourceServiceName = name;\n        var resourceServiceAddress = addr;\n        var resourceServiceRemark = remark;\n\n        var rootNode = new Ext.tree.TreeNode({\n            id: nodeId,\n            text: resourceServiceName,\n            cls: \"vmd-tree-node\",\n            checked: false\n        });\n        // rootNode.setIcon(this.rootImg ? this.rootImg : null); // 图标？？？\n        // 节点数据如何记录，记录格式？？？\n        // 修改信息后同步修改树节点信息，同时调用服务更新数据库中对应的信息；\n        // mytree.setRootNode(rootNode); // ???根节点的添加\n\n        // 添加资源中心的服务地址后，需要同步从服务地址\n        // 通过数据服务获取该资源中心有哪些主题添加到服务地址节点下\n        // 此处的主题的展现方式尚需讨论\n        // 获取来的节点数据格式是什么样的？数据集？怎样提取数据？\n        // var treeNode = me.store.data.items[index].data; // ???\n        // 调用服务保存新添加的服务器信息\n\n        // 服务调用，获取主题\n        // var urlService = \"http://192.168.1.186:8888/activiti-rest/service/repository/categorys?info=kermit\";\n        // hwDas.ajax({\n        //     // das: {\n        //     //     idedas: true\n        //     // },\n        //     // das: false,\n\n        //     url: urlService,\n        //     // url: \"http://192.168.1.186:8888/activiti-rest/service/repository/categorys?info=kermit\",\n        //     // einfo=elogin, http://192.168.1.186:8888\n        //     type: 'post',\n        //     timeout: 5000,\n        //     data: { // body传参\n        //         'superId': selId,\n        //         'name': nodename,\n        //         'xh': 1\n        //     },\n        //     success: function(result) {\n\n        //         if(result == \"\") {\n        //             return;\n        //         }\n\n        //         // 获取数据后解析形成树形节点；\n        //         mytree.insertNewChild(selId, result.id, result.name);\n        //         mytree.setItemColor(result.id, '#000000', '#000000');\n        //         mytree.setItemImage2(result.id, \"tree/folderClosed.gif\", \"tree/folderOpen.gif\", \"tree/folderClosed.gif\");\n        //         // mytree.insertNewChild(result.id, result.id + \"-0000\", \"\");\n        //         mytree.closeItem(result.id);\n        //         var treenode = mytree.item(result.id);\n        //         if(treenode) {\n        //             treenode.isTemplate = false; // 标识是否是目标文件\n        //             treenode.childLoaded = true; // 标识是否加载了子节点\n        //             treenode.isDeployment = false; // 标识是否发布\n        //             treenode.url = result.url;\n        //         }\n        //         var objKey = \"hw\" + result.id;\n        //         mytree.itemObj[objKey] = treenode;\n\n        //     },\n        //     error: function(msg) {\n        //         Ext.Msg.alert(\"提示\", \"新建分类失败！\")\n        //     }\n        // })\n    }\n\n    var nodeSel = treeResourceTheme.getSelNode(); // 能获取选中的节点？？？API\n    // 获取选中节点的信息传递到服务地址配置对话框中\n    var winForm = new Ext.winAddResourceServer(addResourceServer, \"\", \"\", \"\");\n    winForm.show();\n}\n\nfunction ToolbarWorkspaceResourceTheme_onClickBtnDelete(sender, e) {\n    // alert(\"dddddddddd\");\n}\n\n\n// //自定义产生GUID\n// function newGuid(len) {\n//     var length = 32;\n//     if(len)\n//         length = len - 2\n//     var guid = \"\";\n//     for(var i = 1; i <= length; i++) {\n//         var n = Math.floor(Math.random() * 16.0).toString(16);\n//         guid += n;\n//     }\n//     return guid;\n// }\n\n// ???\nfunction treeResourceTheme_afterNodeExpand(sender, node) {\n\n    if(!node) {\n        return;\n    }\n    var mytree = treeResourceTheme;\n    var selnode = node;\n\n    // 从数据库查询当前节点下的资源路径\n\n    // // 如果是文件夹节点\n    // if(!selnode.isTemplate) {\n\n    //     var nodeNullId = nodeId + \"-0000\";\n    //     var nIndex = mytree.getIndexById(nodeNullId);\n    //     if(null != nIndex) {\n    //         if(nIndex > -1) {\n    //             mytree.deleteItem(nodeNullId);\n    //         }\n    //     }\n\n    //     // 获取文件夹下的分类节点和模板节点\n    //     // 分类节点\n    //     getChildCategoryNodes(nodeId);\n    //     // 模板节点\n    //     getChildTemplateNodes(nodeId);\n    // }\n}\n\n\n//添加资源中心服务地址\nExt.winAddResourceServer = Ext.extend(Ext.Window, {\n    xtype: \"window\",\n    title: \"添加资源中心服务地址\",\n    width: 300,\n    height: 200,\n    layout: \"form\",\n    bodyStyle: 'padding:15px',\n    labelAlign: \"left\",\n    labelWidth: 40,\n    modal: true,\n    constructor: function(callback, name, addr, remark) {\n        this.callback = callback;\n        this.valueAddr = addr;\n        this.valueName = name;\n        this.valueRemark = remark;\n        this.callParent();\n    },\n    initComponent: function() {\n        var me = this;\n        this.fbar = [{\n            text: \"确定\",\n            handler: function() {\n                var reg = /[\\w\\-]+(\\.[\\w\\-]+)+([\\w\\-\\.,@?^=%&:\\/~\\+#]*[\\w\\-\\@?^=%&\\/~\\+#])?:([0-9]|[1-9]\\d{1,3}|[1-5]\\d{4}|6[0-5]{2}[0-3][0-5])$/;\n                if(!reg.test(Ext.getCmp('addr').getValue())) {\n                    Ext.Msg.alert(\"提示\", \"请输入正确的服务地址(带端口)！\")\n                    return;\n                }\n                me.callback(Ext.getCmp('name').getValue(), Ext.getCmp('addr').getValue(), Ext.getCmp('remark').getValue());\n                me.close();\n            }\n        }, {\n            text: \"取消\",\n            handler: function() {\n                me.close();\n            }\n        }];\n\n        this.items = [{\n            id: 'name',\n            xtype: \"textfield\",\n            fieldLabel: \"名称\",\n            anchor: \"100%\",\n            value: this.valueName\n        }, {\n            id: 'addr',\n            xtype: \"textfield\",\n            fieldLabel: \"地址\",\n            anchor: \"100%\",\n            value: this.valueAddr,\n            regex: /[\\w\\-]+(\\.[\\w\\-]+)+([\\w\\-\\.,@?^=%&:\\/~\\+#]*[\\w\\-\\@?^=%&\\/~\\+#])?:([0-9]|[1-9]\\d{1,3}|[1-5]\\d{4}|6[0-5]{2}[0-3][0-5])$/,\n            regexText: \"输入标准的服务器地址（带端口）！\"\n        }, {\n            id: 'remark',\n            xtype: \"textfield\",\n            fieldLabel: \"说明\",\n            anchor: \"100%\",\n            value: this.valueRemark\n        }]\n        Ext.winAddResourceServer.superclass.initComponent.call(this);\n    }\n})\n\n\n//添加资源目录\nExt.winAddResourceCategory = Ext.extend(Ext.Window, {\n    xtype: \"window\",\n    title: \"添加资源目录\",\n    width: 300,\n    height: 200,\n    layout: \"form\",\n    bodyStyle: 'padding:15px',\n    labelAlign: \"left\",\n    labelWidth: 40,\n    modal: true,\n    constructor: function(callback, name, addr, remark) {\n        this.callback = callback;\n        this.valueAddr = addr;\n        this.valueName = name;\n        this.valueRemark = remark;\n        this.callParent();\n    },\n    initComponent: function() {\n        var me = this;\n        this.fbar = [{\n            text: \"确定\",\n            handler: function() {\n                var reg = /[\\w\\-]+(\\.[\\w\\-]+)+([\\w\\-\\.,@?^=%&:\\/~\\+#]*[\\w\\-\\@?^=%&\\/~\\+#])?:([0-9]|[1-9]\\d{1,3}|[1-5]\\d{4}|6[0-5]{2}[0-3][0-5])$/;\n                if(!reg.test(Ext.getCmp('addr').getValue())) {\n                    Ext.Msg.alert(\"提示\", \"请输入正确的服务地址（带端口）！\")\n                    return;\n                }\n                me.callback(Ext.getCmp('name').getValue(), Ext.getCmp('addr').getValue(), Ext.getCmp('remark').getValue());\n                me.close();\n            }\n        }, {\n            text: \"取消\",\n            handler: function() {\n                me.close();\n            }\n        }];\n\n        this.items = [{\n            id: 'name',\n            xtype: \"textfield\",\n            fieldLabel: \"选择文件所在目录\",\n            anchor: \"100%\",\n            value: this.valueName\n        }, {\n            id: 'addr',\n            xtype: \"textfield\",\n            fieldLabel: \"地址\",\n            anchor: \"100%\",\n            value: this.valueAddr,\n            regex: /[\\w\\-]+(\\.[\\w\\-]+)+([\\w\\-\\.,@?^=%&:\\/~\\+#]*[\\w\\-\\@?^=%&\\/~\\+#])?:([0-9]|[1-9]\\d{1,3}|[1-5]\\d{4}|6[0-5]{2}[0-3][0-5])$/,\n            regexText: \"输入标准的服务器地址（带端口）！\"\n        }, {\n            id: 'remark',\n            xtype: \"textfield\",\n            fieldLabel: \"说明\",\n            anchor: \"100%\",\n            value: this.valueRemark\n        }]\n        Ext.winAddResourceServer.superclass.initComponent.call(this);\n    }\n})\n\nfunction ToolbarWorkspaceResourceImage_onClickBtnAddServer(sender, e) {\n\n    var addResourceServer = function(name, addr, remark) {\n        var mytree = treeResourceImage;\n        var nodeId = vmd.util.guid();\n        // var nodeNameSel = mytree.getSelectedItemText();\n        var resourceServiceName = name;\n        var resourceServiceAddress = addr;\n        var resourceServiceRemark = remark;\n\n        var rootNode = new Ext.tree.TreeNode({\n            id: nodeId,\n            text: resourceServiceName,\n            cls: \"vmd-tree-node\",\n            checked: false\n        });\n        rootNode.setIcon(this.rootImg ? this.rootImg : null); // 图标？？？\n        // 节点数据如何记录，记录格式？？？\n        mytree.setRootNode(rootNode); // ???根节点的添加\n    }\n    var winForm = new Ext.winAddResourceServer(addResourceServer, \"\", \"\", \"\");\n    winForm.show();\n}\n\nfunction ToolbarWorkspaceResourceImage_onClickBtnAddCategory(sender, e) {\n\n    var addCategoryNode = function(idCategory, strCategory) {\n        var mytree = treeResourceImage;\n        var nodeSel = mytree.getSelNode(); // ???参考API\n        var nodeId = vmd.util.guid();\n\n        var cnode = new Ext.tree.TreeNode({\n            id: nodeId,\n            checked: false,\n            // icon: me.leafImg ? me.leafImg : null, // ???\n            cls: \"vmd-tree-node\",\n            text: strCategory\n        });\n        cnode.nodeDataJson = treeNode; // 怎样记录节点数据？？？\n        nodeSel.appendChild(cnode);\n    }\n    var winForm = new Ext.winWorkFlowCategory(addCategoryNode, \"\");\n    winForm.show();\n}\n\nfunction ToolbarWorkspaceResourceImage_onClickBtnEdit(sender, e) {\n\n    // alert(\"cccccccccc\");\n}\n\nfunction ToolbarWorkspaceResourceImage_onClickBtnDelete(sender, e) {\n\n    // alert(\"ddddddd\");\n}\n\n// // 2018.05.11：选择文件所在目录窗体\n// function openWin(obj, html, parname, par) {\n//     window[parname] = par;\n//     var openWinFrom = new Ext.Window(obj || {\n//         title: \"节点绑定表单\",\n//         modal: true,\n//         maximized: false,\n//         height: 600,\n//         width: 800,\n//         maximizable: true,\n//         resizable: true,\n//         bodyStyle: \"background-color:#fff\",\n//         closeAction: 'close'\n\n//     })\n//     Ext.defer(function() {\n//         openWinFrom.html = html; //\"<iframe src='\"+vmd.core.getVirtualPath()+\"modules/eQ9ULgcVb1/hw4acf2f8b/hw3b434d49.html?r=\" + new Date().getTime() + \"' frameborder=0 scrolling=no style='height:100%;width:100%'></iframe>\";\n//         openWinFrom.show()\n//     }, 50)\n\n//     window[\"openWinFrom\"] = openWinFrom;\n//     return openWinFrom;\n// }\n// window[\"openWin\"] = openWin;\n\nfunction TabWorkSpaceResource_beforerender(sender) {\n\n}\n\nfunction panelTabTheme_afterrender(sender) {\n    // WorkspaceResEditTheme.iLoadResource(0);\n}\n\nfunction panelTabImage_afterrender(sender) {\n\n    // WorkspaceResEditImage.iLoadResource(1);\n}\n\nfunction panelTabJsFile_afterrender(sender) {\n\n    // WorkspaceResEditJs.iLoadResource(2);\n}\n\nfunction TabWorkSpaceResource_afterrender(sender) {\n\n\n}\n\nfunction WorkspaceResEditJs_beforerender(sender) {\n    // console.log(\"第二层组件的WorkspaceResEditJs_beforerender\");\n    // WorkspaceResEditImage.iSetDataStore(page.dataStore);\n}\n\nfunction WorkspaceResEditJs_afterrender(sender) {\n\n    // console.log(\"第二层组件的WorkspaceResEditJs_afterrender\");\n}\n\nfunction WorkspaceResEditTheme_afterrender(sender) {\n    WorkspaceResEditTheme.iShowAddCategoryBtn(false);\n}\n\nfunction clearAll(sender) {\n    WorkspaceResEditTheme.iClearAll();\n    WorkspaceResEditImage.iClearAll();\n    WorkspaceResEditJs.iClearAll();\n}\n\nfunction TabsWorkSpaceResource_beforerender(sender) {\n\n}\n\nfunction setIfDataLoaded(bVar) {\n    WorkspaceResEditTheme.iSetIfDataLoaded(bVar);\n    WorkspaceResEditImage.iSetIfDataLoaded(bVar);\n    WorkspaceResEditJs.iSetIfDataLoaded(bVar);\n}\n\nfunction TabsWorkSpaceResource_afterrender(sender) {\n    WorkspaceResEditTheme.iShowAddCategoryBtn(false);\n}\n\nfunction button_click(sender, e) {\n    //   var curActiveTab=TabsWorkSpaceResource.curActiveTab;\n    //   curActiveTab&& curActiveTab.addServer();\n\n    btnAddServer();\n}\n\n\nfunction btnAddServer() {\n    var addResourceServer = function(name, addr, remark) {\n        var id = vmd.util.guid();\n        // var nameTmp = name + \"(资源中心)\";\n        // WorkspaceResEditTheme.isAddServeData(id, nameTmp, addr, remark,0);\n        // WorkspaceResEditTheme.isAddServeData(id, nameTmp, addr, remark,1);\n        // WorkspaceResEditTheme.isAddServeData(id, nameTmp, addr, remark,2);\n        WorkspaceResEditTheme.iAddServer(id, name, addr, remark, 0);\n        WorkspaceResEditImage.iAddServer(id, name, addr, remark, 1);\n        WorkspaceResEditJs.iAddServer(id, name, addr, remark, 2);\n\n    }\n\n    var winForm = new Ext.winAddResourceServer(addResourceServer, \"\", \"\", \"\");\n    winForm.show();\n}\n\nfunction WorkspaceResEditTheme_onClickBtnAddServer(sender, e) {\n\n}","vmdcss":"","vmdprops":"\"\"","type":"ux","vmdinterface":"{\"components\":[{\"cid\":\"vmduxprops\",\"layoutConfig\":{},\"userConfig\":{}},{\"cid\":\"vmduxmethods\",\"id\":\"方法\",\"layoutConfig\":{},\"userConfig\":{},\"cn\":[{\"cid\":\"uxmethod\",\"id\":\"iSetWorkSpaceId\",\"layoutConfig\":{},\"userConfig\":{\"id\":\"iSetWorkSpaceId\",\"zhname\":\"\",\"bindCmp\":\"\",\"bindValue\":\"\",\"isPublic\":\"on\",\"desc\":\"设置工区ID\",\"uxcid\":\"\",\"params\":\"id\",\"code\":\"//直接填写方法内容\\nsetWorkSpaceId(id);\",\"returnType\":\"无\"}},{\"cid\":\"uxmethod\",\"id\":\"iSetDataStore\",\"layoutConfig\":{},\"userConfig\":{\"id\":\"iSetDataStore\",\"zhname\":\"\",\"bindCmp\":\"\",\"bindValue\":\"\",\"isPublic\":\"on\",\"desc\":\"\",\"uxcid\":\"\",\"params\":\"store\",\"code\":\"//直接填写方法内容\\ndebugger\\nthis.dataStore = store;\",\"returnType\":\"\"}},{\"cid\":\"uxmethod\",\"id\":\"iSetId\",\"layoutConfig\":{},\"userConfig\":{\"id\":\"iSetId\",\"zhname\":\"\",\"bindCmp\":\"\",\"bindValue\":\"\",\"isPublic\":\"on\",\"desc\":\"设置ID\",\"uxcid\":\"\",\"params\":\"id\",\"code\":\"//直接填写方法内容\\nsetId(id);\",\"returnType\":\"无\"}},{\"cid\":\"uxmethod\",\"id\":\"iSetApplyType\",\"layoutConfig\":{},\"userConfig\":{\"id\":\"iSetApplyType\",\"zhname\":\"\",\"bindCmp\":\"\",\"bindValue\":\"\",\"isPublic\":\"on\",\"desc\":\"\",\"uxcid\":\"\",\"params\":\"type\",\"code\":\"//直接填写方法内容\\nsetApplyType(type);\",\"returnType\":\"无\"}},{\"cid\":\"uxmethod\",\"id\":\"iClearAll\",\"layoutConfig\":{},\"userConfig\":{\"id\":\"iClearAll\",\"zhname\":\"\",\"bindCmp\":\"\",\"bindValue\":\"\",\"isPublic\":\"on\",\"desc\":\"清空所有资源信息\",\"uxcid\":\"\",\"params\":\"\",\"code\":\"//直接填写方法内容\\nclearAll();\",\"returnType\":\"无\"}},{\"cid\":\"uxmethod\",\"id\":\"iQueryResource\",\"layoutConfig\":{},\"userConfig\":{\"id\":\"iQueryResource\",\"zhname\":\"\",\"bindCmp\":\"\",\"bindValue\":\"\",\"isPublic\":\"on\",\"desc\":\"根据ID获取资源\",\"uxcid\":\"\",\"params\":\"id\",\"code\":\"//直接填写方法内容\\nqueryResource(id);\",\"returnType\":\"无\"}},{\"cid\":\"uxmethod\",\"id\":\"iSetIfDataLoaded\",\"layoutConfig\":{},\"userConfig\":{\"id\":\"iSetIfDataLoaded\",\"zhname\":\"\",\"bindCmp\":\"\",\"bindValue\":\"\",\"isPublic\":\"on\",\"desc\":\"设置数据是否已经查询了\",\"uxcid\":\"\",\"params\":\"bVar\",\"code\":\"//直接填写方法内容\\nsetIfDataLoaded(bVar);\",\"returnType\":\"无\"}},{\"cid\":\"uxmethod\",\"id\":\"iTabChangeResource\",\"layoutConfig\":{},\"userConfig\":{\"id\":\"iTabChangeResource\",\"params\":\"\",\"desc\":\"TabChange显示资源Tab页\",\"hwCheckbox\":\"无\",\"isPublic\":\"on\",\"code\":\"//直接填写方法内容\\ntabchangeResource();\",\"returnType\":\"无\"}}]},{\"cid\":\"vmduxevents\",\"id\":\"事件\",\"layoutConfig\":{},\"userConfig\":{}}]}"}