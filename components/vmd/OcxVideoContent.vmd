{"vmdversion":"2.0.3.0830","vmdlayout":"{\"components\":[{\"cid\":\"uxpanel\",\"id\":\"OcxVideoContent\",\"layoutConfig\":{},\"userConfig\":{\"layout\":\"anchor\",\"header\":false,\"width\":886,\"height\":591,\"afterrender\":\"OcxVideoContent_afterrender\"},\"cn\":[{\"cid\":\"panel\",\"id\":\"panel2\",\"layoutConfig\":{},\"userConfig\":{\"region\":\"west\",\"header\":false,\"border\":false,\"hidden\":false,\"anchor\":\"100% 100%\",\"layout\":\"border\"},\"cn\":[{\"cid\":\"panel\",\"id\":\"panel\",\"layoutConfig\":{},\"userConfig\":{\"x\":100,\"y\":90,\"region\":\"center\",\"header\":false,\"height\":547,\"layout\":\"border\",\"border\":false},\"cn\":[{\"cid\":\"container\",\"id\":\"div3\",\"layoutConfig\":{},\"userConfig\":{\"anchor\":\"100% 100%\",\"html\":\"<object classid=\\\"clsid:D5E14042-7BF6-4E24-8B01-2F453E8154D7\\\" id=\\\"RealTimePlayOcx\\\" width=\\\"100%\\\" height=\\\"100%\\\" name=\\\"RealTimePlayOcx\\\">\\n    <param name=\\\"theme\\\" value=\\\"blue\\\">\\n    <param name=\\\"showType\\\" value=\\\"1\\\"></object>\",\"border\":false,\"hidden\":false,\"region\":\"center\"}}]},{\"cid\":\"panel\",\"id\":\"panel1\",\"layoutConfig\":{\"align\":\"middle\",\"pack\":\"end\"},\"userConfig\":{\"region\":\"south\",\"header\":false,\"height\":30,\"layout\":\"hbox\",\"border\":false},\"cn\":[{\"cid\":\"container\",\"id\":\"div\",\"layoutConfig\":{\"align\":\"middle\",\"pack\":\"start\"},\"userConfig\":{\"layout\":\"hbox\",\"height\":30,\"width\":420,\"border\":false},\"cn\":[{\"cid\":\"vmdButton\",\"id\":\"button1\",\"layoutConfig\":{},\"userConfig\":{\"text\":\"首 页\",\"margins\":\"0 10 0 0\",\"click\":\"button1_click\"}},{\"cid\":\"vmdButton\",\"id\":\"button2\",\"layoutConfig\":{},\"userConfig\":{\"text\":\"上一页\",\"margins\":\"0 10 0 0\",\"click\":\"button2_click\"}},{\"cid\":\"vmdButton\",\"id\":\"button3\",\"layoutConfig\":{},\"userConfig\":{\"text\":\"下一页\",\"margins\":\"0 10 0 0\",\"click\":\"button3_click\"}},{\"cid\":\"vmdButton\",\"id\":\"button4\",\"layoutConfig\":{},\"userConfig\":{\"text\":\"尾 页\",\"margins\":\"0 10 0 0\",\"click\":\"button4_click\"}},{\"cid\":\"label\",\"id\":\"label\",\"layoutConfig\":{},\"userConfig\":{\"html\":\"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\",\"margins\":\"0 10 0 0 \"}},{\"cid\":\"label\",\"id\":\"label2\",\"layoutConfig\":{},\"userConfig\":{\"text\":\"到第\",\"margins\":\"0 5 0 0\"}},{\"cid\":\"vmd.ux.PageCheck\",\"id\":\"PageCheck\",\"layoutConfig\":{},\"userConfig\":{\"margins\":\"0 5 0 0 \"}},{\"cid\":\"label\",\"id\":\"label3\",\"layoutConfig\":{},\"userConfig\":{\"text\":\"页\",\"margins\":\"0 5 0 0 \"}},{\"cid\":\"vmdButton\",\"id\":\"button5\",\"layoutConfig\":{},\"userConfig\":{\"text\":\"确定\",\"width\":30,\"size\":\"mini\",\"margins\":\"0 5 0 0 \",\"click\":\"button5_click\"}}]}]}]},{\"cid\":\"panel\",\"id\":\"panel3\",\"layoutConfig\":{},\"userConfig\":{\"region\":\"center\",\"header\":false,\"border\":false,\"layout\":\"border\",\"hidden\":true,\"anchor\":\"100% 100%\"},\"cn\":[{\"cid\":\"container\",\"id\":\"div_error\",\"layoutConfig\":{\"align\":\"middle\",\"pack\":\"center\"},\"userConfig\":{\"region\":\"center\",\"width\":614,\"height\":386,\"id\":\"div_error\",\"border\":false,\"style\":\"font-size: 16px;font-family: '微软雅黑';\",\"layout\":\"hbox\"},\"cn\":[{\"cid\":\"vmdButton\",\"id\":\"button\",\"layoutConfig\":{},\"userConfig\":{\"type\":\"text\",\"hidden\":false,\"click\":\"button_click\",\"text\":\"\",\"style\":\"font-size: 16px;font-family: '微软雅黑';\"}}]}]}]}]}","vmdevents":"//操作时间：2018.8.6\n//操作人：焦欣欣\n//功能：视频功能\nvar tree_nodes; //= '966f1583-794d-4640-aee4-c6a71f91e118,966f1583-794d-4640-aee4-c6a71f91e117,966f1583-794d-4640-aee4-c6a71f91e116'; // 树形节点\nvar suoding; //锁定\nvar ggbj = 1; //更改布局\nvar totalPage = 0; //监控点总页数\nvar sumCount = 0; //监控点总个数\nvar pageSize; //每页显示几个监控点\nvar currentPage = 1; //当前页\nvar lunBoTimes = 1; //轮播时间\nvar page = this;\nvar pageEnable;\nvar ycxj_val=\"\";//远程巡检  调用视频监控（陈晓宇 2018-12-3）\n//主页面：获取树形最终传过来的ID串、更改布局值、锁定设备ID串、\n//是否是重点井（0:导航树  1:重点井）、重点监控下边的类别、\n//标识是主页面进入的还是轮播进入的\nfunction get_val(tree_nodes, buju, suoding, iszd, type, sign, loginName) {debugger\n    //alert('jxx=树：' + tree_nodes + '布局：' + buju + '是否重点：' + iszd + '类别：' + type + '标识：' + sign+\",loginName\"+loginName)\n    //tree_nodes = '966f1583-794d-4640-aee4-c6a71f91e150';\n    //iszd = '';\n    if(tree_nodes.indexOf('ycxj')!=-1){\n    page.ycxj_val=tree_nodes.substring(0,4);//从 “远程巡检调用视频监控”界面显示视频时，传的标识值\n    page.tree_nodes = tree_nodes.substring(4);\n   }else{ \n       page.ycxj_val=\"\";\n       page.tree_nodes = tree_nodes;\n   }\n       page.ggbj = buju;\n    page.suoding = suoding;\n    page.iszd = iszd;\n    page.type = type;\n    page.sign = sign; //主页面传进来为空的\n    page.loginName = loginName;\n    refreshVideo();\n}\n//大屏展示轮播页面\n//树节点、布局、锁定、是否是重点：1重点  0导航、\n//重点下边的类别、标识：主页面进入还是轮播页面进入、轮播时间\nfunction get_lunbo_val(tree_nodes, buju, suoding, iszd, type, sign, lunbotime, loginName) {\n    //alert('jxx=树：' + tree_nodes + '布局：' + buju + '是否重点：' + iszd + '类别：' + type + '标识：' + sign + ',轮播时间：' + lunbotime+\",loginName\"+loginName)\n    page.tree_nodes = tree_nodes;\n    page.ggbj = buju;\n    page.suoding = suoding;\n    page.iszd = iszd;\n    page.type = type;\n    page.sign = sign; //如果是主页面进入值为空，如果是轮播页面进入值为lunbo\n    page.loginName = loginName;\n    if(lunbotime != '') {\n        lunBoTimes = lunbotime;\n    } \n    refreshVideo();\n}\n\n\n//弹一下，看是否得到值\nvar isConnect = false;\n\nfunction refreshVideo() {\n    IEVersion();\n    currentPage = 1;\n    PageCheck.set_val(currentPage); //跳转页\n    //判断是从主页面进入的、还是从轮播进入的、回放页面进入的\n    if(page.sign == 'lunbo') {\n        //panel1.hide(); //轮播页面不需要分页\n        panel1.setVisible(false); //轮播页面不需要分页\n        panel2.doLayout();\n    } else {\n        panel1.show(); //主页面和回放页面需要分页\n    }\n    suoding = page.suoding; //锁定\n    //RealTimePlayOcx.GetWndNum()  获取布局个数  1，4，9，16\n    if(page.ggbj !== undefined && page.ggbj !== '') {\n        ggbj = page.ggbj //== RealTimePlayOcx.GetWndNum() ? page.ggbj : RealTimePlayOcx.GetWndNum(); //更改布局\n    } else {\n        ggbj = 1 //== RealTimePlayOcx.GetWndNum() ? 4 : RealTimePlayOcx.GetWndNum(); //更改布局\n    }\n    //ggbj = 4;\n    pageSize = ggbj;\n    if(page.tree_nodes !== undefined && page.tree_nodes !== '') {\n        tree_nodes = page.tree_nodes; //树形节点\n        var arr = tree_nodes.split(',');\n        sumCount = arr.length;\n        totalPage = GetTotalPage(sumCount, pageSize);\n        label.setText('共' + totalPage + '页');\n    } else {\n        tree_nodes = '';\n        label.setText('共' + totalPage + '页');\n    }\n    //加载js文件\n    // vmd.loadCss(bootPATH + 'lib/webuploader/webuploader.css');\n    // vmd.loadCss(bootPATH + 'js/plugins/file/file.css');\n    $LAB.script(bootPATH + 'components/ux/ocxvideocontent/js/jkl-dumper.js')\n        .script(bootPATH + 'components/ux/ocxvideocontent/js/ObjTree.js')\n        .script(bootPATH + 'components/ux/ocxvideocontent/js/mqttws31.js')\n        .wait(function() { //加载成功\n            //要在这里调用你的方法，因为这里是最安全的，你之前不再这里写的是侥幸可以，能明白吗\n\n            //==========这个是为了调整点击5个节点，视频页面自动显示第5个视频=====\n            currentPage = totalPage; //显示最后一页\n            PageCheck.set_val(currentPage);\n            //===========end========= \n            initData(currentPage);\n            //预测报警,这样你试试 \n\n            if(!page.foreState) {\n                page.foreState = true;\n                ForecastAlarm();\n                // var urlval1='songNan/video/getallvideo';\n                var urlval1='XXHTS/monitor/rtmonitor/SPJK/video/getallvideo';\n                hwDas.ajax({\n                    das: {\n                        idedas: true\n                    },\n                    url: urlval1,\n                    type: 'get',\n                    params: '',\n                    success: function(result) {\n                        if(result.data[0].datas.length > 0) //从数据库里查询出来的监控点的数据\n                        {\n                            if(page.sign==\"lunbo\")//轮播页面进入\n                            {}\n                            else//主页面进入\n                              {  \n                                  // 从“远程巡检调用视频监控”界面显示视频时，不弹出异常报警窗口（陈晓宇2018-12-3）\n                                 if(page.ycxj_val=='ycxj')\n                                  {\n                                      \n                                  }else{\n                                    ShowForecastAlarm();\n                                  }\n                              }\n                        }\n                    }\n                })\n\n            }\n        })\n    //不要把业务逻辑耦合到组件内部，要尽量多的以属性、方法、和事件的形式 \n    //==========================事件start==================================\n    // var script = document.createElement(\"script\");\n    // //创建language标签\n    // script.setAttribute('language', 'javascript')\n    // //创建for标签\n    // script.setAttribute('for', 'RealTimePlayOcx')\n    // //创建event标签\n    // script.event = \"FireSelectWindow(xmlParament,lWndIndex)\";\n    // //创建script 内容\n    // script.innerHTML = \"alert('FireCatchPicParam('+xmlParament+','+lWndIndex +')');\";\n    // document.getElementsByTagName(\"head\")[0].appendChild(script);\n    //==========================end==================================\n\n}\n\nfunction OcxVideoContent_afterrender(sender) {\n\n}\n//关闭轮播层触发\nfunction initVideo() {\n    document.getElementById(div3.id).innerHTML = '<object classid=\"clsid:D5E14042-7BF6-4E24-8B01-2F453E8154D7\" id=\"RealTimePlayOcx\" width=\"100%\" height=\"100%\" name=\"RealTimePlayOcx\">' +\n        '<param name=\"theme\" value=\"blue\">' +\n        '<param name=\"showType\" value=\"1\"></object>';\n}\n\nfunction Get_lunbo_CurrentPage(ggbj, datas) {\n    var Num = ggbj; //视频组合长度\n    var arr1 = datas.split(','); //视频组合前数组\n    var videArr = [] //视频组合后数组\n    var videComb = []; //单组视频变量\n    //组合第一组视频id\n    for(var i = 0; i < Num; i++) {\n        videComb.push(arr1[i]);\n        if(i == Num - 1) {\n            videArr.push(videComb);\n        }\n    }\n    //倒序组合剩余视频id\n    for(var i = arr1.length - 1; i > 0; i--) {\n        videComb = [];\n        //判断需要组合的视频组索引是否小于或等于需要组合的数组长度，如果小于或等于，使用当前循环索引获取；\n        //否则先使用当前循环索引获取【视频组合前数组】的id给单组视频数组添加，因为需要获取的单组视频id还不够已经定义的视频组合长度，但是已超出【视频组合前数组】索引，所以使用求余数的方式获取剩余的单组视频id\n        if(i + (Num - 1) <= arr1.length - 1) {\n            for(var z = i; z < i + (Num); z++) {\n                videComb.push(arr1[z]);\n            }\n        } else {\n            for(var j = i; j < arr1.length; j++) {\n                videComb.push(arr1[j]);\n            }\n            var kLen = (i + (Num - 1)) % (arr1.length - 1);\n            for(var k = 0; k < kLen; k++) {\n                videComb.push(arr1[k]);\n            }\n        }\n        videArr.push(videComb);\n    }\n    return videArr;\n}\n\n\n\n//计算总页数\nfunction GetTotalPage(sumCount, pageSize) {\n    totalPage = 0;\n    if(sumCount !== undefined) {\n        if(sumCount / pageSize > parseInt(sumCount / pageSize)) {\n            totalPage = parseInt(sumCount / pageSize) + 1;\n        } else {\n            totalPage = parseInt(sumCount / pageSize);\n        }\n    }\n    return totalPage;\n}\n//初始化得到监控点数据\nfunction initData(currentPage) {\n    BtnDisable(); //不可用\n    var startRow = (currentPage - 1) * pageSize; //开始显示的监控点\n    var endRow = currentPage * pageSize; //结束显示的监控点\n    initGetVideoInfoByIdpage(tree_nodes, startRow, endRow);\n}\nvar str_xml_arr = '';\nvar lunboresult = '';\n//根据树节点选择的id或者初始化得到重点井的监控点id   获取到监控点所有信息\nfunction initGetVideoInfoByIdpage(val, startRow, endRow) {\n\n    var RealTimePlayOcx = document.getElementById(\"RealTimePlayOcx\");\n    var res = RealTimePlayOcx.StopAllPreview(); //停止所有预览\n    RealTimePlayOcx.SetPtzServer(\"<?xml version='1.0'?><PTZServe><ServIP>10.22.48.29</ServIP><ServPort>7000</ServPort><Priority>50</Priority></PTZServe>\");\n    RealTimePlayOcx.SetWndNum(ggbj);\n    var param = {};\n    // var urlval = \"songNan/video/videoInfoByEquipmentId\";\n    var urlval = \"XXHTS/monitor/rtmonitor/SPJK/video/videoInfoByEquipmentId\";\n\n    if(page.iszd == '1') //是0：导航  1：重点井，那么就=0否则!=0 ,排序按照desc，否则不排序\n    {\n        param = {\n            equipment_id: val,\n            iseq: 0,\n            loginid: page.loginName,\n            classid: page.type\n        };\n    } else if(page.iszd == '0') {\n        param = {\n            equipment_id: val,\n            iseq: 1\n        };\n    }\n    hwDas.ajax({\n        das: {\n            idedas: true\n        },\n        url: urlval,\n        type: 'get',\n        params: param,\n        success: function(result) {\n            debugger;\n            if(result.data[0].datas.length > 0) //从数据库里查询出来的监控点的数据\n            {\n                endRow = result.data[0].datas.length < endRow ? result.data[0].datas.length : endRow;\n                if(page.sign == 'lunbo') { //轮播页面\n                    if(result.data[0].datas.length > ggbj) //个数大于布局的个数才会轮播\n                    {\n                        if(ggbj == 1) { //更改布局为1的时候，开始轮播\n                            lunboresult = '';\n                            lunboresult = result;\n                            LunBoSetTimeOut_One();\n                        } else //更改布局为4、9的时候，开始轮播\n                        {\n                            str_xml_arr = '';\n                            var alldatastr = '';\n                            var startR = 0;\n                            for(var i = 0; i < result.data[0].datas.length; i++) {\n                                alldatastr += getlunboDataInfo(result, i) + ',';\n                            }\n                            alldatastr = alldatastr.substring(0, alldatastr.length - 1);\n                            str_xml_arr = Get_lunbo_CurrentPage(ggbj, alldatastr);\n                            if(str_xml_arr.length > 0) {\n                                LunBoSetTimeOut();\n                            }\n                        }\n                    } else {\n                        for(var i = startRow; i < endRow; i++) {\n                            var j; //为了显示视频的速度快些，对间隔时间进行了处理\n                            if(i == 0)\n                                j = 1;\n                            else\n                                j = (i - (startRow - 1));\n                            (function(i) {\n                                setTimeout(function() {\n                                    getDataInfo(result, i);\n                                    if(i == (endRow - 1)) {\n                                        BtnEnable();\n                                        div_progress.hide(); //是否初始化完成  \n                                    }\n                                }, j * 1000);\n                            })(i)\n                        }\n                    }\n                } else {\n                    for(var i = startRow; i < endRow; i++) {\n                        var j; //为了显示视频的速度快些，对间隔时间进行了处理\n                        if(i == 0)\n                            j = 1;\n                        else\n                            j = (i - (startRow - 1));\n                        (function(i) {\n                            setTimeout(function() {\n                                //主页面\n                                getDataInfo(result, i);\n                                if(i == (endRow - 1)) {\n                                    BtnEnable();\n                                    div_progress.hide();\n                                }\n                            }, j * 1000);\n                        })(i)\n                    }\n                }\n\n            } else //从数据库里查询出空数据\n            {\n                return;\n            }\n        },\n        error: function(msg) {\n            Ext.Msg.alert(\"提示\", \"失败信息：\" + msg);\n            return;\n        }\n    })\n}\n\nvar cur = 1;\n\nfunction LunBoSetTimeOut_One() {\n    var RealTimePlayOcx = document.getElementById(\"RealTimePlayOcx\");\n    var res = RealTimePlayOcx.StopAllPreview(); //停止所有预览 \n    var startR = (cur - 1) * pageSize; //开始显示的监控点\n    var endR = cur * pageSize; //结束显示的监控点\n    for(var i = startR; i < endR; i++) {\n        (function(i) {\n            setTimeout(function() {\n                getDataInfo(lunboresult, i);\n                cur++;\n                if(i == lunboresult.data[0].datas.length - 1) {\n                    cur = 1;\n                }\n                setTimeout(LunBoSetTimeOut_One, lunBoTimes * 1000); //1分钟60000\n            }, i * 1000);\n        })(i)\n    }\n\n}\nvar lunbotemp = 0;\n\nfunction LunBoSetTimeOut() {\n    var RealTimePlayOcx = document.getElementById(\"RealTimePlayOcx\");\n    var res = RealTimePlayOcx.StopAllPreview(); //停止所有预览 \n    var currentPage_arr = str_xml_arr[lunbotemp]; //当前页面的一组xml\n    if(currentPage_arr.length > 0) {\n        for(var k = 0; k < currentPage_arr.length; k++) {\n            (function(k) {\n                setTimeout(function() {\n                    var one_xml = currentPage_arr[k];\n                    RealTimePlayOcx.StartTask_Preview_InWnd(one_xml, k);\n                    if(k == currentPage_arr.length - 1) {\n                        lunbotemp++;\n                        if(lunbotemp == currentPage_arr.length)\n                            lunbotemp = 0;\n                        setTimeout(LunBoSetTimeOut, lunBoTimes * 1000);\n                    }\n                }, k * 1000);\n            })(k)\n        }\n    }\n}\n\n//得到主页面的数据信息\nfunction getDataInfo(result, i) {\n    var MATRIXCODE = result.data[0].datas[i][\"matrixcode\"]; //云台矩阵\n    var MONITORID = result.data[0].datas[i][\"monitorid\"]; //显示器ID\n    var CAMERAID = result.data[0].datas[i][\"cameraid\"]; //监控点id\n    var EQUIPMENT_NAME = result.data[0].datas[i][\"equipment_name\"]; //监控点名称\n    var DEVICEIP = result.data[0].datas[i][\"deviceip\"]; //监控点IP\n    var DEVICEPORT = result.data[0].datas[i][\"deviceport\"]; //监控点port\n    var DEVICETYPE = result.data[0].datas[i][\"devicetype\"]; //设备类型\n    var USER = result.data[0].datas[i][\"username\"]; //监控点username\n    var PASSWORD = result.data[0].datas[i][\"password\"]; //监控点password\n    var CHANNELNUM = result.data[0].datas[i][\"channelnum\"]; //摄像头所在视频源设备中的通道号(硬盘录像机)或摄像头ID(海康流媒体服务器)\n    var PROTOCOLTYPE = result.data[0].datas[i][\"protocoltype\"]; //协议类型0 - TCP， 1 - UDP\n    var STREAMTYPE = result.data[0].datas[i][\"streamtype\"]; //码流类型0 表示主码流， 1 表示子码流\n    var SRVIP = result.data[0].datas[i][\"srvip\"]; //流媒体IP地址（可以没有，也可以有多个）\n    var PORT = result.data[0].datas[i][\"port\"]; //流媒体端口号（可以没有，也可以有多个）\n    var CAMERAINDEXCODE = result.data[0].datas[i][\"cameraindexcode\"]; //级联预览字段\n    var str = {\n        Parament: [{\n            MatrixCode: MATRIXCODE,\n            MonitorID: MONITORID,\n            CameraID: CAMERAID,\n            CameraName: EQUIPMENT_NAME,\n            DeviceIP: DEVICEIP,\n            DevicePort: DEVICEPORT,\n            DeviceType: DEVICETYPE,\n            User: USER,\n            Password: PASSWORD,\n            ChannelNum: CHANNELNUM,\n            ProtocolType: PROTOCOLTYPE,\n            StreamType: STREAMTYPE,\n            Transmits: [{\n                Transmit: [{\n                    SrvIp: SRVIP,\n                    Port: PORT\n                }]\n            }],\n            CameraIndexCode: CAMERAINDEXCODE\n        }]\n    };\n    var json = eval(str);\n    var xmlTree = new XML.ObjTree();\n    var xml = xmlTree.writeXML(json);\n    RealTimePlayOcx.StartTask_Preview_InWnd(xml, i);\n}\n\n//得到轮播的数据信息\nfunction getlunboDataInfo(result, i) {\n    var MATRIXCODE = result.data[0].datas[i][\"matrixcode\"]; //云台矩阵\n    var MONITORID = result.data[0].datas[i][\"monitorid\"]; //显示器ID\n    var CAMERAID = result.data[0].datas[i][\"cameraid\"]; //监控点id\n    var EQUIPMENT_NAME = result.data[0].datas[i][\"equipment_name\"]; //监控点名称\n    var DEVICEIP = result.data[0].datas[i][\"deviceip\"]; //监控点IP\n    var DEVICEPORT = result.data[0].datas[i][\"deviceport\"]; //监控点port\n    var DEVICETYPE = result.data[0].datas[i][\"devicetype\"]; //设备类型\n    var USER = result.data[0].datas[i][\"username\"]; //监控点username\n    var PASSWORD = result.data[0].datas[i][\"password\"]; //监控点password\n    var CHANNELNUM = result.data[0].datas[i][\"channelnum\"]; //摄像头所在视频源设备中的通道号(硬盘录像机)或摄像头ID(海康流媒体服务器)\n    var PROTOCOLTYPE = result.data[0].datas[i][\"protocoltype\"]; //协议类型0 - TCP， 1 - UDP\n    var STREAMTYPE = result.data[0].datas[i][\"streamtype\"]; //码流类型0 表示主码流， 1 表示子码流\n    var SRVIP = result.data[0].datas[i][\"srvip\"]; //流媒体IP地址（可以没有，也可以有多个）\n    var PORT = result.data[0].datas[i][\"port\"]; //流媒体端口号（可以没有，也可以有多个）\n    var CAMERAINDEXCODE = result.data[0].datas[i][\"cameraindexcode\"]; //级联预览字段\n    var str = {\n        Parament: [{\n            MatrixCode: MATRIXCODE,\n            MonitorID: MONITORID,\n            CameraID: CAMERAID,\n            CameraName: EQUIPMENT_NAME,\n            DeviceIP: DEVICEIP,\n            DevicePort: DEVICEPORT,\n            DeviceType: DEVICETYPE,\n            User: USER,\n            Password: PASSWORD,\n            ChannelNum: CHANNELNUM,\n            ProtocolType: PROTOCOLTYPE,\n            StreamType: STREAMTYPE,\n            Transmits: [{\n                Transmit: [{\n                    SrvIp: SRVIP,\n                    Port: PORT\n                }]\n            }],\n            CameraIndexCode: CAMERAINDEXCODE\n        }]\n    };\n    var json = eval(str);\n    var xmlTree = new XML.ObjTree();\n    var xml = xmlTree.writeXML(json);\n    return xml;\n    // RealTimePlayOcx.StartTask_Preview_InWnd(xml, i);\n}\n\n//首页\nfunction button1_click(sender, e) {\n    var RealTimePlayOcx = document.getElementById(\"RealTimePlayOcx\");\n    RealTimePlayOcx.StopAllPreview(); //停止所有预览 \n    currentPage = 1;\n    PageCheck.set_val(currentPage); //跳转页\n    initData(currentPage);\n\n}\n//上一页\nfunction button2_click(sender, e) {\n    if(currentPage <= 1)\n        currentPage = 1;\n    else\n        currentPage--;\n\n    var RealTimePlayOcx = document.getElementById(\"RealTimePlayOcx\");\n    RealTimePlayOcx.StopAllPreview(); //停止所有预览 \n    PageCheck.set_val(currentPage); //跳转页\n    initData(currentPage);\n\n}\n//下一页\nfunction button3_click(sender, e) {\n    if(currentPage >= totalPage)\n        currentPage = totalPage;\n    else\n        currentPage++;\n\n    var RealTimePlayOcx = document.getElementById(\"RealTimePlayOcx\");\n    RealTimePlayOcx.StopAllPreview(); //停止所有预览 \n    PageCheck.set_val(currentPage); //跳转页\n    initData(currentPage);\n\n}\n//尾页\nfunction button4_click(sender, e) {\n    var RealTimePlayOcx = document.getElementById(\"RealTimePlayOcx\");\n    RealTimePlayOcx.StopAllPreview(); //停止所有预览 \n    currentPage = totalPage;\n    PageCheck.set_val(currentPage); //跳转页\n    initData(currentPage);\n\n}\n//跳转\nfunction button5_click(sender, e) {\n    var RealTimePlayOcx = document.getElementById(\"RealTimePlayOcx\");\n    RealTimePlayOcx.StopAllPreview(); //停止所有预览 \n    currentPage = PageCheck.get_val();\n    if(currentPage >= totalPage) {\n        currentPage = totalPage;\n        PageCheck.set_val(currentPage);\n    }\n    initData(currentPage);\n}\n\nfunction BtnDisable() {\n    button1.disable(); //不可用\n    button2.disable();\n    button3.disable();\n    button4.disable();\n    button5.disable();\n}\n\nfunction BtnEnable() {\n    button1.enable(); //可用\n    button2.enable();\n    button3.enable();\n    button4.enable();\n    button5.enable();\n}\n\n//判断是否下载注册过ocx\nfunction IsRegionOcx() {\n    if(document.all.RealTimePlayOcx.object == null) { //搜索注册表是否存在classid为D5E14042-7BF6-4E24-8B01-2F453E8154D7的数据\n        //document.getElementById(div_error.id).innerHTML = '请点击此处下载控件，安装时请关闭浏览器';\n\n        button.setText(\"请点击此处下载控件，安装时请关闭浏览器\");\n        page.doLayout();\n        panel2.hide();\n        //button.show();\n        panel3.show();\n        return;\n    } else {\n        //alert(\"已经注册\");\n    }\n}\n//判断是否是ie内核浏览\nfunction IEVersion() {\n    var userAgent = navigator.userAgent; //取得浏览器的userAgent字符串  \n    var isIE = userAgent.indexOf(\"compatible\") > -1 && userAgent.indexOf(\"MSIE\") > -1; //判断是否IE<11浏览器  \n    var isEdge = userAgent.indexOf(\"Edge\") > -1 && !isIE; //判断是否IE的Edge浏览器  \n    var isIE11 = userAgent.indexOf('Trident') > -1 && userAgent.indexOf(\"rv:11.0\") > -1;\n    if(isIE) {\n        var reIE = new RegExp(\"MSIE (\\\\d+\\\\.\\\\d+);\");\n        reIE.test(userAgent);\n        var fIEVersion = parseFloat(RegExp[\"$1\"]);\n        if(fIEVersion == 7) {\n            return 7;\n        } else if(fIEVersion == 8) {\n            return 8;\n        } else if(fIEVersion == 9) {\n            return 9;\n        } else if(fIEVersion == 10) {\n            return 10;\n        } else {\n            return 6; //IE版本<=7\n        }\n        panel3.hide();\n        panel2.show();\n        IsRegionOcx();\n    } else if(isEdge) {\n        panel3.hide();\n        panel2.show();\n        IsRegionOcx();\n        return; //edge\n    } else if(isIE11) {\n        panel3.hide();\n        panel2.show();\n        IsRegionOcx();\n        return; //IE11  \n    } else {\n        //document.getElementById(div_error.id).innerHTML = '当前视频控件只支持IE内核的浏览器，建议使用IE浏览器进行操作'\n\n        button.setText(\"当前视频控件只支持IE内核的浏览器，建议使用IE浏览器进行操作\");\n        page.doLayout();\n        button.disable();\n        //或者\n        // div_error.el.dom.innerHTML='当前视频控件只支持IE内核的浏览器，建议用IE浏览器进行操作'\n        //以上两种都可以\n        panel3.show();\n        //button.hide();\n        panel2.hide();\n        return -1; //不是ie浏览器\n    }\n}\n\nfunction button_click(sender, e) {\n    //bootPATH + 'components/ux/ocxvideocontent/js/ObjTree.js'\n    var path = vmd.virtualPath + '/components/ux/ocxvideocontent/ocx/cmsocx.exe';\n    window.open(path, '_self')\n}\n\n\n\nvar forecastAlarmStr = '';\n//异常报警连接消息中心\nfunction ForecastAlarm() {\n    //alert();\n    var client, destination = \"ocxVideo\";\n    var tt;\n    var message;\n    var isConnect = false;\n    var isConnecting = false;\n    var clientId = newGuid(); //\"client3\"; // \n\n    function connect() {\n        debugger\n        var host = \"10.207.60.70\"; // \"192.168.7.24\"; //\n        var port = 61614;\n        if(typeof(client) === \"undefined\") {\n            client = new Messaging.Client(host, Number(port), clientId);\n        }\n        client.onConnect = onConnect;\n        client.onMessageArrived = onMessageArrived;\n        client.onConnectionLost = onConnectionLost;\n        client.connect({\n            timeout: 30, //如果在改时间端内尚未连接成功，则认为连接失败  默认为30秒 \n            keepAliveInterval: 5, //心跳信号 默认为60秒\n            cleanSession: false, //若设为false，MQTT服务器将持久化客户端会话的主体订阅和ACK位置，默认为true\n            useSSL: false,\n            onSuccess: onConnect,\n            onFailure: onFailure\n        });\n    }\n\n    var onSubSuccess = function(result) {\n        //alert(result);\n    }\n    var onSubError = function(result) {\n        //alert('===sub error==')\n    }\n    var onConnect = function(frame) {\n        //alert(\"connected to MQTT\");\n        client.subscribe(destination, {\n            qos: 2,\n            onSuccess: onSubSuccess,\n            onFailure: onSubError\n        });\n        isConnect = true;\n    };\n\n    function onFailure(failure) {\n        //alert(\"failure：\" + failure.errorMessage);\n        if(!isConnect) {\n            //如果连接中 不提示\n            if(!isConnecting) {\n                //此处提醒用户是否重连 可以确认后 手动执行重连方法\n                //alert(failure.errorMessage);\n                //reconnect();\n            } else {\n                // Ext.MessageBox.alert('提示',\"重连中...\");\n            }\n        }\n    }\n\n    function onMessageArrived(message) {\n        debugger;\n        //alert(message.payloadString);\n        forecastAlarmStr = message.payloadString;\n        // if(!page.flag) {\n        //     page.flag = true;\n             //ShowForecastAlarm();\n        // }\n\n    }\n    if(!window.WebSocket) {} else {\n        connect();\n    }\n\n    function onConnectionLost(responseObject) {\n        //alert(\"connectionLost\");\n        isConnect = false;\n        //判断断开状态码   0位正常断开   不做重连\n        if(responseObject.errorCode !== 0) {\n            //alert(client.clientId + \": \" + responseObject.errorCode + \"\\n\");\n            //断线重连\n            reconnect();\n        }\n    }\n    //封装重连事件\n    function reconnect() {\n        //重连计数\n        var i = 0;\n        // 开启重连定时器    没连接上会一直重连，设置延迟避免请求过多\n        tt = setInterval(function() {\n            if(!isConnect) {\n                i++;\n                //alert(\"连接失败,正在第\" + i + \"次尝试\" + \"\\n\");\n                connect();\n                //连接中状态  方便连接失败提示\n                isConnecting = true;\n            } else {\n                //清除定时器\n                clearInterval(tt);\n                isConnecting = false;\n            }\n        }, 3000);\n    }\n}\n\nfunction ShowForecastAlarm() {\n    forecastAlarmStr = \"[{sbName:'中控室',gjlx:'闯入告警',lxmc:'移动侦测报警',bjms:'处理站 处理站_中控室 移动侦测报警',bjdj:'中',gjsj:'2018-09-20 13:40:28',bjzt:'报警中...',pUser:'0'}]\"\n    debugger;\n    //alert(escape(forecastAlarmStr))\n    var newWin = new vmd.window({\n        url: vmd.virtualPath + '/modules/12efebd0-5bd2-4d64-8582-fe88888e55ac/hwUlkgCNnE/hwFHkspFgR/hwJ0pirOMA/hw66d31a51.html' ,\n        title: '异常报警',\n        enableLoading: true, //启用进度加载\n        enableIframe: true, //启用iframe弹窗遮罩解决ocx遮挡问题\n        maximizable: false,\n        resizable: false,\n        width: 948,\n        height: 390,\n        auto: false, //auto为true 自动适应窗口，配合offset使用，offset:[width,height] width宽度差值，height高度差值\n        params: {} //url中追加的编码的参数，json格式 \n    })\n    window.newWin = newWin;\n    // window.tag_ = tag_;\n    newWin.show(); //窗口显示\n}\n//生成32位随机码\nfunction newGuid() {\n    var guid = \"\";\n    for(var i = 1; i <= 16; i++) {\n        var n = Math.floor(Math.random() * 16.0).toString(16);\n        guid += n;\n        if((i == 8) || (i == 12) || (i == 16) || (i == 20))\n            guid += \"-\";\n    }\n    return guid;\n}\n\nfunction PageCheck_chaxun(sender, val) {\n    if(val > totalPage) {\n        alert(\"提示\", \"已超出最大页数！请重新选择！\");\n        PageCheck.set_val(currentPage);\n        PageCheck.set_sign(currentPage);\n        return;\n    }\n}","vmdcss":".page-cls {\n    margin-left: 10px;\n}","vmdprops":"\"\"","type":"ux","vmdinterface":"{\"components\":[{\"cid\":\"vmduxprops\",\"layoutConfig\":{},\"userConfig\":{}},{\"cid\":\"vmduxmethods\",\"id\":\"方法\",\"layoutConfig\":{},\"userConfig\":{},\"cn\":[{\"cid\":\"uxmethod\",\"id\":\"get_val\",\"layoutConfig\":{},\"userConfig\":{\"id\":\"get_val\",\"zhname\":\"\",\"bindCmp\":\"\",\"bindValue\":\"\",\"isPublic\":\"on\",\"desc\":\"sign:标识是从主页面进入的就为空，如果从轮播进入的就是lb\",\"uxcid\":\"\",\"params\":\"tree_nodes,buju,suoding,iszd,type,sign,loginName\",\"code\":\"//直接填写方法内容\\nget_val(tree_nodes,buju,suoding,iszd,type,sign,loginName)\",\"returnType\":\"\"}},{\"cid\":\"uxmethod\",\"id\":\"get_lunbo_val\",\"layoutConfig\":{},\"userConfig\":{\"id\":\"get_lunbo_val\",\"zhname\":\"\",\"bindCmp\":\"\",\"bindValue\":\"\",\"isPublic\":\"on\",\"desc\":\"树节点、布局、锁定、是否是重点：1重点  0导航、重点下边的类别、标识：主页面进入还是轮播页面进入、轮播时间\",\"uxcid\":\"\",\"params\":\"tree_nodes,buju,suoding,iszd,type,sign,lunbotime,loginName\",\"code\":\"//直接填写方法内容\\nget_lunbo_val(tree_nodes,buju,suoding,iszd,type,sign,lunbotime,loginName)\",\"returnType\":\"\"}},{\"cid\":\"uxmethod\",\"id\":\"initVideo\",\"layoutConfig\":{},\"userConfig\":{\"id\":\"initVideo\",\"zhname\":\"\",\"bindCmp\":\"\",\"bindValue\":\"\",\"isPublic\":\"on\",\"desc\":\"\",\"uxcid\":\"\",\"params\":\"\",\"code\":\"//直接填写方法内容\\n//直接填写方法内容\\ninitVideo()\",\"returnType\":\"\"}}]},{\"cid\":\"vmduxevents\",\"id\":\"事件\",\"layoutConfig\":{},\"userConfig\":{}}]}"}