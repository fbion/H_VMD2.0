{"vmdversion":"2.0.4.190627","vmdlayout":"{\"components\":[{\"cid\":\"uxpanel\",\"id\":\"Moretodo\",\"layoutConfig\":{\"align\":\"center\",\"pack\":\"start\"},\"userConfig\":{\"layout\":\"vbox\",\"header\":false,\"width\":600,\"height\":400},\"cn\":[{\"cid\":\"panel\",\"id\":\"panel\",\"layoutConfig\":{},\"userConfig\":{\"x\":\"\",\"y\":\"\",\"layout\":\"fit\",\"header\":false,\"autoHeight\":false,\"height\":400,\"width\":601,\"style\":\"top:0;left:0;right: 0;bottom: 0;\"},\"cn\":[{\"cid\":\"grid\",\"id\":\"MyGrid\",\"layoutConfig\":{},\"userConfig\":{\"hideHeaders\":false,\"header\":false,\"beforerender\":\"MyGrid_beforerender\",\"cls\":\"hand vmd-grid\"},\"cn\":[{\"cid\":\"gridcolumn\",\"layoutConfig\":{},\"userConfig\":{\"header\":\"appid\",\"dataIndex\":\"appid\",\"hidden\":true},\"name\":\"appid\"},{\"cid\":\"gridcolumn\",\"layoutConfig\":{},\"userConfig\":{\"header\":\"taskid\",\"dataIndex\":\"taskid\",\"hidden\":true},\"name\":\"taskid\"},{\"cid\":\"gridcolumn\",\"layoutConfig\":{},\"userConfig\":{\"header\":\"序号\",\"dataIndex\":\"xh\",\"align\":\"center\",\"menuDisabled\":true,\"resizable\":true},\"name\":\"xh\"},{\"cid\":\"gridcolumn\",\"layoutConfig\":{},\"userConfig\":{\"header\":\"名称\",\"dataIndex\":\"name\",\"align\":\"center\",\"css\":\"text-align: left !important;\",\"width\":302,\"menuDisabled\":true,\"resizable\":true},\"name\":\"name\"},{\"cid\":\"gridcolumn\",\"layoutConfig\":{},\"userConfig\":{\"header\":\"时间\",\"dataIndex\":\"createddate\",\"align\":\"center\",\"css\":\"text-align:left;\",\"width\":190,\"menuDisabled\":true,\"resizable\":true},\"name\":\"createddate\"},{\"cid\":\"gridcolumn\",\"layoutConfig\":{},\"userConfig\":{\"header\":\"flownode\",\"dataIndex\":\"flownode\",\"hidden\":true},\"name\":\"flownode\"},{\"cid\":\"gridcolumn\",\"layoutConfig\":{},\"userConfig\":{\"header\":\"flowinst\",\"dataIndex\":\"flowinst\",\"hidden\":true},\"name\":\"flowinst\"},{\"cid\":\"gridcolumn\",\"layoutConfig\":{},\"userConfig\":{\"header\":\"tasktype\",\"dataIndex\":\"tasktype\",\"hidden\":true},\"name\":\"tasktype\"},{\"cid\":\"gridcolumn\",\"layoutConfig\":{},\"userConfig\":{\"header\":\"fromkey\",\"dataIndex\":\"fromkey\",\"align\":\"center\",\"css\":\"text-align:left;\",\"width\":190,\"hidden\":true},\"name\":\"fromkey\"},{\"cid\":\"gridcolumn\",\"layoutConfig\":{},\"userConfig\":{\"header\":\"tasklink\",\"dataIndex\":\"tasklink\",\"align\":\"center\",\"css\":\"text-align:left;\",\"width\":190,\"hidden\":true},\"name\":\"tasklink\"}]}]}]}]}","vmdevents":"var page = this;\nvar ryRwDataList = [];\nvar usermodel = {};\nvar store = new Ext.data.JsonStore({\n    proxy: new Ext.data.MemoryProxy(),\n    fields: [\"appid\", \"xh\", \"taskid\", \"name\", \"createddate\", \"flownode\", \"flowinst\", \"tasktype\", \"fromkey\", \"tasklink\", \"businesskey\"]\n})\n//获取url的参数值\nvar lb = vmd.getUrlParam('lb');\nvar lx = vmd.getUrlParam('lx');\n//获取用户角色集\nfunction getUserInfo() {\n    vmd.webBase.getUserRoleInfo(function(res, model) {\n        usermodel.roleids = \"\";\n        usermodel.rolenames = \"\";\n        if (model && model.length > 0) {\n            usermodel.login = model[0].userlogin;\n            usermodel.name = model[0].username;\n            usermodel.userid = model[0].userid;\n            for (var i = 0; i < model.length; i++) {\n                debugger\n                if (usermodel.roleids) {\n                    usermodel.roleids = usermodel.roleids + \",\" + model[i].roleid;\n                } else {\n                    usermodel.roleids = model[i].roleid;\n                }\n                if (usermodel.rolenames) {\n                    usermodel.rolenames = usermodel.rolenames + \",\" + model[i].rolename;\n                } else {\n                    usermodel.rolenames = model[i].rolename;\n                }\n            }\n            loadStoreData();\n        }\n    })\n}\n\nwindow.loadStoreData = function() {\n    ryRwDataList = [];\n    //获取用户角色信息 \n    if (lb == 'db') {\n        hwMSC.taskTodoGet(usermodel.login, usermodel.roleids, 1, 100, function(data) {\n            if (data && data.msg && data.msg.length > 0) {\n                //将字符串转换为对象 \n                var data = vmd.decode(data.msg);\n                //var data= data.msg;\n                // console.log(data[0]);\n                for (var i = 0; i < data.length; i++) {\n                    var strs = data[i].title;\n                    if (lx == 'zdgz') {\n                        if ((strs.substring(strs.indexOf('】') + 1, strs.lastIndexOf('【'))) == '【HSSE工作】' && (strs.substring(strs.indexOf('】') + 1, strs.lastIndexOf('【'))) == '【重点工作】') {\n                            xhs = 0;\n                            var itemObj = {\n                                xh: i + 1,\n                                appid: data[i].appId,\n                                taskid: data[i].flow_task_id,\n                                name: \"<a href='#' onclick='rowLink(\" + i + \");'>\" + data[i].title + \"</a>\",\n                                createddate: data[i].row_create_date,\n                                flownode: data[i].flow_node_id,\n                                flowinst: data[i].flow_inst_id,\n                                tasktype: data[i].task_type,\n                                fromkey: data[i].from_key,\n                                tasklink: data[i].task_link,\n                                businesskey: data[i].business_key\n                            }\n                            xhs++;\n                            ryRwDataList.push(itemObj);\n                        }\n                    } else if (lx == 'dbyb') {\n                        xh = 0;\n                        if ((strs.substring(strs.indexOf('】') + 1, strs.lastIndexOf('【'))) != '【HSSE工作】' && (strs.substring(strs.indexOf('】') + 1, strs.lastIndexOf('【'))) != '【重点工作】') {\n                            var itemObj = {\n                                xh: xh + 1,\n                                appid: data[i].appId,\n                                taskid: data[i].flow_task_id,\n                                name: \"<a href='#' onclick='rowLink(\" + i + \");'>\" + data[i].title + \"</a>\",\n                                createddate: data[i].row_create_date,\n                                flownode: data[i].flow_node_id,\n                                flowinst: data[i].flow_inst_id,\n                                tasktype: data[i].task_type,\n                                fromkey: data[i].from_key,\n                                tasklink: data[i].task_link,\n                                businesskey: data[i].business_key\n                            }\n                            ryRwDataList.push(itemObj);\n                            xh++;\n                        }\n                    } else {\n                        var itemObj = {\n                            xh: i + 1,\n                            appid: data[i].appId,\n                            taskid: data[i].flow_task_id,\n                            name: \"<a href='#' onclick='rowLink(\" + i + \");'>\" + data[i].title + \"</a>\",\n                            createddate: data[i].row_create_date,\n                            flownode: data[i].flow_node_id,\n                            flowinst: data[i].flow_inst_id,\n                            tasktype: data[i].task_type,\n                            fromkey: data[i].from_key,\n                            tasklink: data[i].task_link,\n                            businesskey: data[i].business_key\n                        }\n\n                        ryRwDataList.push(itemObj);\n                    }\n                }\n                store.loadData(ryRwDataList);\n            } else {\n                alert(\"您当前无待办信息！\");\n            }\n        }, function() {\n            //alert(arguments);\n            alert(\"查询您的待办信息异常，请刷新界面重试！\");\n        })\n    } else {\n        hwMSC.taskDoGet(usermodel.login, 1, 100, function(data) {\n\n            if (data && data.msg && data.msg.length > 0) {\n                var data = vmd.decode(data.msg);\n                for (var i = 0; i < data.length; i++) {\n                    var itemObj = {\n                        xh: i + 1,\n                        appid: data[i].appId,\n                        taskid: data[i].task_id,\n                        name: \"<a href='#' onclick='rowLink(\" + i + \");'>\" + data[i].title + \"</a>\",\n                        createddate: data[i].row_create_date,\n                        flownode: data[i].flow_node_id,\n                        flowinst: data[i].flow_inst_id,\n                        tasktype: data[i].task_type,\n                        fromkey: data[i].from_key,\n                        tasklink: data[i].task_link,\n                        businesskey: data[i].business_key\n                    }\n                    ryRwDataList.push(itemObj);\n                }\n                store.loadData(ryRwDataList);\n            } else {\n                alert(\"您当前无已办信息！\");\n            }\n        }, function() {\n            alert(\"查询您的已办信息异常，请刷新界面重试！\");\n        })\n    }\n    //}\n\n    //})\n}\n\nfunction MyGrid_beforerender(sender) {\n    this.store = store;\n    getUserInfo();\n}\n//判断是否是json\nwindow._checkJson = function(str) {\n    if (typeof str == 'string') {\n        try {\n            var obj = JSON.parse(str);\n            if (typeof obj == 'object' && obj) {\n                return true;\n            } else {\n                return false;\n            }\n\n        } catch (e) {\n            // console.log('error：'+str+'!!!'+e);\n            return false;\n        }\n    }\n}\n//点击\nwindow.rowLink = function(id) {\n        var rowdata = MyGrid.getStore().data.items[id].data;\n        var tokenparam = vmd.Cookie.get(\"hwToken\") || vmd.getUrlParam('hwtoken');\n\n        if (rowdata) {\n\n            if (tokenparam) {\n                tokenparam = \"&hwtoken=\" + tokenparam;\n            }\n            if (rowdata.fromkey) {\n                if (_checkJson(rowdata.fromkey)) {\n                    var fromJson = JSON.parse(rowdata.fromkey);\n                    //配置的是定制的模块\n                    if (fromJson.modulesInfo && fromJson.modulesInfo.length > 0) {\n\n                        //查询模块路径\n                        vmd.webBase.getModuleInfo(fromJson.modulesInfo[0].moduleId, '', function(res, model) {\n\n                            if (model && model[0].abspath) {\n                                window.open('' + model[0].abspath + (model[0].abspath.indexOf('&') != -1 ? '&' : '?') + 'lb=' + lb + '&taskid=' + rowdata.taskid + '&taskId=' + rowdata.taskid + '&flowinstid=' + rowdata.flowinst + \"&businesskey=\" + rowdata.businesskey + tokenparam, '_blank')\n                            }\n                        })\n                    } else {\n                        var selfconfig = JSON.parse(fromJson.rule || '{}');\n                        if (selfconfig.pc) {\n                            //查询模块路径\n                            vmd.webBase.getModuleInfo(selfconfig.pc, '', function(res, model) {\n\n                                if (model && model[0].abspath) {\n                                    window.open('' + model[0].abspath + (model[0].abspath.indexOf('&') != -1 ? '&' : '?') + 'lb=' + lb + '&taskid=' + rowdata.taskid + '&taskId=' + rowdata.taskid + '&flowinstid=' + rowdata.flowinst + \"&businesskey=\" + rowdata.businesskey + tokenparam, '_blank')\n                                }\n                            })\n                        } else {\n                            alert(\"当前未配置模块信息！\");\n                        }\n                    }\n                } else {\n                    //查询模块路径\n                    vmd.webBase.getModuleInfo(rowdata.fromkey, '', function(res, model) {\n\n                        if (model && model[0].abspath) {\n                            window.open('' + model[0].abspath + (model[0].abspath.indexOf('&') != -1 ? '&' : '?') + 'lb=' + lb + '&taskid=' + rowdata.taskid + '&taskId=' + rowdata.taskid + '&flowinstid=' + rowdata.flowinst + \"&businesskey=\" + rowdata.businesskey + tokenparam, '_blank')\n                        }\n                    })\n\n\n                }\n\n            } else if (rowdata.tasklink) {\n                window.open('' + rowdata.tasklink + (rowdata.tasklink.indexOf('&') != -1 ? '&' : '?') + 'lb=' + lb + '&taskid=' + rowdata.taskid + '&taskId=' + rowdata.taskid + '&flowinstid=' + rowdata.flowinst + \"&businesskey=\" + rowdata.businesskey + tokenparam, '_blank', '')\n            } else {\n                alert(\"当前未配置超链接地址！\");\n            }\n        }\n}\n        /**刷新表格编号 */\n        function refreshNo() {\n            var i = 1;\n            mygrid.forEachRow(function(id) {\n                mygrid.cells(id, 0).setValue(i++);\n            });\n        }","vmdcss":".hand a{\r\n   text-decoration:none; \r\n}\r\n.hand a:link {\r\n    color: blue; text-decoration:none;\r\n    \r\n}\r\n.hand a:active:{\r\n    color: red;\r\n    } \r\n/*a:visited {\r\n    color:purple;text-decoration:none;\r\n    \r\n} */\r\n.hand a:hover {\r\n    color: red; text-decoration:underline;\r\n    \r\n} \r\n.x-grid3-hd-row td {\r\n    line-height: 15px;\r\n    vertical-align: middle;\r\n    border-left: 0px solid;\r\n     border-right: 0px solid;\r\n     border: 1px solid #e4e4e4;\r\n}\r\n.x-grid3-scroller {\r\n    overflow-x: hidden;\r\n}\r\n/* =========================================== Grid Panel =========================================== */\r\n/* 表格左右间距 */\r\n.vmd-grid {\r\n   /* padding-left: 5px;\r\n    padding-right: 5px;*/\r\n}\r\n\r\n/* 表格线样式兼容 */\r\n.vmd-grid table {\r\n    border-collapse: collapse;\r\n}\r\n\r\n/* 表头背景色 */\r\n.vmd-grid .x-grid3-header {\r\n    background-color: #f7f7f7;\r\n}\r\n\r\n/* 表头鼠标悬停背景色 */\r\n.vmd-grid .x-grid3-hd-over .x-grid3-hd-inner {\r\n    background-color: #f7f7f7;\r\n}\r\n\r\n/* 表头错位兼容 */\r\n.vmd-grid .x-grid3-header-offset {\r\n    padding: 0;\r\n}\r\n\r\n/* 表头单元格 */\r\n.vmd-grid .x-grid3-header td {\r\n    border: 1px solid #e3e2e8;\r\n    font-size: 14px;\r\n}\r\n\r\n/* 表体单元格 */\r\n.vmd-grid .x-grid3-body td {\r\n    border: 1px solid #e3e2e8;\r\n    border-top-width: 0;\r\n    padding: 0;\r\n    font-size: 14px;\r\n}\r\n\r\n/* 表体行 */\r\n.vmd-grid .x-grid3-row {\r\n    border: none;\r\n}\r\n\r\n/* 表体行鼠标悬停背景色 */\r\n.vmd-grid .x-grid3-row-over {\r\n    background-color: white;\r\n}\r\n\r\n/* 表体行选中背景色 */\r\n.vmd-grid .x-grid3-row-selected {\r\n    background-color: #F5F7FC !important;\r\n}\r\n\r\n/* =========================================== Grid Panel =========================================== */","vmdprops":"\"\"","type":"ux","vmdinterface":"{\"components\":[{\"cid\":\"vmduxprops\",\"layoutConfig\":{},\"userConfig\":{}},{\"cid\":\"vmduxmethods\",\"id\":\"方法\",\"layoutConfig\":{},\"userConfig\":{}},{\"cid\":\"vmduxevents\",\"id\":\"事件\",\"layoutConfig\":{},\"userConfig\":{}}]}","vmdresource":"{\"components\":[{\"cid\":\"vmdrescsss\",\"layoutConfig\":{},\"userConfig\":{}},{\"cid\":\"vmdresjss\",\"layoutConfig\":{},\"userConfig\":{},\"cn\":[{\"cid\":\"resjs\",\"id\":\"controller.js\",\"layoutConfig\":{},\"userConfig\":{}}]},{\"cid\":\"vmdresimgs\",\"layoutConfig\":{},\"userConfig\":{}}]}"}