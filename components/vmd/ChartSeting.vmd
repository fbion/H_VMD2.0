{"vmdversion":"vmd2.0.6.200119","vmdlayout":"{\"components\":[{\"cid\":\"uxpanel\",\"id\":\"ChartSeting\",\"layoutConfig\":{},\"userConfig\":{\"layout\":\"fit\",\"header\":false,\"width\":320,\"height\":1000,\"autoScroll\":true},\"cn\":[{\"cid\":\"tabpanel\",\"id\":\"MyTabs\",\"layoutConfig\":{},\"userConfig\":{\"x\":0,\"y\":0,\"width\":320,\"height\":1000,\"activeTab\":3,\"region\":\"center\",\"split\":true,\"collapseMode\":\"mini\",\"tabchange\":\"MyTabs_tabchange\"},\"cn\":[{\"cid\":\"panel\",\"id\":\"panel\",\"layoutConfig\":{},\"userConfig\":{\"title\":\"标题\",\"width\":320,\"height\":699,\"layout\":\"border\"},\"cn\":[{\"cid\":\"vmd.ux.ChartTitle\",\"id\":\"hwChartTitle\",\"layoutConfig\":{},\"userConfig\":{\"region\":\"center\",\"width\":321,\"titleAlignChange\":\"hwChartTitle_titleAlignChange\",\"titleVerticalAlignChange\":\"hwChartTitle_titleVerticalAlignChange\",\"titleAlineChange\":\"hwChartTitle_titleAlineChange\",\"afterrender\":\"hwChartTitle_afterrender\",\"titleoffsetXChange\":\"hwChartTitle_titleoffsetXChange\",\"titleoffsetYChange\":\"hwChartTitle_titleoffsetYChange\"}}]},{\"cid\":\"panel\",\"id\":\"panel1\",\"layoutConfig\":{},\"userConfig\":{\"title\":\"坐标轴\",\"layout\":\"border\"},\"cn\":[{\"cid\":\"panel\",\"id\":\"panel5\",\"layoutConfig\":{\"align\":\"middle\",\"pack\":\"center\"},\"userConfig\":{\"border\":false,\"header\":false,\"height\":50,\"width\":323,\"region\":\"north\",\"layout\":\"hbox\"},\"cn\":[{\"cid\":\"vmdButton\",\"id\":\"addBnt\",\"layoutConfig\":{},\"userConfig\":{\"type\":\"text\",\"icon\":\" icon-plus\",\"size\":\"large\",\"text\":\"\",\"margins\":\"0 8 0 0\",\"id\":\"addBnt\",\"click\":\"addBnt_click\"}},{\"cid\":\"label\",\"id\":\"label\",\"layoutConfig\":{},\"userConfig\":{\"text\":\"轴名称：\"}},{\"cid\":\"vmdComlist\",\"id\":\"axisComlist\",\"layoutConfig\":{},\"userConfig\":{\"width\":130,\"style\":\"\",\"margins\":\"12 0 0 0\",\"cls\":\"comlist-b\",\"id\":\"axisComlist\",\"selectChanged\":\"axisComlist_selectChanged\",\"editable\":false}},{\"cid\":\"vmdButton\",\"id\":\"delBnt\",\"layoutConfig\":{},\"userConfig\":{\"text\":\"\",\"icon\":\"icon-minus\",\"size\":\"large\",\"type\":\"text\",\"margins\":\"0 0 0 12\",\"id\":\"delBnt\",\"click\":\"delBnt_click\"}}]},{\"cid\":\"tabpanel\",\"id\":\"MyTabs1\",\"layoutConfig\":{},\"userConfig\":{\"width\":321,\"height\":1200,\"activeTab\":0,\"region\":\"center\",\"tabchange\":\"MyTabs1_tabchange\"},\"cn\":[{\"cid\":\"panel\",\"id\":\"panel6\",\"layoutConfig\":{},\"userConfig\":{\"title\":\"标题\",\"height\":100,\"layout\":\"anchor\",\"autoScroll\":true},\"cn\":[{\"cid\":\"vmd.ux.AxisTitle\",\"id\":\"hwAxisTitle\",\"layoutConfig\":{},\"userConfig\":{\"width\":316,\"anchor\":\"100%\",\"height\":663,\"axisTitleRowChange\":\"hwAxisTitle_axisTitleRowChange\",\"axisTitleOffsetChange\":\"hwAxisTitle_axisTitleOffsetChange\",\"axisTitleXChange\":\"hwAxisTitle_axisTitleXChange\",\"axisTitleYChange\":\"hwAxisTitle_axisTitleYChange\",\"axisFontFamityChange\":\"hwAxisTitle_axisFontFamityChange\",\"axisFontColorChange\":\"hwAxisTitle_axisFontColorChange\",\"axisFontSizeChange\":\"hwAxisTitle_axisFontSizeChange\",\"axisFontStyleChange\":\"hwAxisTitle_axisFontStyleChange\",\"axisTitleRotationChange\":\"hwAxisTitle_axisTitleRotationChange\"}}]},{\"cid\":\"panel\",\"id\":\"panel7\",\"layoutConfig\":{},\"userConfig\":{\"title\":\"轴属性\",\"layout\":\"anchor\",\"autoScroll\":true},\"cn\":[{\"cid\":\"vmd.ux.AxisSelf\",\"id\":\"hwAxisSelf\",\"layoutConfig\":{},\"userConfig\":{\"anchor\":\"100%\",\"height\":730,\"axisLineWidthChange\":\"hwAxisSelf_axisLineWidthChange\",\"axisHeightChange\":\"hwAxisSelf_axisHeightChange\",\"axisLineColorsChange\":\"hwAxisSelf_axisLineColorsChange\",\"axisTopChange\":\"hwAxisSelf_axisTopChange\",\"axisFloorChange\":\"hwAxisSelf_axisFloorChange\",\"axisOffsetChange\":\"hwAxisSelf_axisOffsetChange\",\"minPadding\":\"hwAxisSelf_minPadding\",\"minPaddingChange\":\"hwAxisSelf_minPaddingChange\",\"crosshairColorChange\":\"hwAxisSelf_crosshairColorChange\",\"crosshairWidthChange\":\"hwAxisSelf_crosshairWidthChange\",\"crosshairLineChange\":\"hwAxisSelf_crosshairLineChange\",\"axisCeilingChange\":\"hwAxisSelf_axisCeilingChange\",\"axisMinChange\":\"hwAxisSelf_axisMinChange\",\"axisMaxChange\":\"hwAxisSelf_axisMaxChange\",\"axisDirectionChange\":\"hwAxisSelf_axisDirectionChange\"}}]},{\"cid\":\"panel\",\"id\":\"panel8\",\"layoutConfig\":{},\"userConfig\":{\"title\":\"刻度线\",\"layout\":\"anchor\",\"height\":\"\",\"autoScroll\":true},\"cn\":[{\"cid\":\"vmd.ux.AxisTick\",\"id\":\"hwAxisTick\",\"layoutConfig\":{},\"userConfig\":{\"anchor\":\"100%\",\"height\":800,\"tickLenghtChange\":\"hwAxisTick_tickLenghtChange\",\"tickColorsChange\":\"hwAxisTick_tickColorsChange\",\"gridLineWidthChange\":\"hwAxisTick_gridLineWidthChange\",\"gridLineDashStyleChange\":\"hwAxisTick_gridLineDashStyleChange\",\"gridLineColorChange\":\"hwAxisTick_gridLineColorChange\",\"minorTickWidthChange\":\"hwAxisTick_minorTickWidthChange\",\"tickWidthChange\":\"hwAxisTick_tickWidthChange\",\"minorTickLenghtChange\":\"hwAxisTick_minorTickLenghtChange\",\"minorTickColorChange\":\"hwAxisTick_minorTickColorChange\",\"minorGridLineWidthChange\":\"hwAxisTick_minorGridLineWidthChange\",\"minorGridLineDashStyleChange\":\"hwAxisTick_minorGridLineDashStyleChange\",\"minorGridLineColorChange\":\"hwAxisTick_minorGridLineColorChange\",\"tickIntervalChange\":\"hwAxisTick_tickIntervalChange\",\"tickAmountChange\":\"hwAxisTick_tickAmountChange\",\"tickPixelIntervalChange\":\"hwAxisTick_tickPixelIntervalChange\"}}]},{\"cid\":\"panel\",\"id\":\"panel9\",\"layoutConfig\":{},\"userConfig\":{\"title\":\"标签\",\"layout\":\"anchor\",\"autoScroll\":true},\"cn\":[{\"cid\":\"vmd.ux.Axislable\",\"id\":\"hwAxislable\",\"layoutConfig\":{},\"userConfig\":{\"anchor\":\"100%\",\"height\":600,\"lableXChange\":\"hwAxislable_lableXChange\",\"lableYChange\":\"hwAxislable_lableYChange\",\"labelStaggerLinesChange\":\"hwAxislable_labelStaggerLinesChange\",\"lableAlignChange\":\"hwAxislable_lableAlignChange\",\"fontFamityChange\":\"hwAxislable_fontFamityChange\",\"fontSizeChange\":\"hwAxislable_fontSizeChange\",\"fontStyleChange\":\"hwAxislable_fontStyleChange\",\"fontColorChange\":\"hwAxislable_fontColorChange\",\"labelRotationChange\":\"hwAxislable_labelRotationChange\",\"lableStepChange\":\"hwAxislable_lableStepChange\"}}]}]}]},{\"cid\":\"panel\",\"id\":\"panel2\",\"layoutConfig\":{},\"userConfig\":{\"title\":\"图例\",\"layout\":\"border\"},\"cn\":[{\"cid\":\"vmd.ux.Legend\",\"id\":\"hwLegend\",\"layoutConfig\":{},\"userConfig\":{\"region\":\"center\",\"width\":318,\"legendLoyoutChange\":\"hwLegend_legendLoyoutChange\",\"legendAlineChange\":\"hwLegend_legendAlineChange\",\"legendVerticalAlignChange\":\"hwLegend_legendVerticalAlignChange\",\"legendoffsetXChange\":\"hwLegend_legendoffsetXChange\",\"legendoffsetYChange\":\"hwLegend_legendoffsetYChange\",\"legendWidthChange\":\"hwLegend_legendWidthChange\",\"legendItemWidthChange\":\"hwLegend_legendItemWidthChange\",\"legPaddingChange\":\"hwLegend_legPaddingChange\",\"legMarginChange\":\"hwLegend_legMarginChange\",\"afterrender\":\"hwLegend_afterrender\"}}]},{\"cid\":\"panel\",\"id\":\"panel3\",\"layoutConfig\":{},\"userConfig\":{\"title\":\"序列\",\"layout\":\"border\"},\"cn\":[{\"cid\":\"panel\",\"id\":\"panel10\",\"layoutConfig\":{\"align\":\"middle\",\"pack\":\"center\"},\"userConfig\":{\"border\":false,\"header\":false,\"height\":50,\"width\":323,\"region\":\"north\",\"layout\":\"hbox\"},\"cn\":[{\"cid\":\"vmdButton\",\"id\":\"addSeries\",\"layoutConfig\":{},\"userConfig\":{\"type\":\"text\",\"icon\":\" icon-plus\",\"size\":\"large\",\"text\":\"\",\"margins\":\"0 8 0 0\",\"click\":\"addSeries_click\",\"id\":\"addSeries\"}},{\"cid\":\"label\",\"id\":\"label1\",\"layoutConfig\":{},\"userConfig\":{\"text\":\"序列名：\"}},{\"cid\":\"vmdComlist\",\"id\":\"seriesComlist\",\"layoutConfig\":{},\"userConfig\":{\"width\":130,\"style\":\"\",\"margins\":\"12 0 0 0\",\"cls\":\"comlist-b\",\"id\":\"seriesComlist\",\"editable\":false,\"selectChanged\":\"seriesComlist_selectChanged\"}},{\"cid\":\"vmdButton\",\"id\":\"delSeries\",\"layoutConfig\":{},\"userConfig\":{\"text\":\"\",\"icon\":\"icon-minus\",\"size\":\"large\",\"type\":\"text\",\"margins\":\"0 0 0 12\",\"id\":\"delSeries\",\"click\":\"delSeries_click\"}}]},{\"cid\":\"tabpanel\",\"id\":\"MyTabs2\",\"layoutConfig\":{},\"userConfig\":{\"width\":321,\"height\":1000,\"activeTab\":1,\"region\":\"center\",\"tabchange\":\"MyTabs2_tabchange\"},\"cn\":[{\"cid\":\"panel\",\"id\":\"panel11\",\"layoutConfig\":{},\"userConfig\":{\"title\":\"序列\",\"height\":911,\"layout\":\"anchor\",\"autoScroll\":true},\"cn\":[{\"cid\":\"vmd.ux.SeriesSelf\",\"id\":\"hwSeriesSelf\",\"layoutConfig\":{},\"userConfig\":{\"anchor\":\"100%\",\"height\":500,\"gatherInternalChange\":\"hwSeriesSelf_gatherInternalChange\"}}]},{\"cid\":\"panel\",\"id\":\"panel12\",\"layoutConfig\":{},\"userConfig\":{\"title\":\"分类属性\",\"layout\":\"anchor\",\"autoScroll\":true,\"width\":320},\"cn\":[{\"cid\":\"vmd.ux.SeriesClass\",\"id\":\"hwSeriesClass\",\"layoutConfig\":{},\"userConfig\":{\"anchor\":\"100%\",\"height\":1000,\"LineStyleChange\":\"hwSeriesClass_LineStyleChange\",\"lineWidthChange\":\"hwSeriesClass_lineWidthChange\",\"lineColorChange\":\"hwSeriesClass_lineColorChange\",\"pointRadiusChange\":\"hwSeriesClass_pointRadiusChange\",\"ponLinWidthChange\":\"hwSeriesClass_ponLinWidthChange\",\"ponLinColorChange\":\"hwSeriesClass_ponLinColorChange\",\"ponFillColorChange\":\"hwSeriesClass_ponFillColorChange\",\"columnBorderWidthChange\":\"hwSeriesClass_columnBorderWidthChange\",\"columnBorderRadiusChange\":\"hwSeriesClass_columnBorderRadiusChange\",\"columnBorderColorChange\":\"hwSeriesClass_columnBorderColorChange\",\"peiInnerSizeChange\":\"hwSeriesClass_peiInnerSizeChange\",\"areaColorChange\":\"hwSeriesClass_areaColorChange\",\"maxPointWidthChange\":\"hwSeriesClass_maxPointWidthChange\",\"width\":317}}]},{\"cid\":\"panel\",\"id\":\"panel13\",\"layoutConfig\":{},\"userConfig\":{\"title\":\"数据标注\",\"layout\":\"anchor\",\"autoScroll\":true},\"cn\":[{\"cid\":\"vmd.ux.Serieslable\",\"id\":\"hwSerieslable\",\"layoutConfig\":{},\"userConfig\":{\"anchor\":\"100%\",\"height\":600,\"seriesLableAlignChange\":\"hwSerieslable_seriesLableAlignChange\",\"seriesLableVarAlignChange\":\"hwSerieslable_seriesLableVarAlignChange\",\"seriesLableXchange\":\"hwSerieslable_seriesLableXchange\",\"seriesLableYchange\":\"hwSerieslable_seriesLableYchange\",\"FontFamitychange\":\"hwSerieslable_FontFamitychange\",\"FontSizechange\":\"hwSerieslable_FontSizechange\",\"FontStylechange\":\"hwSerieslable_FontStylechange\",\"FontColorchange\":\"hwSerieslable_FontColorchange\",\"seriesLableDistance\":\"hwSerieslable_seriesLableDistance\"}}]}]}]},{\"cid\":\"panel\",\"id\":\"panel4\",\"layoutConfig\":{},\"userConfig\":{\"title\":\"图表\",\"layout\":\"border\"},\"cn\":[{\"cid\":\"tabpanel\",\"id\":\"MyTabs3\",\"layoutConfig\":{},\"userConfig\":{\"width\":321,\"height\":1000,\"activeTab\":0,\"region\":\"center\",\"tabchange\":\"MyTabs3_tabchange\"},\"cn\":[{\"cid\":\"panel\",\"id\":\"panel14\",\"layoutConfig\":{},\"userConfig\":{\"title\":\"图表\",\"height\":911,\"layout\":\"fit\"},\"cn\":[{\"cid\":\"vmd.ux.ChartTb\",\"id\":\"hwChartTb\",\"layoutConfig\":{},\"userConfig\":{\"chartWidthChange\":\"hwChartTb_chartWidthChange\",\"chartHeightChange\":\"hwChartTb_chartHeightChange\",\"chartTopMarginChange\":\"hwChartTb_chartTopMarginChange\",\"chartBottomMarginChange\":\"hwChartTb_chartBottomMarginChange\",\"chartLeftMarginChange\":\"hwChartTb_chartLeftMarginChange\",\"chartRightMarginChange\":\"hwChartTb_chartRightMarginChange\",\"chartminWidthChange\":\"hwChartTb_chartminWidthChange\",\"chartminHeightChange\":\"hwChartTb_chartminHeightChange\",\"chartSpacingChange\":\"hwChartTb_chartSpacingChange\"}}]},{\"cid\":\"panel\",\"id\":\"panel15\",\"layoutConfig\":{},\"userConfig\":{\"title\":\"边框背景\",\"layout\":\"fit\"},\"cn\":[{\"cid\":\"vmd.ux.ChartBorder\",\"id\":\"hwChartBorder\",\"layoutConfig\":{},\"userConfig\":{\"tbBroderWidthChange\":\"hwChartBorder_tbBroderWidthChange\",\"htBroderWidthChange\":\"hwChartBorder_htBroderWidthChange\",\"tbBorderRadiusChange\":\"hwChartBorder_tbBorderRadiusChange\",\"backColorChange\":\"hwChartBorder_backColorChange\",\"borderColorChange\":\"hwChartBorder_borderColorChange\",\"plotBackColorChange\":\"hwChartBorder_plotBackColorChange\",\"plotBorderColorChange\":\"hwChartBorder_plotBorderColorChange\"}}]},{\"cid\":\"panel\",\"id\":\"panel16\",\"layoutConfig\":{},\"userConfig\":{\"title\":\"数据提示框\"},\"cn\":[{\"cid\":\"vmd.ux.ToolTip\",\"id\":\"hwToolTip\",\"layoutConfig\":{},\"userConfig\":{\"valueDecimalsChange\":\"hwToolTip_valueDecimalsChange\"}}]}]}]}]},{\"cid\":\"vmdMenu\",\"id\":\"addMenu\",\"layoutConfig\":{},\"userConfig\":{\"id\":\"addMenu\",\"click\":\"addMenu_click\",\"width\":100},\"cn\":[{\"cid\":\"vmdMenuItem\",\"id\":\"addXAxis\",\"layoutConfig\":{},\"userConfig\":{\"text\":\"添加X轴\",\"hidden\":false,\"width\":100,\"id\":\"addXAxis\",\"click\":\"addXAxis_click\"}},{\"cid\":\"vmdMenuItem\",\"id\":\"addYaxis\",\"layoutConfig\":{},\"userConfig\":{\"text\":\"添加Y轴\",\"hidden\":false,\"width\":100,\"id\":\"addYaxis\"},\"cn\":[{\"cid\":\"vmdMenu\",\"id\":\"addY\",\"layoutConfig\":{},\"userConfig\":{\"click\":\"addMenu_click\",\"id\":\"addY\",\"width\":100},\"cn\":[{\"cid\":\"vmdMenuItem\",\"id\":\"horizontalAdd\",\"layoutConfig\":{},\"userConfig\":{\"text\":\"横向添加\",\"hidden\":false,\"width\":100,\"id\":\"horizontalAdd\"}},{\"cid\":\"vmdMenuItem\",\"id\":\"verticalAdd\",\"layoutConfig\":{},\"userConfig\":{\"text\":\"纵向添加\",\"hidden\":false,\"width\":100,\"id\":\"verticalAdd\"},\"cn\":[{\"cid\":\"vmdMenu\",\"id\":\"hwMenu\",\"layoutConfig\":{},\"userConfig\":{\"click\":\"addMenu_click\",\"width\":100},\"cn\":[{\"cid\":\"vmdMenuItem\",\"id\":\"noReverse\",\"layoutConfig\":{},\"userConfig\":{\"text\":\"左侧添加\",\"hidden\":false,\"width\":100,\"id\":\"noReverse\"}},{\"cid\":\"vmdMenuItem\",\"id\":\"isReverse\",\"layoutConfig\":{},\"userConfig\":{\"text\":\"右侧添加\",\"hidden\":false,\"width\":100,\"id\":\"isReverse\"}}]}]}]}]}]}]}]}","vmdevents":"var chartLengedName, vmdChart, mychart;\nvar chartTitle, chartSeries, chartInfo, chartXAxis,\n    chartYAxis, chartLenged, myAxis, oriTitle, AxisInfo, chartTooltip;\nvar mySeries, myAxis, mySeriesInfo, myStore, selStore, myAxisInfo;\nvar storeData = [],\n    xAxisData = [],\n    yAxisData = [];\nvar titleText, lastlableFormat;\n// 标题相关变量\nvar varAlignValue;\n\nthis.on('afterrender', function() {\n    this.cascade(function(item) {\n        item.on('change', function(a, b, c) {\n            if (a.xtype == \"vmd.comlist\" || !a.initialConfig) {\n                return\n            }\n            setCellInfo(a, b, c);\n        })\n        item.on(\"check\", function(a, b, c) {\n            setCellInfo(a, b, c);\n        })\n        item.on(\"select\", function(a, b, c) {\n            setCellInfo(a, b, c);\n        })\n    })\n})\n// 属性设置\nfunction setCellInfo(a, b, c) {\n    var activeTab = MyTabs.getActiveTab().title;\n    switch (activeTab) {\n        case \"标题\":\n            setTitleProperty(a, b);\n            break;\n        case \"坐标轴\":\n            setAxisProperty(a, b, c);\n            break;\n        case \"图例\":\n            sethwLegend(a, b);\n            break;\n        case \"序列\":\n            setSeriesProperty(a, b);\n            break;\n        case \"图表\":\n            setChartProperty(a, b);\n            break;\n    }\n};\n// 获取曲线对象数据\nfunction getChart(name, obj, itemEl) {\n    if (obj) { // 接收到曲线对象\n        myStore = obj.getDatasetNames();\n        if (obj.clickChart) {\n            vmdChart = obj.clickChart.vmdChart;\n        } else {\n            vmdChart = obj.chart.vmdChart;\n        }\n        mychart = vmdChart.chart;\n        chartTitle = vmdChart.tplJSON.title || {};\n        vmd.util.applyIf(chartTitle, defaultTitle);\n        vmd.util.applyIf(chartTitle.style, defaultTitle.style);\n        chartSeries = vmdChart.tplJSON.series || [];\n        chartInfo = vmdChart.tplJSON.chart || {};\n        chartXAxis = vmdChart.tplJSON.xAxis || [];\n        chartYAxis = vmdChart.tplJSON.yAxis || [];\n        chartLenged = vmdChart.tplJSON.legend || {};\n        vmd.util.applyIf(chartLenged, defaultLegend);\n        chartTooltip = vmdChart.tplJSON.tooltip || {};\n        vmdChart.tplJSON.tooltip = chartTooltip;\n        chartTooltip.useHTML = true;\n        oriTitle = chartTitle.text;\n        if (!vmdChart.tplJSON.modules) {\n            vmdChart.tplJSON.modules = [];\n        }\n    }\n    if (name === \"title\") {\n        setTitleVaule();\n    }\n    if (name === \"chart\") {\n        if (MyTabs3.getActiveTab()) {\n            var activeTab = MyTabs3.getActiveTab().title;\n            switch (activeTab) {\n                case \"图表\":\n                    setChartValue();\n                    break;\n                case \"边框背景\":\n                    setBroderAndBackground();\n                    break;\n                case \"数据提示框\":\n                    setTooltip();\n                    break;\n            }\n        }\n    }\n    if (itemEl && name === \"series\") {\n        mySeries = itemEl;\n        var mySeriesId = mySeries.userOptions.id;\n        if (vmdChart.tplJSON.data.storeName) {\n            selStore = vmdChart.tplJSON.data.storeName;\n        }\n        for (var i = 0; i < chartSeries.length; i++) {\n            if (chartSeries[i].id == mySeriesId) {\n                vmd.util.applyIf(vmdChart.tplJSON.series[i], defaultSeries);\n                vmd.util.applyIf(vmdChart.tplJSON.series[i].dataLabels, defaultSeries.dataLabels);\n                vmd.util.applyIf(vmdChart.tplJSON.series[i].marker, defaultSeries.marker);\n                mySeriesInfo = chartSeries[i];\n                mySeriesInfo.name = mySeries.userOptions.name;\n                break\n            }\n        }\n        setLink(seriesComlist, getSeriesData(mychart.series), mySeriesId);\n        getXAxisData();\n        getYAxisData();\n        getStore();\n        setLink(seriesComlist, getSeriesData(mychart.series), mySeries.userOptions.id);\n        var activeTab = MyTabs2.getActiveTab().title;\n        switch (activeTab) {\n            case \"序列\":\n                setSeriesValue();\n                break;\n            case \"分类属性\":\n                setSeriesClassValue();;\n                break;\n            case \"数据标注\":\n                setSeriesDataLableValue();\n                break;\n        }\n    }\n    if (itemEl && name === \"axis\") {\n        myAxis = itemEl;\n        var myAxisId = myAxis.userOptions.id;\n        // 判断当坐标轴属于X轴还是Y轴\n        if (myAxis.coll === 'xAxis') {\n            var axisData = chartXAxis;\n        } else if (myAxis.coll === 'yAxis') {\n            var axisData = chartYAxis;\n        }\n        for (var i = 0; i < axisData.length; i++) {\n            if (axisData[i].id == myAxisId) {\n                myAxisInfo = axisData[i];\n                break\n            }\n        }\n        vmd.util.applyIf(myAxisInfo, defultAxis);\n        vmd.util.applyIf(myAxisInfo.labels, defultAxis.labels);\n        vmd.util.applyIf(myAxisInfo.title, defultAxis.title);\n        // 记录初始标题和标签格式\n        titleText = myAxisInfo.title.text;\n        lastlableFormat = myAxisInfo.labels.format;\n        setLink(axisComlist, getAxisData(mychart.axes), myAxisId);\n        var activeTab = MyTabs1.getActiveTab().title;\n        switch (activeTab) {\n            case \"标题\":\n                setAxisOriTitle();\n                break;\n            case \"轴属性\":\n                setAxisOriValue();\n                break;\n            case \"刻度线\":\n                setTickOriValue();\n                break;\n            case \"标签\":\n                setAxisLableOriValue();\n                break;\n        }\n    }\n}\n// 切换tab触发曲线选中框变化\nfunction MyTabs_tabchange(sender, tab) {\n    if (tab.title === \"标题\" && mychart) {\n        setTitleVaule();\n        var TitleData = mychart.title.element.getBBox(null, 0);\n        mychart.seleBorder.attr({\n            width: parseInt(TitleData.width) + 50,\n            height: parseInt(TitleData.height) + 10,\n            x: parseInt(TitleData.x) - 30,\n            y: parseInt(TitleData.y) - 5\n        })\n    }\n    if (tab.title === \"图例\" && mychart) {\n        setLegendVaule()\n        mychart.seleBorder.attr(mychart.legend.getBackRect())\n        mychart.seleBorder.attr({\n            visibility: 'visible',\n        })\n    }\n    if (tab.title === \"图表\" && mychart) {\n        mychart.seleBorder.attr(mychart.getBackRect());\n        if (MyTabs3.getActiveTab()) {\n            var activeTab = MyTabs3.getActiveTab().title;\n            switch (activeTab) {\n                case \"图表\":\n                    setChartValue();\n                    break;\n                case \"边框背景\":\n                    setBroderAndBackground();\n                    break;\n                case \"数据提示框\":\n                    setTooltip();\n                    break;\n            }\n        }\n    }\n    if (tab.title === \"序列\" && mychart) {\n        mychart.seleBorder.attr({\n            visibility: 'visible',\n            x: mychart.plotLeft,\n            y: mychart.plotTop,\n            width: mychart.plotWidth,\n            height: mychart.plotHeight\n        })\n        var mySeriesId = chartSeries[0].id;\n        mySeries = mychart.get(mySeriesId);\n        if (vmdChart.tplJSON.data.storeName) {\n            selStore = vmdChart.tplJSON.data.storeName;\n        }\n        vmd.util.applyIf(vmdChart.tplJSON.series[0], defaultSeries);\n        vmd.util.applyIf(vmdChart.tplJSON.series[0].dataLabels, defaultSeries.dataLabels);\n        vmd.util.applyIf(vmdChart.tplJSON.series[0].marker, defaultSeries.marker);\n        mySeriesInfo = chartSeries[0];\n        mySeriesInfo.name = mySeries.userOptions.name;\n        setLink(seriesComlist, getSeriesData(mychart.series), mySeriesId);\n        getXAxisData();\n        getYAxisData();\n        getStore();\n        setLink(seriesComlist, getSeriesData(mychart.series), mySeries.userOptions.id);\n        var activeTab = MyTabs2.getActiveTab().title;\n        switch (activeTab) {\n            case \"序列\":\n                setSeriesValue();\n                break;\n            case \"分类属性\":\n                setSeriesClassValue();;\n                break;\n            case \"数据标注\":\n                setSeriesDataLableValue();\n                break;\n        }\n    }\n    if (tab.title === \"坐标轴\" && mychart) {\n        var myAxisId = chartXAxis[0].id;\n        myAxis = mychart.get(myAxisId);\n        myAxisInfo = chartXAxis[0];\n        vmd.util.applyIf(myAxisInfo, defultAxis);\n        vmd.util.applyIf(myAxisInfo.labels, defultAxis.labels);\n        vmd.util.applyIf(myAxisInfo.title, defultAxis.title);\n        titleText = myAxisInfo.title.text;\n        lastlableFormat = myAxisInfo.labels.format;\n        setLink(axisComlist, getAxisData(mychart.axes), myAxisId);\n        var activeTab = MyTabs1.getActiveTab().title;\n        switch (activeTab) {\n            case \"标题\":\n                setAxisOriTitle();\n                break;\n            case \"轴属性\":\n                setAxisOriValue();\n                break;\n            case \"刻度线\":\n                setTickOriValue();\n                break;\n            case \"标签\":\n                setAxisLableOriValue();\n                break;\n        }\n        mychart.seleBorder.attr(myAxis.getBackRect());\n        // vmd.taskRunner(function() {\n        //     if (myAxis) return true;\n        // }, function() {})\n    }\n}\n// 添加坐标轴列表\nfunction addBnt_click(sender, e) {\n    var btnLeft = sender.el.getRegion().left;\n    var btnTop = sender.el.getRegion().top;\n    var btnHeight = sender.getHeight();\n    addMenu.showAt([btnLeft - 20, btnTop + btnHeight - 5]);\n}\n// ////////////////////////////////////////   标题属性设置     //////////////////////////////////////////////\nfunction setTitleProperty(a, b) {\n    if (a.initialConfig.id === \"TitleText\") {\n        mychart.setTitle({\n            text: b\n        });\n        chartTitle.text = b;\n    } else if (a.initialConfig.id == \"isFloat\") {\n        // 浮动与垂直对齐方式关联\n        if (b) {\n            mychart.setTitle({\n                verticalAlign: varAlignValue\n            });\n            chartTitle.verticalAlign = varAlignValue;\n            hwChartTitle.ButtonGroup1.enable();\n        } else {\n            hwChartTitle.ButtonGroup1.disable();\n            mychart.setTitle({\n                verticalAlign: null\n            });\n            chartTitle.verticalAlign = null;\n            delete chartTitle.verticalAlign\n        }\n        mychart.setTitle({\n            floating: b\n        });\n        chartTitle.floating = b;\n    }\n    mychart.addTitleEventListener();\n    var TitleData = mychart.title.element.getBBox(null, 0)\n    mychart.seleBorder.attr({\n        width: parseInt(TitleData.width) + 50,\n        height: parseInt(TitleData.height) + 10,\n        x: parseInt(TitleData.x) - 30,\n        y: parseInt(TitleData.y) - 5\n    })\n\n}\n// 标题水平偏移量\nfunction hwChartTitle_titleoffsetXChange(sender, value, describe) {\n    mychart.setTitle({\n        x: value\n    });\n    chartTitle.x = value;\n    chartTitle.x = value;\n    mychart.addTitleEventListener();\n    var TitleData = mychart.title.element.getBBox(null, 0)\n    mychart.seleBorder.attr({\n        width: parseInt(TitleData.width) + 50,\n        height: parseInt(TitleData.height) + 10,\n        x: parseInt(TitleData.x) - 30,\n        y: parseInt(TitleData.y) - 5\n    })\n}\n// 标题垂直偏移量\nfunction hwChartTitle_titleoffsetYChange(sender, value, describe) {\n    mychart.setTitle({\n        y: value\n    });\n    chartTitle.y = value;\n    var TitleData = mychart.title.element.getBBox(null, 0);\n    mychart.addTitleEventListener();\n    mychart.seleBorder.attr({\n        width: parseInt(TitleData.width) + 50,\n        height: parseInt(TitleData.height) + 10,\n        x: parseInt(TitleData.x) - 30,\n        y: parseInt(TitleData.y) - 5\n    })\n}\n// 标题水平对齐方式\nfunction hwChartTitle_titleAlineChange(sender, align) {\n    mychart.setTitle({\n        align: align\n    });\n    chartTitle.align = align;\n    mychart.addTitleEventListener();\n    var TitleData = mychart.title.element.getBBox(null, 0)\n    mychart.seleBorder.attr({\n        width: parseInt(TitleData.width) + 10,\n        height: parseInt(TitleData.height) + 10,\n        x: parseInt(TitleData.x) - 5,\n        y: parseInt(TitleData.y) - 5\n    })\n}\n// 标题垂直对齐方式\nfunction hwChartTitle_titleVerticalAlignChange(sender, verticalAlig) {\n    mychart.setTitle({\n        verticalAlign: verticalAlig\n    });\n    chartTitle.verticalAlign = verticalAlig;\n    varAlignValue = verticalAlig;\n    mychart.addTitleEventListener();\n    var TitleData = mychart.title.element.getBBox(null, 0)\n    mychart.seleBorder.attr({\n        width: parseInt(TitleData.width) + 50,\n        height: parseInt(TitleData.height) + 10,\n        x: parseInt(TitleData.x) - 30,\n        y: parseInt(TitleData.y) - 5\n    })\n}\n// 标题属性赋值\nfunction hwChartTitle_afterrender(sender) {\n\n    vmd.taskRunner(function() {\n        if (chartTitle) return true;\n    }, function() {\n        setTitleVaule();\n    })\n}\n\nfunction setTitleVaule() {\n    hwChartTitle.TitleText.setValue(chartTitle.text);\n    hwChartTitle.offsetX.setOriValue(chartTitle.x)\n    hwChartTitle.offsetY.setOriValue(chartTitle.y);\n    hwChartTitle.isFloat.checked = chartTitle.floating;\n    hwChartTitle.isFloat.setValue(chartTitle.floating);\n    elementIsShow(hwChartTitle.ButtonGroup1, chartTitle.floating);\n    var aligeIndex = 2;\n    switch (chartTitle.align) {\n        case 'left':\n            aligeIndex = 1;\n            break;\n        case 'center':\n            aligeIndex = 2;\n            break;\n        case 'right':\n            aligeIndex = 3;\n            break;\n    }\n    hwChartTitle.ButtonGroup.setSelectIndex(aligeIndex);\n    var verticalAlignIndex = 1;\n    switch (chartTitle.verticalAlign) {\n        case 'top':\n            aligeIndex = 1;\n            break;\n        case 'middle':\n            aligeIndex = 2;\n            break;\n        case 'bottom':\n            aligeIndex = 3;\n            break;\n    }\n    hwChartTitle.ButtonGroup1.setSelectIndex(verticalAlignIndex);\n}\n// //////////////////////////////////////////////  数据提示框 //////////////////////////////////////////////\nfunction setHwTooltip(a, b) {\n    if (a.initialConfig.id == \"crosshairEable\") {\n\n\n    } else if (a.initialConfig.id == \"tooltipEable\") {\n        mychart.update({\n            tooltip: {\n                enabled: b,\n                useHTML: true,\n            }\n        });\n        chartTooltip.enabled = b;\n    } else if (a.initialConfig.id == \"isShared\") {\n        mychart.update({\n            tooltip: {\n                shared: b\n            }\n        });\n        chartTooltip.shared = b;\n    } else if (a.initialConfig.id == \"xDateFormat\") {\n        if (b.id != null) {\n            b = date_replace_dateFormat(hwToolTip.xDateFormat.getValue());\n        }\n        mychart.update({\n            tooltip: {\n                xDateFormat: b,\n                dateTimeLabelFormats: {\n                    millisecond: b,\n                    second: b,\n                    minute: b,\n                    hour: b,\n                    day: b,\n                    week: b,\n                    month: b,\n                    year: b\n                }\n            }\n        })\n        chartTooltip.xDateFormat = b;\n        chartTooltip.dateTimeLabelFormats = {\n            millisecond: b,\n            second: b,\n            minute: b,\n            hour: b,\n            day: b,\n            week: b,\n            month: b,\n            year: b\n        }\n    } else if (a.initialConfig.id == \"valueSuffix\") {\n        mychart.update({\n            tooltip: {\n                valueSuffix: b\n            }\n        });\n        chartTooltip.valueSuffix = b;\n    } else if (a.initialConfig.id == \"valuePrefix\") {\n        mychart.update({\n            tooltip: {\n                valuePrefix: b\n            }\n        });\n        chartTooltip.valuePrefix = b;\n    }\n}\n// 数据提示框小数位数设置\nfunction hwToolTip_valueDecimalsChange(sender, value) {\n    mychart.update({\n        tooltip: {\n            valueDecimals: value\n        }\n    });\n    chartTooltip.valueDecimals = value;\n}\n\nfunction setTooltip() {\n    hwToolTip.tooltipEable.checked = chartTooltip.enabled || true;\n    hwToolTip.tooltipEable.setValue(chartTooltip.enabled || true);\n    hwToolTip.isShared.checked = chartTooltip.shared || false;\n    hwToolTip.isShared.setValue(chartTooltip.shared || false);\n    hwToolTip.valueDecimals.setOriValue(chartTooltip.valueDecimals || '');\n    hwToolTip.valuePrefix.setValue(chartTooltip.valuePrefix || '');\n    hwToolTip.valueSuffix.setValue(chartTooltip.valueSuffix || '');\n    hwToolTip.xDateFormat.setValue(dateFormat_replace_date(chartTooltip.xDateFormat));\n}\n\n// //////////////////////////////////////////////  图例属性设置 //////////////////////////////////////////////\nfunction sethwLegend(a, b) {\n    if (a.initialConfig.id == \"isFloat\") {\n        mychart.update({\n            legend: {\n                floating: b\n            }\n        });\n        chartLenged.floating = b;\n        mychart.seleBorder.attr(mychart.legend.getBackRect());\n        mychart.addLegendEventListener();\n    } else if (a.initialConfig.id == \"isReversed\") {\n        mychart.update({\n            legend: {\n                reversed: b\n            }\n        });\n        chartLenged.reversed = b;\n        mychart.addLegendEventListener();\n    } else if (a.initialConfig.id == \"isDrag\") {\n        mychart.update({\n            legend: {\n                draging: b\n            }\n        });\n        chartLenged.draging = b;\n        mychart.addLegendEventListener();\n    } else if (a.initialConfig.id == \"lebendIsShow\") {\n        mychart.update({\n            legend: {\n                enabled: b\n            }\n        });\n        chartLenged.enabled = b;\n        //elementIsShow(hwLegend, b);\n        mychart.addLegendEventListener();\n    }\n}\n// 图例水平偏移量\nfunction hwLegend_legendoffsetXChange(sender, value, describe) {\n    mychart.update({\n        legend: {\n            x: value\n        }\n    });\n    chartLenged.x = value;\n    mychart.seleBorder.attr(mychart.legend.getBackRect());\n    mychart.addLegendEventListener();\n}\n// 图例垂直偏移量\nfunction hwLegend_legendoffsetYChange(sender, value, describe) {\n    mychart.update({\n        legend: {\n            y: value\n        }\n    });\n    chartLenged.y = value;\n    mychart.seleBorder.attr(mychart.legend.getBackRect());\n    mychart.addLegendEventListener();\n}\n// 图例宽度\nfunction hwLegend_legendWidthChange(sender, value, describe) {\n    mychart.update({\n        legend: {\n            width: value\n        }\n    });\n    chartLenged.width = value;\n    mychart.seleBorder.attr(mychart.legend.getBackRect());\n    mychart.addLegendEventListener();\n}\n// 图例项宽度\nfunction hwLegend_legendItemWidthChange(sender, value, describe) {\n    mychart.update({\n        legend: {\n            itemWidth: value\n        }\n    });\n    chartLenged.itemWidth = value;\n    mychart.seleBorder.attr(mychart.legend.getBackRect());\n    mychart.addLegendEventListener();\n}\n// 图例内边距\nfunction hwLegend_legPaddingChange(sender, value, describe) {\n    mychart.update({\n        legend: {\n            padding: value\n        }\n    });\n    chartLenged.padding = value;\n    mychart.seleBorder.attr(mychart.legend.getBackRect());\n    mychart.addLegendEventListener();\n}\n// 图例外边距\nfunction hwLegend_legMarginChange(sender, value, describe) {\n    mychart.update({\n        legend: {\n            margin: value\n        }\n    });\n    chartLenged.margin = value;\n    mychart.seleBorder.attr(mychart.legend.getBackRect());\n    mychart.addLegendEventListener();\n}\n// 图例排列类型设置\nfunction hwLegend_legendLoyoutChange(sender, layout) {\n    mychart.update({\n        legend: {\n            layout: layout\n        }\n    });\n    chartLenged.layout = layout;\n    mychart.seleBorder.attr(mychart.legend.getBackRect());\n    mychart.addLegendEventListener();\n}\n// 图例水平对齐方式设置\nfunction hwLegend_legendAlineChange(sender, align) {\n    mychart.update({\n        legend: {\n            align: align\n        }\n    });\n    chartLenged.align = align;\n    mychart.seleBorder.attr(mychart.legend.getBackRect());\n    mychart.addLegendEventListener();\n}\n// 图例垂直对齐方式\nfunction hwLegend_legendVerticalAlignChange(sender, verticalAlign) {\n    mychart.update({\n        legend: {\n            verticalAlign: verticalAlign\n        }\n    });\n    chartLenged.verticalAlign = verticalAlign;\n    mychart.seleBorder.attr(mychart.legend.getBackRect());\n    mychart.addLegendEventListener();\n}\n// 图例初始值设置\nfunction hwLegend_afterrender(sender) {\n    vmd.taskRunner(function() {\n        if (chartLenged) return true;\n    }, function() {\n        setLegendVaule();\n    })\n}\n\nfunction setLegendVaule() {\n    hwLegend.offsetX.setOriValue(chartLenged.x);\n    hwLegend.offsetY.setOriValue(chartLenged.y);\n    hwLegend.legPadding.setOriValue(chartLenged.padding);\n    hwLegend.legMargin.setOriValue(chartLenged.margin);\n    hwLegend.isFloat.checked = chartLenged.floating;\n    hwLegend.isFloat.setValue(chartLenged.floating);\n    hwLegend.isDrag.checked = chartLenged.draging;\n    hwLegend.isDrag.setValue(chartLenged.draging);\n    hwLegend.lebendIsShow.checked = chartLenged.enabled;\n    hwLegend.lebendIsShow.setValue(chartLenged.enabled);\n    hwLegend.isReversed.checked = chartLenged.reversed;\n    hwLegend.isReversed.setValue(chartLenged.reversed);\n    hwLegend.legendWidth.setOriValue(chartLenged.width);\n    hwLegend.legendItemWidth.setOriValue(chartLenged.itemWidth);\n    var aligeIndex = 2;\n    switch (chartLenged.align) {\n        case 'left':\n            aligeIndex = 1;\n            break;\n        case 'center':\n            aligeIndex = 2;\n            break;\n        case 'right':\n            aligeIndex = 3;\n            break;\n    }\n    hwLegend.hwButtonGroup1.setSelectIndex(aligeIndex);\n    var varAlignIndex = 2;\n    switch (chartLenged.align) {\n        case 'top':\n            varAlignIndex = 1;\n            break;\n        case 'middle':\n            varAlignIndex = 2;\n            break;\n        case 'bottom':\n            varAlignIndex = 3;\n            break;\n    }\n    hwLegend.hwButtonGroup3.setSelectIndex(varAlignIndex);\n    var laoutIndex = 1;\n    switch (chartLenged.layout) {\n        case 'horizontal':\n            varAlignIndex = 1;\n            break;\n        case 'vertical':\n            varAlignIndex = 2;\n            break;\n    }\n    hwLegend.hwButtonGroup.setSelectIndex(laoutIndex);\n}\n// //////////////////////////////////////////////  图表属性设置 //////////////////////////////////////////////\nfunction setChartProperty(a, b) {\n    if (a.initialConfig.id === \"isWidth\") {\n        if (!b) {\n            hwChartTb.chartWidth.disable();\n            hwChartTb.chartWidth.setOriValue(\"\");\n            mychart.setSize(null);\n            delete chartInfo.width;\n        } else {\n            hwChartTb.chartWidth.enable();\n        }\n    } else if (a.initialConfig.id === \"isHeight\") {\n        if (!b) {\n            hwChartTb.chartHeight.disable();\n            hwChartTb.chartHeight.setOriValue(\"\");\n            mychart.setSize(chartInfo.width, null);\n            delete chartInfo.height;\n        } else {\n            hwChartTb.chartHeight.enable();\n        }\n    } else if (a.initialConfig.id === \"isTop\") {\n        if (!b) {\n            hwChartTb.topMargin.disable();\n            hwChartTb.topMargin.setOriValue(\"\");\n            mychart.update({\n                chart: {\n                    marginTop: null\n                },\n            });\n            delete chartInfo.marginTop;\n        } else {\n            hwChartTb.topMargin.enable();\n        }\n    } else if (a.initialConfig.id === \"isBottom\") {\n        if (!b) {\n            hwChartTb.bottomMargin.disable();\n            hwChartTb.bottomMargin.setOriValue(\"\");\n            mychart.update({\n                chart: {\n                    marginBottom: null\n                },\n            });\n            delete chartInfo.marginBottom;\n        } else {\n            hwChartTb.bottomMargin.enable();\n        }\n    } else if (a.initialConfig.id === \"isLeft\") {\n        if (!b) {\n            hwChartTb.leftMargin.disable();\n            hwChartTb.leftMargin.setOriValue(\"\");\n            mychart.update({\n                chart: {\n                    marginLeft: null\n                },\n            });\n            delete chartInfo.marginLeft;\n        } else {\n            hwChartTb.leftMargin.enable();\n        }\n    } else if (a.initialConfig.id === \"isRight\") {\n        if (!b) {\n            hwChartTb.rightMargin.disable();\n            hwChartTb.rightMargin.setOriValue(\"\");\n            mychart.update({\n                chart: {\n                    marginRight: null\n                },\n            });\n            delete chartInfo.marginRight;\n        } else {\n            hwChartTb.rightMargin.enable();\n        }\n    } else if (a.initialConfig.id === \"zoomType\") {\n        mychart.update({\n            chart: {\n                zoomType: b.id\n            }\n        });\n        chartInfo.zoomType = b.id;\n    } else if (a.initialConfig.id == \"isInverted\") {\n        mychart.update({\n            chart: {\n                inverted: b\n            },\n        });\n        chartInfo.inverted = b;\n        mychart.addChartEventListener();\n    } else if (a.initialConfig.id == \"isPolar\") {\n        mychart.update({\n            chart: {\n                polar: b\n            },\n        });\n        chartInfo.polar = b;\n        mychart.addChartEventListener();\n    } else if (a.initialConfig.id == \"imgexport\") {\n        isModults(b, 'imgexport')\n    } else if (a.initialConfig.id == \"dataviews\") {\n        isModults(b, 'dataviews')\n    } else if (a.initialConfig.id == \"dataExtract\") {\n        isModults(b, 'dataExtract')\n    } else if (a.initialConfig.id == \"navigator\") {\n        vmdChart.tplJSON.hasNavigator = b;\n    } else if (a.initialConfig.id == \"setProperty\") {\n        isModults(b, 'setProperty')\n    } else if (a.initialConfig.id == \"fitting\") {\n        isModults(b, 'fitting')\n    } else if (a.initialConfig.id == \"zoomData\") {\n        isModults(b, 'zoomData')\n    } else if (a.initialConfig.id == \"tbOpacity\") {\n        mychart.update({\n            chart: {\n                backgroundOpacity: b.id\n            }\n        });\n        chartInfo.backgroundOpacity = b.id;\n    } else if (a.initialConfig.id == \"htOpacity\") {\n        mychart.update({\n            chart: {\n                plotBackgroundOpacity: b.id\n            }\n        });\n        chartInfo.plotBackgroundOpacity = b.id;\n    } else if (a.initialConfig.id == \"showTbBroder\") {\n        elementIsShow(hwChartBorder.tbBorder, b);\n        mychart.update({\n            chart: {\n                borderEnabled: b,\n            }\n        });\n        chartInfo.borderEnabled = b;\n    } else if (a.initialConfig.id == \"showHtBorder\") {\n        elementIsShow(hwChartBorder.htBorder, b);\n        mychart.update({\n            chart: {\n                plotBorderEnabled: b,\n            }\n        });\n        chartInfo.plotBorderEnabled = b;\n    }\n    setHwTooltip(a, b);\n}\n// 图表宽度\nfunction hwChartTb_chartWidthChange(sender, value, describe) {\n    if (isNaN(parseFloat(value))) {\n        mychart.update({\n            chart: {\n                width: null\n            }\n        });\n        delete chartInfo.width;\n    } else {\n        mychart.update({\n            chart: {\n                width: value\n            }\n        });\n        chartInfo.width = value;\n    }\n\n    mychart.seleBorder.attr(mychart.getBackRect());\n}\n// 图表高度\nfunction hwChartTb_chartHeightChange(sender, value, describe) {\n    if (isNaN(parseFloat(value))) {\n        mychart.update({\n            chart: {\n                height: null\n            }\n        });\n        delete chartInfo.height;\n    } else {\n        mychart.update({\n            chart: {\n                height: value\n            }\n        });\n        chartInfo.height = value;\n    }\n    mychart.seleBorder.attr(mychart.getBackRect());\n}\n\nfunction hwChartTb_chartSpacingChange(sender, value, describe) {\n    chartInfo.axisSpacing = parseFloat(value);\n}\n\nfunction hwChartTb_chartminHeightChange(sender, value, describe) {\n    chartInfo.minHeight = parseFloat(value) || 200;\n}\n// 图表上边距\nfunction hwChartTb_chartTopMarginChange(sender, value, describe) {\n    if (isNaN(parseFloat(value))) {\n        mychart.update({\n            chart: {\n                marginTop: null\n            },\n        });\n        delete chartInfo.marginTop;\n    } else {\n        mychart.update({\n            chart: {\n                marginTop: value\n            }\n        });\n        chartInfo.marginTop = value;\n    }\n    mychart.seleBorder.attr(mychart.getBackRect());\n}\n// 图表下边距\nfunction hwChartTb_chartBottomMarginChange(sender, value, describe) {\n    if (isNaN(parseFloat(value))) {\n        mychart.update({\n            chart: {\n                marginBottom: null\n            }\n        })\n        delete chartInfo.marginBottom;\n    } else {\n        mychart.update({\n            chart: {\n                marginBottom: value\n            }\n        })\n        chartInfo.marginBottom = value;\n    }\n\n    mychart.seleBorder.attr(mychart.getBackRect());\n}\n// 图表左边距\nfunction hwChartTb_chartLeftMarginChange(sender, value, describe) {\n    if (isNaN(parseFloat(value))) {\n        mychart.update({\n            chart: {\n                marginLeft: null\n            }\n        })\n        delete chartInfo.marginLeft;\n    } else {\n        mychart.update({\n            chart: {\n                marginLeft: value\n            }\n        })\n        chartInfo.marginLeft = value;\n    }\n\n    mychart.seleBorder.attr(mychart.getBackRect());\n}\n// 图表右边距\nfunction hwChartTb_chartRightMarginChange(sender, value, describe) {\n    if (isNaN(parseFloat(value))) {\n        mychart.update({\n            chart: {\n                marginRight: null\n            }\n        })\n        delete chartInfo.marginRight;\n    } else {\n        mychart.update({\n            chart: {\n                marginRight: value\n            }\n        })\n        chartInfo.marginRight = value;\n    }\n    mychart.seleBorder.attr(mychart.getBackRect());\n}\n// 运行模式下模块\nfunction isModults(Bool, value) {\n    if (Bool) {\n        vmdChart.tplJSON.modules.push(value)\n    } else {\n        vmdChart.tplJSON.modules.splice(vmdChart.tplJSON.modules.indexOf(value), 1);\n    }\n}\n// 判断导出及数据查看是否可用\nfunction isModlut(obj, item) {\n    var isShow = false\n    if (!obj) {\n        return isShow\n    }\n    for (var i = 0; i < obj.length; i++) {\n        if (obj[i] == item) {\n            isShow = true\n            break\n        }\n    }\n    return isShow;\n}\n\nfunction setChartValue() {\n    hwChartTb.zoomType.setValue(chartInfo.zoomType)\n    if (chartInfo.width) {\n        hwChartTb.isWidth.checked = true;\n        hwChartTb.isWidth.setValue(true);\n        hwChartTb.chartWidth.enable();\n        hwChartTb.chartWidth.setOriValue(chartInfo.width);\n    } else {\n        hwChartTb.isWidth.checked = false;\n        hwChartTb.isWidth.setValue(false);\n        hwChartTb.chartWidth.disable();\n        hwChartTb.chartWidth.setOriValue('');\n    }\n    if (chartInfo.height) {\n        hwChartTb.isHeight.checked = true;\n        hwChartTb.isHeight.setValue(true);\n        hwChartTb.chartHeight.enable();\n        hwChartTb.chartHeight.setOriValue(chartInfo.height);\n    } else {\n        hwChartTb.isHeight.checked = false;\n        hwChartTb.isHeight.setValue(false);\n        hwChartTb.chartHeight.disable();\n        hwChartTb.chartHeight.setOriValue('');\n    }\n    if (chartInfo.marginTop) {\n        hwChartTb.isTop.checked = true;\n        hwChartTb.isTop.setValue(true);\n        hwChartTb.topMargin.enable();\n        hwChartTb.topMargin.setOriValue(chartInfo.marginTop);\n    } else {\n        hwChartTb.isTop.checked = false;\n        hwChartTb.isTop.setValue(false);\n        hwChartTb.topMargin.disable();\n        hwChartTb.topMargin.setOriValue('');\n    }\n    if (chartInfo.marginBottom) {\n        hwChartTb.isBottom.checked = true;\n        hwChartTb.isBottom.setValue(true);\n        hwChartTb.bottomMargin.enable();\n        hwChartTb.bottomMargin.setOriValue(chartInfo.marginBottom);\n    } else {\n        hwChartTb.isBottom.checked = false;\n        hwChartTb.isBottom.setValue(false);\n        hwChartTb.bottomMargin.disable();\n        hwChartTb.bottomMargin.setOriValue('');\n    }\n    if (chartInfo.marginLeft) {\n        hwChartTb.isLeft.checked = true;\n        hwChartTb.isLeft.setValue(true);\n        hwChartTb.leftMargin.enable();\n        hwChartTb.leftMargin.setOriValue(chartInfo.marginLeft);\n    } else {\n        hwChartTb.isLeft.checked = false;\n        hwChartTb.isLeft.setValue(false);\n        hwChartTb.leftMargin.disable();\n        hwChartTb.leftMargin.setOriValue('');\n    }\n    if (chartInfo.marginRight) {\n        hwChartTb.isRight.checked = true;\n        hwChartTb.isRight.setValue(true);\n        hwChartTb.rightMargin.enable();\n        hwChartTb.rightMargin.setOriValue(chartInfo.marginRight);\n    } else {\n        hwChartTb.isRight.checked = false;\n        hwChartTb.isRight.setValue(false);\n        hwChartTb.rightMargin.disable();\n        hwChartTb.rightMargin.setOriValue('');\n    }\n    hwChartTb.spacing.setOriValue(chartInfo.axisSpacing || '');\n    hwChartTb.minHeight.setOriValue(chartInfo.minHeight || '');\n    hwChartTb.imgexport.checked = isModlut(vmdChart.tplJSON.modules, 'imgexport');\n    hwChartTb.imgexport.setValue(isModlut(vmdChart.tplJSON.modules, 'imgexport'));\n    hwChartTb.dataviews.checked = isModlut(vmdChart.tplJSON.modules, 'dataviews');\n    hwChartTb.dataviews.setValue(isModlut(vmdChart.tplJSON.modules, 'dataviews'));\n    hwChartTb.dataExtract.checked = isModlut(vmdChart.tplJSON.modules, 'dataExtract');\n    hwChartTb.dataExtract.setValue(isModlut(vmdChart.tplJSON.modules, 'dataExtract'));\n    hwChartTb.setProperty.checked = isModlut(vmdChart.tplJSON.modules, 'setProperty');\n    hwChartTb.setProperty.setValue(isModlut(vmdChart.tplJSON.modules, 'setProperty'));\n    hwChartTb.fitting.checked = isModlut(vmdChart.tplJSON.modules, 'fitting');\n    hwChartTb.fitting.setValue(isModlut(vmdChart.tplJSON.modules, 'fitting'));\n    hwChartTb.zoomData.checked = isModlut(vmdChart.tplJSON.modules, 'zoomData');\n    hwChartTb.zoomData.setValue(isModlut(vmdChart.tplJSON.modules, 'zoomData'));\n    // hwChartTb.isLoad.checked = vmdChart.tplJSON.toolbarConfig && vmdChart.tplJSON.toolbarConfig.isLoad || false;\n    // hwChartTb.isLoad.setValue(vmdChart.tplJSON.toolbarConfig && vmdChart.tplJSON.toolbarConfig.isLoad || false);\n    // hwChartTb.jsonUrl.setValue(vmdChart.tplJSON.toolbarConfig && vmdChart.tplJSON.toolbarConfig.jsonUrl || '/chart/libs/toolbar/button.json');\n    // hwChartTb.imgUrl.setValue(vmdChart.tplJSON.toolbarConfig && vmdChart.tplJSON.toolbarConfig.imgUrl || '/chart/libs/toolbar/imgs/');\n    hwChartTb.isPolar.checked = chartInfo.polar;\n    hwChartTb.navigator.checked = vmdChart.tplJSON.hasNavigator || false;\n    hwChartTb.navigator.setValue(vmdChart.tplJSON.hasNavigator || false);\n    hwChartTb.isInverted.checked = chartInfo.inverted;\n    hwChartTb.isInverted.setValue(chartInfo.inverted);\n    hwChartTb.isPolar.checked = chartInfo.polar;\n    hwChartTb.isPolar.setValue(chartInfo.polar);\n}\n\nfunction setBroderAndBackground() {\n    hwChartBorder.tbBroderHeight.setOriValue(chartInfo.borderWidth);\n    hwChartBorder.tbBackgroundColor.setColorDiv(chartInfo.backgroundColor);\n    hwChartBorder.tbBackgroundColor.setOriColor(chartInfo.backgroundColor);\n    hwChartBorder.tbborderColor.setColorDiv(chartInfo.borderColor)\n    hwChartBorder.tbborderColor.setOriColor(chartInfo.borderColor)\n    hwChartBorder.tbBorderRadius.setOriValue(chartInfo.borderRadius);\n    hwChartBorder.htBackgroundColor.setColorDiv(chartInfo.plotBackgroundColor);\n    hwChartBorder.htBackgroundColor.setOriColor(chartInfo.plotBackgroundColor);\n    hwChartBorder.htBorderColor.setColorDiv(chartInfo.plotBorderColor);\n    hwChartBorder.htBorderColor.setOriColor(chartInfo.plotBorderColor);\n    hwChartBorder.htBorderHeight.setOriValue(chartInfo.plotBorderWidth);\n    hwChartBorder.tbOpacity.setValue(chartInfo.backgroundOpacity);\n    hwChartBorder.htOpacity.setValue(chartInfo.plotBackgroundOpacity)\n    if (chartInfo.borderEnabled) {\n        hwChartBorder.showTbBroder.checked = true;\n        hwChartBorder.showTbBroder.setValue(true)\n        hwChartBorder.tbBorder.enable();\n    } else {\n        hwChartBorder.showTbBroder.checked = false;\n        hwChartBorder.showTbBroder.setValue(false)\n        hwChartBorder.tbBorder.disable();\n    }\n    if (chartInfo.plotBorderEnabled) {\n        hwChartBorder.showHtBorder.checked = true;\n        hwChartBorder.showHtBorder.setValue(true)\n        hwChartBorder.htBorder.enable();\n    } else {\n        hwChartBorder.showHtBorder.checked = false;\n        hwChartBorder.showHtBorder.setValue(false);\n        hwChartBorder.htBorder.disable();\n    }\n}\n// 图表区边框宽度\nfunction hwChartBorder_tbBroderWidthChange(sender, value) {\n    mychart.update({\n        chart: {\n            borderWidth: value\n        }\n    });\n    chartInfo.borderWidth = value;\n    //mychart.addChartEventListener();\n}\n// 绘图区边框宽度\nfunction hwChartBorder_htBroderWidthChange(sender, value) {\n    mychart.update({\n        chart: {\n            plotBorderWidth: value\n        }\n    });\n    chartInfo.plotBorderWidth = value;\n    //mychart.addChartEventListener();\n}\n// 图表区边框圆角\nfunction hwChartBorder_tbBorderRadiusChange(sender, value) {\n    mychart.update({\n        chart: {\n            borderRadius: value\n        }\n    });\n    chartInfo.borderRadius = value;\n    //mychart.addChartEventListener();\n}\n// 图表区背景颜色\nfunction hwChartBorder_backColorChange(sender, SelColor) {\n    mychart.update({\n        chart: {\n            backgroundColor: SelColor,\n        }\n    });\n    chartInfo.backgroundColor = SelColor;\n    //mychart.addChartEventListener();\n}\n//图表区边框颜色\nfunction hwChartBorder_borderColorChange(sender, color) {\n    mychart.update({\n        chart: {\n            borderColor: color\n        }\n    });\n    chartInfo.borderColor = color;\n    //mychart.addChartEventListener();\n}\n// 绘图区背景颜色\nfunction hwChartBorder_plotBackColorChange(sender, color) {\n    mychart.update({\n        chart: {\n            plotBackgroundColor: color,\n        }\n    });\n    chartInfo.plotBackgroundColor = color;\n    //mychart.addChartEventListener();\n}\n//绘图区边框颜色\nfunction hwChartBorder_plotBorderColorChange(sender, color) {\n    mychart.update({\n        chart: {\n            plotBorderColor: color\n        }\n    });\n    chartInfo.plotBorderColor = color;\n    //mychart.addChartEventListener();\n}\n// //////////////////////////////////////////////  序列属性设置 //////////////////////////////////////////////\nfunction setSeriesProperty(a, b) {\n    if (a.initialConfig.id == \"serName\") {\n        b = titleEscape(b);\n        mychart.update({\n            legend: {\n                useHTML: true\n            }\n        });\n        chartLenged.useHTML = true;\n        mySeries.update({\n            name: b\n        })\n        mySeriesInfo.name = b;\n        mySeriesInfo.sname = b;\n        setLink(seriesComlist, getSeriesData(mychart.series), mySeries.userOptions.id);\n    } else if (a.initialConfig.id == \"seriType\") {\n        var w = 2\n        if (b.id == 'scatter') {\n            w = 0;\n        }\n        mySeries.update({\n            type: b.id,\n            lineWidth: w\n        })\n        mySeriesInfo.type = b.id;\n        mySeriesInfo.lineWidth = w;\n        setSeriesClassValue();\n        stackEnable();\n        mychart.addSeriesEventListener();\n    } else if (a.initialConfig.id == \"linkX\") {\n        mySeries.update({\n            xAxis: b.id\n        })\n        mySeriesInfo.xAxis = b.id;\n        mychart.addSeriesEventListener();\n    } else if (a.initialConfig.id == \"linkY\") {\n        mySeries.update({\n            yAxis: b.id\n        })\n        mySeriesInfo.yAxis = b.id;\n        mychart.addSeriesEventListener();\n    } else if (a.initialConfig.id == \"showCheckbox\") {\n        mySeries.update({\n            visible: b\n        })\n        mySeriesInfo.visible = b;\n        mychart.addSeriesEventListener();\n    } else if (a.initialConfig.id == \"step\") {\n        if (b.id == 'none') {\n            mySeries.update({\n                step: null\n            })\n            delete mySeriesInfo.step;\n        } else {\n            mySeries.update({\n                step: b.id\n            })\n            mySeriesInfo.step = b.id;\n        }\n        mychart.addSeriesEventListener();\n    } else if (a.initialConfig.id == \"connectNulls\") {\n        mySeries.update({\n            connectNulls: b\n        })\n        mySeriesInfo.connectNulls = b;\n    } else if (a.initialConfig.id == \"ponitType\") {\n        mySeries.update({\n            marker: {\n                symbol: b.id\n            }\n        })\n        mySeriesInfo.marker.symbol = b.id;\n        mychart.addSeriesEventListener();\n    } else if (a.initialConfig.id == \"daLaFormat\") {\n        mySeries.update({\n            dataLabels: {\n                format: b\n            }\n        })\n        mySeriesInfo.dataLabels.format = b;\n        mychart.addSeriesEventListener();\n    } else if (a.initialConfig.id == \"pointShow\") {\n        elementIsShow(hwSeriesClass.poinPanel, b)\n        mySeries.update({\n            marker: {\n                enabled: b\n            }\n        })\n        mySeriesInfo.marker.enabled = b;\n        mychart.addSeriesEventListener();\n    } else if (a.initialConfig.id == \"labelShow\") {\n        elementIsShow(hwSerieslable.lablePanel, b)\n        mySeries.update({\n            dataLabels: {\n                enabled: b\n            }\n        })\n        mySeriesInfo.dataLabels.enabled = b;\n        mychart.addSeriesEventListener();\n    } else if (a.initialConfig.id == \"storeData\") {\n        vmdChart.tplJSON.data.storeName = b.id;\n        selStore = b.id;\n        setLink(hwSeriesSelf.xData, getChildData(storeData, b.id), '');\n        setLink(hwSeriesSelf.dataY, getChildData(storeData, b.id), '');\n    } else if (a.initialConfig.id == \"xData\") {\n        mySeriesInfo.xData = b.id;\n    } else if (a.initialConfig.id == \"dataY\") {\n        mySeriesInfo.yData = b.id;\n    } else if (a.initialConfig.id == \"stacking\") {\n        if (b.data.id == 'none') {\n            b = null\n        } else {\n            b = b.id\n        }\n        mySeries.update({\n            stacking: b\n        })\n        mySeriesInfo.stacking = b;\n        mychart.addSeriesEventListener();\n    } else if (a.initialConfig.id == \"stack\") {\n        mySeries.update({\n            stack: b\n        })\n        mySeriesInfo.stack = b;\n        mychart.addSeriesEventListener();\n    } else if (a.initialConfig.id == \"seriesShow\") {\n        mySeries.update({\n            visible: !b\n        })\n        mySeriesInfo.visible = !b;\n    }\n}\n// 聚合图聚合点设置\nfunction hwSeriesSelf_gatherInternalChange(sender, value) {\n    if (value == '') {\n        for (var i = 0; i < chartSeries.length; i++) {\n            if (chartSeries[i].type == 'area') {\n                delete chartSeries[i].gatherInterval;\n            }\n        }\n        mychart.update({\n            series: chartSeries\n        })\n    } else {\n        for (var i = 0; i < chartSeries.length; i++) {\n            if (chartSeries[i].type == 'area') {\n                chartSeries[i].gatherInterval = value;\n            }\n        }\n        mychart.update({\n            series: chartSeries\n        })\n    }\n}\n// 序列线属性线型设置\nfunction hwSeriesClass_LineStyleChange(sender, line) {\n    mySeries.update({\n        dashStyle: line\n    })\n    mySeriesInfo.dashStyle = line;\n    mychart.addSeriesEventListener();\n}\n// 序列线属性线宽设置\nfunction hwSeriesClass_lineWidthChange(sender, value) {\n    if (isNaN(parseFloat(value))) {\n        value = 0;\n    }\n    mySeries.update({\n        lineWidth: value\n    })\n    mySeriesInfo.lineWidth = value;\n    mychart.addSeriesEventListener();\n}\n// 序列线属性颜色设置\nfunction hwSeriesClass_lineColorChange(sender, seleColor) {\n    mySeries.update({\n        color: seleColor\n    })\n    mySeriesInfo.color = seleColor;\n    mychart.addSeriesEventListener();\n}\n// 点属性 半径设置\nfunction hwSeriesClass_pointRadiusChange(sender, value) {\n    if (isNaN(parseFloat(value))) {\n        value = 0;\n    }\n    mySeries.update({\n        marker: {\n            radius: value\n        }\n    })\n    mySeriesInfo.marker.radius = value;\n    mychart.addSeriesEventListener();\n}\n// 点属性 外线宽度设置\nfunction hwSeriesClass_ponLinWidthChange(sender, value) {\n    if (isNaN(parseFloat(value))) {\n        value = 0;\n    }\n    mySeries.update({\n        marker: {\n            lineWidth: value\n        }\n    })\n    mySeriesInfo.marker.lineWidth = value;\n    mychart.addSeriesEventListener();\n}\n// 点属性 外线颜色设置\nfunction hwSeriesClass_ponLinColorChange(sender, selColor) {\n    mySeries.update({\n        marker: {\n            lineColor: selColor\n        }\n    })\n    mySeriesInfo.marker.lineColor = selColor;\n    mychart.addSeriesEventListener();\n}\n// 点属性  填充颜色\nfunction hwSeriesClass_ponFillColorChange(sender, selColor) {\n    mySeries.update({\n        marker: {\n            fillColor: selColor\n        }\n    })\n    mySeriesInfo.marker.fillColor = selColor;\n    mychart.addSeriesEventListener();\n}\n// 柱属性 边框宽度\nfunction hwSeriesClass_columnBorderWidthChange(sender, value) {\n    if (isNaN(parseFloat(value))) {\n        value = 0;\n    } else {\n        mySeries.update({\n            borderWidth: value\n        })\n        mySeriesInfo.borderWidth = value;\n    }\n\n    mychart.addSeriesEventListener();\n}\n//最大宽度\nfunction hwSeriesClass_maxPointWidthChange(sender, value) {\n    if (isNaN(parseFloat(value))) {\n        mySeries.update({\n            maxPointWidth: null\n        })\n        delete mySeriesInfo.maxPointWidth;\n    } else {\n        mySeries.update({\n            maxPointWidth: value\n        })\n        mySeriesInfo.maxPointWidth = value;\n    }\n\n    mychart.addSeriesEventListener();\n}\n// 柱属性 边框圆角\nfunction hwSeriesClass_columnBorderRadiusChange(sender, value) {\n    if (isNaN(parseFloat(value))) {\n        value = 0;\n    }\n    mySeries.update({\n        borderRadius: value\n    })\n    mySeriesInfo.borderRadius = value;\n    mychart.addSeriesEventListener();\n}\n// 柱属性 边框颜色\nfunction hwSeriesClass_columnBorderColorChange(sender, selColor) {\n    mySeries.update({\n        borderColor: selColor\n    })\n    mySeriesInfo.borderColor = selColor;\n    mychart.addSeriesEventListener();\n}\n// 饼属性  圆内半径\nfunction hwSeriesClass_peiInnerSizeChange(sender, value) {\n    if (isNaN(parseFloat(value))) {\n        value = 0;\n    }\n    mySeries.update({\n        innerSize: value\n    })\n    mySeriesInfo.innerSize = value;\n    mychart.addSeriesEventListener();\n}\n//面积图填充颜色\nfunction hwSeriesClass_areaColorChange(sender, selColor) {\n    mySeries.update({\n        fillColor: selColor\n    })\n    mySeriesInfo.fillColor = selColor;\n    mychart.addSeriesEventListener();\n}\n// 数据标注水平对齐\nfunction hwSerieslable_seriesLableAlignChange(sender, align) {\n    mySeries.update({\n        dataLabels: {\n            align: align\n        }\n    })\n    mySeriesInfo.dataLabels.align = align;\n    mychart.addSeriesEventListener();\n}\n// 数据标签垂直对齐\nfunction hwSerieslable_seriesLableVarAlignChange(sender, varAlign) {\n    mySeries.update({\n        dataLabels: {\n            verticalAlign: varAlign\n        }\n    })\n    mySeriesInfo.dataLabels.verticalAlign = varAlign;\n    mychart.addSeriesEventListener();\n}\n// 饼图标注距离外沿的位置\nfunction hwSerieslable_seriesLableDistance(sender, value) {\n    if (isNaN(parseFloat(value))) {\n        value = -15;\n    }\n    mySeries.update({\n        dataLabels: {\n            distance: value\n        }\n    })\n    mySeriesInfo.dataLabels.distance = value;\n    mychart.addSeriesEventListener();\n}\n// 数据标注水平偏移量\nfunction hwSerieslable_seriesLableXchange(sender, value) {\n    if (isNaN(parseFloat(value))) {\n        value = 0;\n    }\n    mySeries.update({\n        dataLabels: {\n            x: value\n        }\n    })\n    mySeriesInfo.dataLabels.x = value;\n    mychart.addSeriesEventListener();\n}\n// 数据标注垂直偏移量\nfunction hwSerieslable_seriesLableYchange(sender, value) {\n    if (isNaN(parseFloat(value))) {\n        value = -6;\n    }\n    mySeries.update({\n        dataLabels: {\n            y: value\n        }\n    })\n    mySeriesInfo.dataLabels.y = value;\n    mychart.addSeriesEventListener();\n}\n//数据标注文本字体\nfunction hwSerieslable_FontFamitychange(sender, famity) {\n    if (!famity.data) {\n        return\n    }\n    mySeries.update({\n        dataLabels: {\n            style: {\n                fontFamily: famity.data.EnName\n            }\n        }\n    })\n    mySeriesInfo.dataLabels.style.fontFamily = famity.data.EnName;\n    mychart.addSeriesEventListener();\n}\n// 数据标注文本字号\nfunction hwSerieslable_FontSizechange(sender, size) {\n    if (!size.data) {\n        return\n    }\n    mySeries.update({\n        dataLabels: {\n            style: {\n                fontSize: size.data.px\n            }\n        }\n    })\n    mySeriesInfo.dataLabels.style.fontSize = size.data.px;\n    mychart.addSeriesEventListener();\n}\n// 数据标签文本字形\nfunction hwSerieslable_FontStylechange(sender, style) {\n    if (!style.data) {\n        return\n    }\n    var Style, Weight;\n    if (style.data.EnName == 'normal') {\n        Style = \"normal\";\n        Weight = \"normal\";\n    }\n    if (style.data.EnName == 'bold') {\n        Weight = \"bold\";\n    }\n    if (style.data.EnName == 'italic') {\n        Style = \"italic\";\n    }\n    if (style.data.EnName == 'boldAnditalic') {\n        Style = \"italic\";\n        Weight = \"bold\";\n    }\n    mySeries.update({\n        dataLabels: {\n            style: {\n                fontStyle: Style,\n                fontWeight: Weight\n            }\n        }\n    })\n    mySeriesInfo.dataLabels.style.fontStyle = Style;\n    mySeriesInfo.dataLabels.style.fontWeight = Weight;\n}\n// 数据标注文本颜色\nfunction hwSerieslable_FontColorchange(sender, color) {\n    mySeries.update({\n        dataLabels: {\n            style: {\n                color: color,\n                textOutline: \"none\"\n            }\n        }\n    })\n    mySeriesInfo.dataLabels.style.color = color;\n    mySeriesInfo.dataLabels.style.textOutline = 'none';\n}\n// 序列属性初始赋值\nfunction setSeriesValue() {\n    getXAxisData();\n    getYAxisData();\n    getStore();\n    setLink(seriesComlist, getSeriesData(mychart.series), mySeries.userOptions.id);\n    hwSeriesSelf.serName.setValue(mySeriesInfo.name);\n    setLink(hwSeriesSelf.linkX, xAxisData, mySeriesInfo.xAxis);\n    setLink(hwSeriesSelf.linkY, yAxisData, mySeriesInfo.yAxis);\n    setLink(hwSeriesSelf.storeData, storeData, selStore || '');\n    setLink(hwSeriesSelf.xData, getChildData(storeData, selStore), mySeriesInfo.xData || '');\n    setLink(hwSeriesSelf.dataY, getChildData(storeData, selStore), mySeriesInfo.yData || '');\n    hwSeriesSelf.stack.setValue(mySeriesInfo.stack);\n    if (mySeriesInfo.stacking == null || mySeriesInfo.stacking == '') {\n        hwSeriesSelf.stacking.setValue('none');\n    } else {\n        hwSeriesSelf.stacking.setValue(mySeriesInfo.stacking);\n    }\n    hwSeriesSelf.gatherInterval.setOriValue(mySeriesInfo.gatherInterval || '')\n    stackEnable();\n}\n// 分类属性初始赋值\nfunction setSeriesClassValue() {\n    hwSeriesClass.seriType.setValue(mySeriesInfo.type);\n    // 线属性\n    if (mySeriesInfo.type === 'line' || mySeriesInfo.type === 'area' || mySeriesInfo.type === 'spline') {\n        hwSeriesClass.linePanel.enable();\n        hwSeriesClass.LineStyle.setOriLine(mySeriesInfo.dashStyle);\n        hwSeriesClass.lineWidth.setOriValue(mySeriesInfo.lineWidth);\n        hwSeriesClass.step.setValue(mySeriesInfo.step);\n        hwSeriesClass.connectNulls.checked = mySeriesInfo.connectNulls;\n        hwSeriesClass.connectNulls.setValue(mySeriesInfo.connectNulls);\n        hwSeriesClass.lineColor.setColorDiv(mySeriesInfo.color);\n        hwSeriesClass.lineColor.setOriColor(mySeriesInfo.color);\n        hwSeriesClass.areaColorSelect.setOriColor(mySeriesInfo.fillColor || mySeriesInfo.color || \"#fff\");\n        hwSeriesClass.areaColorSelect.setColorDiv(mySeriesInfo.fillColor || mySeriesInfo.color || \"#fff\");\n    } else {\n        hwSeriesClass.linePanel.disable();\n    }\n    // 点属性\n    if (mySeriesInfo.type === 'line' || mySeriesInfo.type === 'area' || mySeriesInfo.type === 'spline' || mySeriesInfo.type === 'scatter') {\n        hwSeriesClass.pointShow.enable();\n        hwSeriesClass.pointShow.checked = mySeriesInfo.marker.enabled;\n        hwSeriesClass.pointShow.setValue(mySeriesInfo.marker.enabled);\n        elementIsShow(hwSeriesClass.poinPanel, mySeriesInfo.marker.enabled);\n        hwSeriesClass.ponitType.setValue(mySeriesInfo.marker.symbol);\n        hwSeriesClass.pointRadius.setOriValue(mySeriesInfo.marker.radius);\n        hwSeriesClass.ponLinColor.setColorDiv(mySeriesInfo.marker.lineColor);\n        hwSeriesClass.ponLinColor.setOriColor(mySeriesInfo.marker.lineColor);\n        hwSeriesClass.ponLinWidth.setOriValue(mySeriesInfo.marker.lineWidth);\n        hwSeriesClass.ponFillColor.setColorDiv(mySeriesInfo.marker.fillColor)\n        hwSeriesClass.ponFillColor.setOriColor(mySeriesInfo.marker.fillColor)\n    } else {\n        hwSeriesClass.poinPanel.disable();\n        hwSeriesClass.pointShow.disable();\n    }\n    // 柱属性\n    if (mySeriesInfo.type === 'column') {\n        hwSeriesClass.columnPanel.enable();\n        hwSeriesClass.columnColor.setColorDiv(mySeriesInfo.color);\n        hwSeriesClass.columnColor.setOriColor(mySeriesInfo.color);\n        hwSeriesClass.borderColor.setColorDiv(mySeriesInfo.borderColor);\n        hwSeriesClass.borderColor.setOriColor(mySeriesInfo.borderColor);\n        hwSeriesClass.borderWidth.setOriValue(mySeriesInfo.borderWidth);\n        hwSeriesClass.borderRadius.setOriValue(mySeriesInfo.borderRadius);\n        hwSeriesClass.maxPointWidth.setOriValue(mySeriesInfo.maxPointWidth || '')\n    } else {\n        hwSeriesClass.columnPanel.disable();\n    }\n    // 饼属性\n    if (mySeriesInfo.type === 'pie') {\n        hwSeriesClass.piePanel.enable();\n        hwSeriesClass.innerSize.setOriValue(mySeriesInfo.innerSize);\n    } else {\n        hwSeriesClass.piePanel.disable();\n    }\n}\n// 数据标注初始赋值\nfunction setSeriesDataLableValue() {\n    hwSerieslable.labelShow.checked = mySeriesInfo.dataLabels.enabled;\n    hwSerieslable.labelShow.setValue(mySeriesInfo.dataLabels.enabled);\n    elementIsShow(hwSerieslable.lablePanel, mySeriesInfo.dataLabels.enabled)\n    hwSerieslable.daLaFormat.setValue(mySeriesInfo.dataLabels.format);\n    hwSerieslable.dataLabelX.setOriValue(mySeriesInfo.dataLabels.x);\n    hwSerieslable.dataLabelY.setOriValue(mySeriesInfo.dataLabels.y);\n    hwSerieslable.FontSize.setFontSize(mySeriesInfo.dataLabels.style.fontSize);\n    hwSerieslable.FontFamity.setFontFamity(mySeriesInfo.dataLabels.style.fontFamily);\n    hwSerieslable.ColorSelect.setColorDiv(mySeriesInfo.dataLabels.style.color);\n    hwSerieslable.ColorSelect.setOriColor(mySeriesInfo.dataLabels.style.color);\n    hwSerieslable.distance.setOriValue(mySeriesInfo.dataLabels.distance || '');\n    if (mySeriesInfo.dataLabels.style.fontStyle == 'normal' && mySeriesInfo.dataLabels.style.fontWeight == 'normal') {\n        hwSerieslable.FontStyle.setFontStyle('normal')\n    }\n    if (mySeriesInfo.dataLabels.style.fontStyle == 'italic' && mySeriesInfo.dataLabels.style.fontWeight == 'bold') {\n        hwSerieslable.FontStyle.setFontStyle('boldAnditalic')\n    }\n    if (mySeriesInfo.dataLabels.style.fontStyle == 'normal' && mySeriesInfo.dataLabels.style.fontWeight == 'bold') {\n        hwSerieslable.FontStyle.setFontStyle('bold')\n    }\n    if (mySeriesInfo.dataLabels.style.fontStyle == 'italic' && mySeriesInfo.dataLabels.style.fontWeight == 'normal') {\n        hwSerieslable.FontStyle.setFontStyle('italic')\n    }\n    var aligeIndex = 2;\n    switch (mySeriesInfo.dataLabels.align) {\n        case 'left':\n            aligeIndex = 1;\n            break;\n        case 'center':\n            aligeIndex = 2;\n            break;\n        case 'right':\n            aligeIndex = 3;\n            break;\n    }\n    hwSerieslable.hwButtonGroup1.setSelectIndex(aligeIndex);\n    var varAlignIndex = 2;\n    if (mySeriesInfo.type === 'column') {\n        switch (mySeriesInfo.dataLabels.verticalAlign) {\n            case 'bottom':\n                varAlignIndex = 1;\n                break;\n            case 'middle':\n                varAlignIndex = 2;\n                break;\n            case 'top':\n                varAlignIndex = 3;\n                break;\n        }\n    } else {\n        switch (mySeriesInfo.dataLabels.verticalAlign) {\n            case 'top':\n                varAlignIndex = 1;\n                break;\n            case 'middle':\n                varAlignIndex = 2;\n                break;\n            case 'bottom':\n                varAlignIndex = 3;\n                break;\n        }\n    }\n    hwSerieslable.hwButtonGroup.setSelectIndex(varAlignIndex);\n}\n// 获取坐标轴信息\nfunction getXAxisData() {\n    var axisId, axisName;\n    mychart.xAxis.forEach(function(item, index) {\n        if (item.userOptions.id) {\n            axisId = item.userOptions.id\n        } else {\n            axisId = '0';\n        }\n        if (item.userOptions.title && item.userOptions.title.text) {\n            axisName = item.userOptions.title.text\n        } else {\n            if (index != 0) {\n                axisName = '横轴' + index\n            } else {\n                axisName = '横轴'\n            }\n        }\n        xAxisData.push({\n            id: axisId,\n            name: removeBr(axisName)\n        })\n    })\n}\n\nfunction getYAxisData() {\n    var axisId, axisName;\n    mychart.yAxis.forEach(function(item, index) {\n        if (item.userOptions.id) {\n            axisId = item.userOptions.id\n        } else {\n            axisId = '0'\n        }\n        if (item.userOptions.title && item.userOptions.title.text) {\n            axisName = item.userOptions.title.text\n        } else {\n            if (index != 0) {\n                axisName = '纵轴' + index\n            } else {\n                axisName = '纵轴'\n            }\n        }\n        yAxisData.push({\n            id: axisId,\n            name: removeBr(axisName)\n        })\n    })\n}\n// 获取数据集信息\nfunction getStore() {\n    storeData = [];\n    myStore.forEach(function(item, index) {\n        var arr = [];\n        if (item.childNodes && item.childNodes.length > 0) {\n            item.childNodes.forEach(function(value, i) {\n                arr.push({\n                    id: value.text,\n                    text: value.text\n                })\n            })\n        }\n        storeData.push({\n            id: item.text,\n            name: item.text,\n            child: arr\n        })\n    })\n}\n// 根据选择的数据集加载字段信息\nfunction getChildData(data, id) {\n    var arr = [];\n    if (vmd.isArray(data)) {\n        for (var i = 0; i < data.length; i++) {\n            if (id == data[i].id) {\n                arr = data[i].child\n            }\n            if (id == '' || id == undefined) {\n                arr = data[0].child\n            }\n        }\n    }\n    return arr;\n}\n// 处理序列数据\nfunction getSeriesData(arr) {\n    var data = [];\n    arr.forEach(function(item) {\n        data.push({\n            id: item.userOptions.id,\n            name: item.userOptions.name\n        })\n    })\n    return data;\n}\n// 动态给下拉列表赋值\nfunction setLink(ele, data, id) {\n    if (data.length <= 0) return;\n    ele.valueField = 'id';\n    if (data[0].hasOwnProperty(\"name\")) {\n        ele.displayField = 'name';\n        var store = new vmd.data.Store({\n            data: data,\n            fields: ['id', 'name']\n        })\n    } else if (data[0].hasOwnProperty(\"text\")) {\n        ele.displayField = 'text';\n        var store = new vmd.data.Store({\n            data: data,\n            fields: ['id', 'text']\n        })\n    }\n    ele.bindStore(store);\n    if (id === 0) {\n        ele.setValue(data[0].id)\n    } else {\n        ele.setValue(id)\n    }\n}\n// 下拉列表切换序列\nfunction seriesComlist_selectChanged(sender, combo, record, index) {\n    var mySeriesId = record.id;\n    mySeries = mychart.get(mySeriesId);\n    for (var i = 0; i < chartSeries.length; i++) {\n        if (chartSeries[i].id == mySeriesId) {\n            vmd.util.applyIf(vmdChart.tplJSON.series[i], defaultSeries);\n            vmd.util.applyIf(vmdChart.tplJSON.series[i].dataLabels, defaultSeries.dataLabels);\n            vmd.util.applyIf(vmdChart.tplJSON.series[i].marker, defaultSeries.marker);\n            mySeriesInfo = chartSeries[i];\n            mySeriesInfo.name = mySeries.userOptions.name;\n            break\n        }\n    }\n    var activeTab = MyTabs2.getActiveTab().title;\n    debugger\n    switch (activeTab) {\n        case \"序列\":\n            setSeriesValue();\n            break;\n        case \"分类属性\":\n            setSeriesClassValue();;\n            break;\n        case \"数据标注\":\n            setSeriesDataLableValue();\n            break;\n    }\n}\n// 堆叠是否可用\nfunction stackEnable() {\n    if (mySeriesInfo.type === 'column' || mySeriesInfo.type === 'area') {\n        hwSeriesSelf.stackPanel.enable();\n    } else {\n        hwSeriesSelf.stackPanel.disable();\n    }\n    if (mySeriesInfo.type == 'area') {\n        hwSeriesSelf.gatherInterval.enable();\n    } else {\n        hwSeriesSelf.gatherInterval.disable();\n    }\n}\n// 序列tab页切换\nfunction MyTabs2_tabchange(sender, tab) {\n    vmd.taskRunner(function() {\n        if (chartSeries) return true;\n    }, function() {\n        if (!mySeries) {\n            mySeries = mychart.get(chartSeries[0].id);\n            for (var i = 0; i < chartSeries.length; i++) {\n                if (chartSeries[i].id == chartSeries[0].id) {\n                    vmd.util.applyIf(vmdChart.tplJSON.series[i], defaultSeries);\n                    vmd.util.applyIf(vmdChart.tplJSON.series[i].dataLabels, defaultSeries.dataLabels);\n                    vmd.util.applyIf(vmdChart.tplJSON.series[i].marker, defaultSeries.marker);\n                    mySeriesInfo = chartSeries[i];\n                    mySeriesInfo.name = mySeries.userOptions.name;\n                    break\n                }\n            }\n        }\n        getXAxisData();\n        getYAxisData();\n        getStore();\n        setLink(seriesComlist, getSeriesData(mychart.series), mySeries.userOptions.id);\n        switch (tab.title) {\n            case \"序列\":\n                setSeriesValue();\n                break;\n            case \"分类属性\":\n                setSeriesClassValue();;\n                break;\n            case \"数据标注\":\n                setSeriesDataLableValue();\n                break;\n        }\n    })\n}\n// 组件是否显示\nfunction elementIsShow(ele, isShow) {\n    if (isShow) {\n        ele.enable();\n    } else {\n        ele.disable();\n    }\n}\n// 日期格式化\nfunction date_getMillisecond(sDate) {\n    var year, month, day, hour, minute, second, milliseconds = 0;\n    sDate += \"\";\n    sDate = sDate.replace(/\\//g, \"-\");\n    //20140120 || 2014 || 201401\n    if (/\\d{4,8}/.test(sDate)) {\n        year = parseInt(sDate.substr(0, 4), 10);\n        month = parseInt(sDate.substr(4, 2), 10);\n        day = parseInt(sDate.substr(6, 2), 10);\n    } else if (sDate == \"0\") {\n        return 0;\n    }\n    //日期格式不正确\n    else {\n        alert(\"日期格式不正确\");\n        return;\n    }\n    //修正年月日\n    year = isNaN(year) ? 2000 : year;\n    month = isNaN(month) ? 1 : month;\n    day = isNaN(day) ? 1 : day;\n    //修正时分秒\n    hour = isNaN(hour) ? 0 : hour;\n    minute = isNaN(minute) ? 0 : minute;\n    second = isNaN(second) ? 0 : second;\n    return Date.UTC(year, month - 1, day, hour, minute, second, milliseconds);\n}\n// 修正数据\nfunction changNum(a) {\n    if (a > 11) {\n        a = a - 11;\n        return changNum(a)\n    } else {\n        return a\n    }\n}\n// 添加序列\nfunction addSeries_click(sender, e) {\n    var color = ['#7cb5ec', \"#ff0000\", \"#339966\", \"#ff9900\", \"#000fff\", \"#cc99ff\", \"#000000\", \"#ffff00\", \"#993300\", \"#ff6600\", \"#000080\"]\n    var oriData = vmdChart.runJSON.data.json;\n    var num = chartSeries.length;\n    var newData = [];\n    var id = vmd.getGuid();\n    // 添加设计模式下序列数据\n    for (var i = 0; i < oriData.length; i++) {\n        if (i > 0) {\n            if (vmdChart.isXAxisDateTime === 'datetime') {\n                newData.push([date_getMillisecond(oriData[i][0]), oriData[i][changNum(num) + 1]])\n            } else {\n                newData.push([oriData[i][0], oriData[i][changNum(num) + 1]])\n            }\n        }\n    }\n    // 添加序列\n    mychart.addSeries({\n        id: id,\n        name: \"series\" + (num + 1),\n        data: newData,\n        type: mySeries.type,\n        color: color[changNum(num)]\n    });\n    // 将数据与数据列属性关联\n    vmdChart.tplJSON.data.seriesMapping.push({\n        x: 0,\n        y: changNum(num) + 1\n    });\n    // 新序列的属性数据\n    chartSeries.push({\n        id: id,\n        type: mySeries.type,\n        color: color[changNum(num)],\n        marker: {\n            fillColor: color[changNum(num)]\n        },\n    });\n    for (var i = 0; i < chartSeries.length; i++) {\n        if (chartSeries[i].id === id) {\n            mySeriesInfo = chartSeries[i];\n            break\n        }\n    }\n    mySeries = mychart.get(id);\n    vmd.util.applyIf(mySeriesInfo, defaultSeries);\n    vmd.util.applyIf(mySeriesInfo.dataLabels, defaultSeries.dataLabels);\n    vmd.util.applyIf(mySeriesInfo.marker, defaultSeries.marker);\n    mySeriesInfo.name = mySeries.userOptions.name;\n    setLink(seriesComlist, getSeriesData(mychart.series), mySeries.userOptions.id);\n    var activeTab = MyTabs2.getActiveTab().title;\n    switch (activeTab) {\n        case \"序列\":\n            setSeriesValue();\n            break;\n        case \"分类属性\":\n            setSeriesClassValue();;\n            break;\n        case \"数据标注\":\n            setSeriesDataLableValue();\n            break;\n    }\n    mychart.addSeriesEventListener();\n}\n// 删除序列\nfunction delSeries_click(sender, e) {\n    Ext.Msg.confirm('提示', '确定删除该序列?', function(bnt) {\n        if (bnt == 'yes') {\n            var id = mySeries.userOptions.id;\n            for (var i = 0; i < chartSeries.length; i++) {\n                if (chartSeries[i].id === id) {\n                    if (i > 0) {\n                        mySeries = mychart.get(chartSeries[i - 1].id)\n                        mySeriesInfo = chartSeries[i - 1]\n                    }\n                    if (i === 0) {\n                        if (chartSeries[i + 1]) {\n                            mySeries = mychart.get(chartSeries[i + 1].id)\n                            seriesInfo = chartSeries[i + 1]\n                        } else {\n                            mySeries = {}\n                            chartSeries = {}\n                        }\n                    }\n                    var seriesMapping = vmdChart.tplJSON.data.seriesMapping;\n                    chartSeries.remove(chartSeries[i]);\n                    seriesMapping.remove(seriesMapping[i]);\n                    break\n                }\n            }\n            mychart.get(id).remove();\n            setLink(seriesComlist, getSeriesData(mychart.series), mySeries.userOptions.id);\n            var activeTab = MyTabs2.getActiveTab().title;\n            switch (activeTab) {\n                case \"序列\":\n                    setSeriesValue();\n                    break;\n                case \"分类属性\":\n                    setSeriesClassValue();;\n                    break;\n                case \"数据标注\":\n                    setSeriesDataLableValue();\n                    break;\n            }\n        }\n    })\n}\n// ////////////////////////////////////////// 坐标轴属性设置 ///////////////////////////////////////////////\n// 处理坐标轴数据\nfunction getAxisData(arr) {\n    var data = [];\n    arr.forEach(function(item) {\n        var name = removeBr(item.userOptions.title.text)\n        if (item.userOptions.title.text === '' || item.userOptions.title.text == null) {\n            name = item.coll + item.userOptions.index\n        }\n        data.push({\n            id: item.userOptions.id,\n            name: name\n        })\n    })\n    return data;\n}\n// 坐标轴组件tab页切换\nfunction MyTabs1_tabchange(sender, tab) {\n    vmd.taskRunner(function() {\n        if (mychart) return true;\n    }, function() {\n        if (!myAxis) {\n            var myAxisId = mychart.axes[0].userOptions.id\n            myAxis = mychart.get(myAxisId);\n            if (myAxis.coll === 'xAxis') {\n                var axisData = chartXAxis;\n            } else if (myAxis.coll === 'yAxis') {\n                var axisData = chartYAxis;\n            }\n            for (var i = 0; i < axisData.length; i++) {\n                if (axisData[i].id == myAxisId) {\n                    myAxisInfo = axisData[i];\n                    break\n                }\n            }\n            vmd.util.applyIf(myAxisInfo, defultAxis);\n            vmd.util.applyIf(myAxisInfo.labels, defultAxis.labels);\n            vmd.util.applyIf(myAxisInfo.title, defultAxis.title);\n            // 记录初始标题和标签格式\n            titleText = myAxisInfo.title.text;\n            lastlableFormat = myAxisInfo.labels.format;\n        }\n        setLink(axisComlist, getAxisData(mychart.axes), myAxisId);\n        switch (tab.title) {\n            case \"标题\":\n                setAxisOriTitle();\n                break;\n            case \"轴属性\":\n                setAxisOriValue();\n                break;\n            case \"刻度线\":\n                setTickOriValue();\n                break;\n            case \"标签\":\n                setAxisLableOriValue();\n                break;\n        }\n    })\n}\n// 坐标轴标题初始赋值\nfunction setAxisOriTitle() {\n    if (myAxisInfo.title.text && myAxisInfo.title.text != '') {\n        hwAxisTitle.titleShow.checked = true;\n        hwAxisTitle.titleShow.setValue(true);\n        hwAxisTitle.titlePanle.enable();\n        if (myAxisInfo.title.show == 'vertical') {\n            hwAxisTitle.ButtonGroup.setSelectIndex(2);\n            hwAxisTitle.titleText.setValue(removeBr(myAxisInfo.title.text));\n        } else {\n            hwAxisTitle.ButtonGroup.setSelectIndex(1);\n            hwAxisTitle.titleText.setValue(removeBr(myAxisInfo.title.text));\n        }\n    } else {\n        hwAxisTitle.titleShow.checked = false;\n        hwAxisTitle.titleShow.setValue(false);\n        hwAxisTitle.titlePanle.disable();\n        hwAxisTitle.titleText.setValue(titleText);\n        hwAxisTitle.ButtonGroup.setSelectIndex(1);\n    }\n    hwAxisTitle.titleOffset.setOriValue(myAxisInfo.title.offset);\n    hwAxisTitle.titleX.setOriValue(myAxisInfo.title.x || '');\n    hwAxisTitle.titleY.setOriValue(myAxisInfo.title.y || '');\n    hwAxisTitle.rotation.setOriValue(myAxisInfo.title.rotation || 0);\n    hwAxisTitle.axisFontSize.setFontSize(myAxisInfo.title.style.fontSize || '');\n    hwAxisTitle.axisFontFamity.setFontFamity(myAxisInfo.title.style.fontFamily || '');\n    hwAxisTitle.axisColorSelect.setColorDiv(myAxisInfo.title.style.color || '');\n    hwAxisTitle.axisColorSelect.setOriColor(myAxisInfo.title.style.color || '');\n    if (myAxisInfo.title.style.fontStyle == 'normal' && myAxisInfo.title.style.fontWeight == 'normal') {\n        hwAxisTitle.axisFontStyle.setFontStyle('normal')\n    }\n    if (myAxisInfo.title.style.fontStyle == 'italic' && myAxisInfo.title.style.fontWeight == 'bold') {\n        hwAxisTitle.axisFontStyle.setFontStyle('boldAnditalic')\n    }\n    if (myAxisInfo.title.style.fontStyle == 'normal' && myAxisInfo.title.style.fontWeight == 'bold') {\n        hwAxisTitle.axisFontStyle.setFontStyle('bold')\n    }\n    if (myAxisInfo.title.style.fontStyle == 'italic' && myAxisInfo.title.style.fontWeight == 'normal') {\n        hwAxisTitle.axisFontStyle.setFontStyle('italic')\n    }\n    hwAxisTitle.Titlealign.setValue(myAxisInfo.title.align)\n}\n// 坐标轴自身属性初始赋值\nfunction setAxisOriValue() {\n    hwAxisSelf.axisShow.checked = myAxisInfo.visible;\n    hwAxisSelf.axisShow.setValue(myAxisInfo.visible);\n    hwAxisSelf.minPad.setOriValue(myAxisInfo.minPadding);\n    elementIsShow(hwAxisSelf.axisPanel, myAxisInfo.visible)\n    elementIsShow(hwAxisSelf.isOpposite, myAxisInfo.visible)\n    hwAxisSelf.axisType.setValue(myAxisInfo.type);\n    hwAxisSelf.dateComlist.setValue(dateFormat_replace_date(myAxisInfo.dateTimeLabelFormats.day));\n    if (myAxisInfo.type == 'datetime') {\n        hwAxisSelf.dateComlist.enable()\n    } else {\n        hwAxisSelf.dateComlist.disable()\n    }\n    hwAxisSelf.axisOffset.setOriValue(myAxisInfo.offset || 0);\n    hwAxisSelf.axisCeiling.setOriValue(myAxisInfo.ceiling || '');\n    hwAxisSelf.axisFloor.setOriValue(myAxisInfo.floor || 0);\n    hwAxisSelf.axisMax.setOriValue(myAxisInfo.max || '');\n    hwAxisSelf.axisMin.setOriValue(myAxisInfo.min || 0);\n    hwAxisSelf.isOpposite.checked = myAxisInfo.opposite;\n    hwAxisSelf.isOpposite.setValue(myAxisInfo.opposite);\n    hwAxisSelf.isReversed.checked = myAxisInfo.reversed;\n    hwAxisSelf.isReversed.setValue(myAxisInfo.reversed);\n    hwAxisSelf.lineWidth.setOriValue(myAxisInfo.lineWidth || 0);\n    hwAxisSelf.lineColors.setColorDiv(myAxisInfo.lineColor);\n    hwAxisSelf.lineColors.setOriColor(myAxisInfo.lineColor);\n    hwAxisSelf.axisHeight.setOriValue(myAxisInfo.height || '');\n    hwAxisSelf.axisTop.setOriValue(myAxisInfo.top || '0%');\n    myAxisInfo.crosshair = myAxisInfo.crosshair || {};\n    hwAxisSelf.crosshairColor.setColorDiv(myAxisInfo.crosshair.color || '#cccccc');\n    hwAxisSelf.crosshairColor.setOriColor(myAxisInfo.crosshair.color || '#cccccc');\n    hwAxisSelf.crosshairWidth.setOriValue(myAxisInfo.crosshair.width || 0);\n    hwAxisSelf.hwLineStyle.setOriLine(myAxisInfo.crosshair.dashStyle || 'Solid');\n    if (myAxis.coll === \"xAxis\") {\n        hwAxisSelf.axisHeight.disable();\n        hwAxisSelf.axisTop.disable();\n        // hwAxisSelf.axisOffset.disable();\n        hwAxisSelf.axisMax.disable();\n        hwAxisSelf.axisMin.disable();\n    } else if (myAxis.coll === \"yAxis\") {\n        hwAxisSelf.axisHeight.enable();\n        hwAxisSelf.axisTop.enable();\n        // hwAxisSelf.axisOffset.enable();\n        hwAxisSelf.axisMax.enable();\n        hwAxisSelf.axisMin.enable();\n    }\n    if (myAxisInfo.direction == 'vertical') {\n        hwAxisSelf.hwButtonGroup.setSelectIndex(2);\n    } else {\n        hwAxisSelf.hwButtonGroup.setSelectIndex(1);\n    }\n}\n// 刻度线及网格线属性初始赋值\nfunction setTickOriValue() {\n    // 主刻度线\n    hwAxisTick.tickPosition.setValue(myAxisInfo.tickPosition);\n    hwAxisTick.tickWidth.setOriValue(myAxisInfo.tickWidth);\n    hwAxisTick.tickInterval.setOriValue(myAxisInfo.tickInterval || '');\n    hwAxisTick.tickPixelInterval.setOriValue(myAxisInfo.tickPixelInterval || '');\n    hwAxisTick.tickLenfht.setOriValue(myAxisInfo.tickLength);\n    hwAxisTick.tickColors.setColorDiv(myAxisInfo.tickColor);\n    hwAxisTick.tickColors.setOriColor(myAxisInfo.tickColor);\n    hwAxisTick.tickAmount.setOriValue(myAxisInfo.tickAmount || '');\n\n    // 主网格线\n    hwAxisTick.gridLineColor.setOriColor(myAxisInfo.gridLineColor);\n    hwAxisTick.gridLineColor.setColorDiv(myAxisInfo.gridLineColor);\n    hwAxisTick.gridLineWidth.setOriValue(myAxisInfo.gridLineWidth);\n    hwAxisTick.gridLineDashStyle.setOriLine(myAxisInfo.gridLineDashStyle);\n    // 次刻度线\n    hwAxisTick.minorTickPos.setValue(myAxisInfo.minorTickPosition || '');\n    hwAxisTick.minorTickWidth.setOriValue(myAxisInfo.minorTickWidth || 0);\n    hwAxisTick.minorTickLenght.setOriValue(myAxisInfo.minorTickLength || 0);\n    hwAxisTick.minorTickColor.setColorDiv(myAxisInfo.minorTickColor || \"#ffffff\");\n    hwAxisTick.minorTickColor.setOriColor(myAxisInfo.minorTickColor || \"#ffffff\");\n    // 次网格线\n    hwAxisTick.minorGridLineColor.setOriColor(myAxisInfo.minorGridLineColor || \"#ffffff\");\n    hwAxisTick.minorGridLineColor.setColorDiv(myAxisInfo.minorGridLineColor || \"#ffffff\");\n    hwAxisTick.minorGridLineWidth.setOriValue(myAxisInfo.minorGridLineWidth || 0);\n    hwAxisTick.minorGridLineDashStyle.setOriLine(myAxisInfo.minorGridLineDashStyle || \"\");\n}\n// 坐标轴标签初始赋值\nfunction setAxisLableOriValue() {\n    hwAxislable.lableShow.checked = myAxisInfo.labels.enabled;\n    hwAxislable.lableShow.setValue(myAxisInfo.labels.enabled);\n    hwAxislable.allowDecimals.checked = myAxisInfo.labels.allowDecimals || true;\n    hwAxislable.allowDecimals.setValue(myAxisInfo.labels.allowDecimals || true);\n    elementIsShow(hwAxislable.lablePanel, myAxisInfo.labels.enabled)\n    hwAxislable.laberFormat.setValue(myAxisInfo.labels.format);\n    hwAxislable.labelStaggerLines.setOriValue(myAxisInfo.labels.staggerLines);\n    hwAxislable.labelRotation.setOriValue(myAxisInfo.labels.rotation);\n    hwAxislable.lableStep.setOriValue(myAxisInfo.labels.step || '');\n    hwAxislable.labelX.setOriValue(myAxisInfo.labels.x);\n    hwAxislable.labelY.setOriValue(myAxisInfo.labels.y);\n    hwAxislable.FontSize.setFontSize(myAxisInfo.labels.style.fontSize);\n    hwAxislable.FontFamity.setFontFamity(myAxisInfo.labels.style.fontFamily);\n    hwAxislable.fontColor.setColorDiv(myAxisInfo.labels.style.color);\n    hwAxislable.fontColor.setOriColor(myAxisInfo.labels.style.color);\n    if (myAxisInfo.labels.style.fontStyle == 'normal' && myAxisInfo.labels.style.fontWeight == 'normal') {\n        hwAxislable.FontStyle.setFontStyle('normal')\n    }\n    if (myAxisInfo.labels.style.fontStyle == 'italic' && myAxisInfo.labels.style.fontWeight == 'bold') {\n        hwAxislable.FontStyle.setFontStyle('boldAnditalic')\n    }\n    if (myAxisInfo.labels.style.fontStyle == 'normal' && myAxisInfo.labels.style.fontWeight == 'bold') {\n        hwAxislable.FontStyle.setFontStyle('bold')\n    }\n    if (myAxisInfo.labels.style.fontStyle == 'italic' && myAxisInfo.labels.style.fontWeight == 'normal') {\n        hwAxislable.FontStyle.setFontStyle('italic')\n    }\n    var aligeIndex = 2;\n    switch (myAxisInfo.labels.align) {\n        case 'left':\n            aligeIndex = 1;\n            break;\n        case 'center':\n            aligeIndex = 2;\n            break;\n        case 'right':\n            aligeIndex = 3;\n            break;\n    }\n    hwAxislable.hwButtonGroup.setSelectIndex(aligeIndex);\n};\n// 下拉列表改变坐标轴\nfunction axisComlist_selectChanged(sender, combo, record, index) {\n    var myAxisId = record.id;\n    myAxis = mychart.get(myAxisId);\n    if (myAxis.coll === 'xAxis') {\n        var axisData = chartXAxis;\n    } else if (myAxis.coll === 'yAxis') {\n        var axisData = chartYAxis;\n    }\n    for (var i = 0; i < axisData.length; i++) {\n        if (axisData[i].id == myAxisId) {\n            myAxisInfo = axisData[i];\n            break\n        }\n    }\n    vmd.util.applyIf(myAxisInfo, defultAxis);\n    vmd.util.applyIf(myAxisInfo.labels, defultAxis.labels);\n    vmd.util.applyIf(myAxisInfo.title, defultAxis.title);\n    // 记录初始标题和标签格式\n    titleText = myAxisInfo.title.text;\n    lastlableFormat = myAxisInfo.labels.format;\n    var activeTab = MyTabs1.getActiveTab().title;\n    switch (activeTab) {\n        case \"标题\":\n            setAxisOriTitle();\n            break;\n        case \"轴属性\":\n            setAxisOriValue();\n            break;\n        case \"刻度线\":\n            setTickOriValue();\n            break;\n        case \"标签\":\n            setAxisLableOriValue();\n            break;\n    }\n    mychart.seleBorder.attr(myAxis.getBackRect());\n}\n// 坐标轴属性设置\nfunction setAxisProperty(a, b, c) {\n    if (a.initialConfig.id == \"axisShow\") {\n        elementIsShow(hwAxislable.lablePanel, b)\n        myAxis.update({\n            visible: b\n        });\n        myAxisInfo.visible = b;\n    } else if (a.initialConfig.id == \"axisType\") {\n        console.log(a, b, c)\n        if (b.id == 'datetime') {\n            hwAxisSelf.dateComlist.enable();\n            myAxisInfo.labels.format = '';\n        } else {\n            hwAxisSelf.dateComlist.disable();\n            myAxisInfo.labels.format = lastlableFormat;\n        }\n        myAxis.update({\n            labels: {\n                format: myAxisInfo.labels.format\n            }\n        });\n        myAxis.update({\n            type: b.id\n        });\n        myAxisInfo.type = b.id;\n    } else if (a.initialConfig.id == \"dateComlist\") {\n        if (b.id != null) {\n            b = date_replace_dateFormat(hwAxisSelf.dateComlist.getValue());\n        }\n        myAxis.update({\n            dateTimeLabelFormats: {\n                millisecond: b,\n                second: b,\n                minute: b,\n                hour: b,\n                day: b,\n                week: b,\n                month: b,\n                year: b\n            }\n        });\n        myAxisInfo.dateTimeLabelFormats = {\n            millisecond: b,\n            second: b,\n            minute: b,\n            hour: b,\n            day: b,\n            week: b,\n            month: b,\n            year: b\n        };\n        var tooltip = vmdChart.tplJSON.tooltip;\n        if (!tooltip) {\n            vmdChart.tplJSON[\"tooltip\"] = {}\n        }\n        vmdChart.tplJSON[\"tooltip\"].dateTimeLabelFormats = {\n            millisecond: b,\n            second: b,\n            minute: b,\n            hour: b,\n            day: b,\n            week: b,\n            month: b,\n            year: b\n        };\n        vmdChart.tplJSON[\"tooltip\"].xDateFormat = b;\n        mychart.update({\n            tooltip: vmdChart.tplJSON[\"tooltip\"]\n        })\n    } else if (a.initialConfig.id == \"isOpposite\") {\n        myAxis.setTitle({\n            x: -20\n        })\n        myAxisInfo.title.x = -20;\n        myAxis.update({\n            opposite: b\n        });\n        myAxisInfo.opposite = b;\n    } else if (a.initialConfig.id == \"isReversed\") {\n        myAxis.update({\n            reversed: b\n        });\n        myAxisInfo.reversed = b;\n    } else if (a.initialConfig.id == \"titleShow\") {\n        elementIsShow(hwAxisTitle.titlePanle, b);\n        if (b) {\n            myAxis.setTitle({\n                text: titleText\n            })\n            myAxisInfo.title.text = titleText;\n        } else {\n            myAxis.setTitle({\n                text: ''\n            })\n            myAxisInfo.title.text = '';\n            hwAxisTitle.titleText.setValue(removeBr(titleText));\n        }\n    } else if (a.initialConfig.id == \"Titlealign\") {\n        myAxis.setTitle({\n            align: b.id,\n            useHTML: true\n        });\n        myAxisInfo.title.align = b.id;\n    } else if (a.initialConfig.id == \"titleText\") {\n        if (hwAxisTitle.ButtonGroup.getSelectIndex() == 2) {\n            var title = addBr(b)\n            myAxis.setTitle({\n                rotation: 0,\n            })\n            myAxisInfo.title.rotation = 0;\n            hwAxisTitle.rotation.setOriValue(myAxisInfo.title.rotation);\n        } else {\n            var title = titleEscape(b);\n        }\n        myAxis.setTitle({\n            text: title,\n            useHTML: true\n        })\n        myAxisInfo.title.text = title;\n        for (var i = 0; i < mychart.axes.length; i++) {\n            if (mychart.axes[i].userOptions.id == myAxis.userOptions.id) {\n                mychart.axes[i].userOptions.title.text = title\n                break\n            }\n        }\n        setLink(axisComlist, getAxisData(mychart.axes), myAxis.userOptions.id);\n        titleText = title;\n    } else if (a.initialConfig.id == \"tickPosition\") {\n        myAxis.update({\n            tickPosition: b.id\n        });\n        myAxisInfo.tickPosition = b.id;\n    } else if (a.initialConfig.id == \"minorTickPos\") {\n        myAxis.update({\n            minorTickPosition: b.id\n        });\n        myAxisInfo.minorTickPosition = b.id;\n    } else if (a.initialConfig.id == \"lableShow\") {\n        elementIsShow(hwAxislable.lablePanel, b)\n        myAxis.update({\n            labels: {\n                enabled: b\n            },\n        });\n        myAxisInfo.labels.enabled = b;\n    } else if (a.initialConfig.id == \"allowDecimals\") {\n        myAxis.update({\n            allowDecimals: b\n        });\n        myAxisInfo.allowDecimals = b;\n    } else if (a.initialConfig.id == \"laberFormat\") {\n        myAxis.update({\n            labels: {\n                format: b\n            },\n        });\n        myAxisInfo.labels.format = b;\n        lastlableFormat = b;\n    } else if (a.initialConfig.id == \"labelRotation\") {\n        myAxis.update({\n            labels: {\n                rotation: b\n            }\n        });\n        myAxisInfo.labels.rotation = b;\n    } else if (a.initialConfig.id == \"TextShow\") {\n        if (b) {\n            // var title = titleText.split('').join('<br>');\n            var title = addBr(titleText)\n        } else {\n            var title = titleText.replace(/<br>/g, \"\");\n        }\n        myAxis.setTitle({\n            text: title\n        })\n        myAxisInfo.title.text = title;\n        titleText = title;\n    }\n    mychart.addAxisEventListener();\n    mychart.seleBorder.attr(myAxis.getBackRect());\n}\n// 日期格式转换\nfunction date_replace_dateFormat(sDateFormat) {\n    return sDateFormat\n        .replace(/YYYY/i, '%Y')\n        .replace(/YY/i, '%y')\n        .replace(/MM/g, '%m')\n        .replace(/mm/g, \"%m\")\n        .replace(/AA/g, \"%A\")\n        .replace(/aa/g, \"%a\")\n        .replace(/ww/g, \"%w\")\n        .replace(/DD/i, '%d')\n        .replace(/TT/i, '%t')\n        .replace(/HH/i, '%H')\n        .replace(/MI/i, '%M')\n        .replace(/SS/i, '%S')\n        .replace(/MS/i, '%L')\n};\n\nfunction dateFormat_replace_date(sDateFormat) {\n    return sDateFormat\n        .replace('%Y', 'YYYY')\n        .replace('%y', 'YY')\n        .replace('%m', 'MM')\n        .replace(\"%A\", 'AA')\n        .replace(\"%a\", 'aa')\n        .replace(\"%w\", 'ww')\n        .replace('%d', 'DD')\n        .replace('%t', 'TT')\n        .replace('%H', 'HH')\n        .replace('%M', 'MI')\n        .replace('%S', 'SS')\n        .replace('%L', 'MS')\n}\n// 标题横竖排显示\nfunction hwAxisTitle_axisTitleRowChange(sender, row) {\n    if (row === 'vertical') { // 竖排\n        var title = addBr(titleText)\n    } else if (row === 'horizontal') { // 横排\n        var title = removeBr(titleText)\n    }\n    myAxis.setTitle({\n        text: title,\n    })\n    myAxisInfo.title.text = title;\n    myAxisInfo.title.show = row;\n    titleText = title;\n    mychart.addAxisEventListener();\n}\n// 标题与轴线间距离\nfunction hwAxisTitle_axisTitleOffsetChange(sender, value) {\n    if (isNaN(parseFloat(value))) {\n        value = 0;\n    }\n    myAxis.setTitle({\n        offset: value,\n        myOffset: value\n    });\n    myAxisInfo.title.offset = value;\n    myAxisInfo.title.myOffset = value;\n    mychart.addAxisEventListener();\n    mychart.seleBorder.attr(myAxis.getBackRect());\n}\n\n// 标题水平方向偏移量\nfunction hwAxisTitle_axisTitleXChange(sender, value) {\n    if (isNaN(parseFloat(value))) {\n        value = 0;\n    }\n    myAxis.setTitle({\n        x: value\n    })\n    myAxisInfo.title.x = value;\n    mychart.addAxisEventListener();\n}\n// 标题垂直偏移量\nfunction hwAxisTitle_axisTitleYChange(sender, value) {\n    if (isNaN(parseFloat(value))) {\n        value = 0;\n    }\n    myAxis.setTitle({\n        y: value\n    })\n    myAxisInfo.title.y = value;\n\n    mychart.addAxisEventListener();\n}\n// 标题旋转角度\nfunction hwAxisTitle_axisTitleRotationChange(sender, value) {\n    if (isNaN(parseFloat(value))) {\n        value = 0;\n    }\n    myAxis.setTitle({\n        rotation: value\n    })\n    myAxisInfo.title.rotation = value;\n\n    mychart.addAxisEventListener();\n}\n// 标题字体设置\nfunction hwAxisTitle_axisFontFamityChange(sender, famity) {\n    myAxis.setTitle({\n        style: {\n            fontFamily: famity.data.EnName\n        }\n    })\n    myAxisInfo.title.style.fontFamily = famity.data.EnName;\n    mychart.addAxisEventListener();\n}\n// 标题字体颜色设置\nfunction hwAxisTitle_axisFontColorChange(sender, color) {\n    myAxis.setTitle({\n        style: {\n            color: color\n        }\n    })\n    myAxisInfo.title.style.color = color;\n    mychart.addAxisEventListener();\n}\n// 标题字体字号设置\nfunction hwAxisTitle_axisFontSizeChange(sender, size) {\n    myAxis.setTitle({\n        style: {\n            fontSize: size.data.px\n        }\n    })\n    myAxisInfo.title.style.fontSize = size.data.px;\n    mychart.addAxisEventListener();\n}\n// 标题字形设置\nfunction hwAxisTitle_axisFontStyleChange(sender, style) {\n    if (!style.data) {\n        return\n    }\n    var Style, Weight;\n    if (style.data.EnName == 'normal') {\n        Style = \"normal\";\n        Weight = \"normal\";\n    }\n    if (style.data.EnName == 'bold') {\n        Weight = \"bold\";\n    }\n    if (style.data.EnName == 'italic') {\n        Style = \"italic\";\n    }\n    if (style.data.EnName == 'boldAnditalic') {\n        Style = \"italic\";\n        Weight = \"bold\";\n    }\n    myAxis.setTitle({\n        style: {\n            fontStyle: Style,\n            fontWeight: Weight\n        }\n    })\n    myAxisInfo.title.style.fontStyle = Style;\n    myAxisInfo.title.style.fontWeight = Weight;\n    mychart.addAxisEventListener();\n}\n// 轴线宽度设置\nfunction hwAxisSelf_axisLineWidthChange(sender, value) {\n    myAxis.update({\n        lineWidth: value\n    });\n    myAxisInfo.lineWidth = value;\n    mychart.addAxisEventListener();\n}\n\n// 轴线高度设置\nfunction hwAxisSelf_axisHeightChange(sender, value) {\n    if (isNaN(parseFloat(value))) {\n        myAxis.update({\n            height: null\n        });\n        delete myAxisInfo.height;\n        //delete myAxisInfo.tickAmount;\n    } else {\n        myAxis.update({\n            height: value\n        });\n        myAxisInfo.height = value;\n        //delete myAxisInfo.tickAmount;\n    }\n    mychart.seleBorder.attr(myAxis.getBackRect());\n    mychart.addAxisEventListener();\n}\n// 轴线颜色设置\nfunction hwAxisSelf_axisLineColorsChange(sender, color) {\n    myAxis.update({\n        lineColor: color\n    });\n    myAxisInfo.lineColor = color;\n    mychart.addAxisEventListener();\n}\n// 轴线顶部位置\nfunction hwAxisSelf_axisTopChange(sender, value) {\n    if (isNaN(parseFloat(value))) {\n        myAxis.update({\n            top: 0\n        });\n        myAxisInfo.top = 0;\n    } else {\n        myAxis.update({\n            top: value\n        });\n        myAxisInfo.top = value;\n        //myAxisInfo.direction = 'vertical';\n    }\n    mychart.seleBorder.attr(myAxis.getBackRect());\n    mychart.addAxisEventListener();\n}\n\n// 坐标轴排列方向设置\nfunction hwAxisSelf_axisDirectionChange(sender, direction) {\n    myAxisInfo.direction = direction;\n}\n// 轴下限设置\nfunction hwAxisSelf_axisFloorChange(sender, value) {\n\n    value = parseFloat(value);\n    if (isNaN(value)) {\n        myAxis.update({\n            floor: null\n        });\n        delete myAxisInfo.floor;\n    } else {\n        myAxis.update({\n            floor: value\n        });\n        myAxisInfo.floor = value;\n        mychart.addAxisEventListener();\n    }\n}\n// 轴上限设置\nfunction hwAxisSelf_axisCeilingChange(sender, value) {\n\n    if (isNaN(value)) {\n        myAxis.update({\n            ceiling: null\n        });\n        delete myAxisInfo.ceiling;\n    } else {\n        myAxis.update({\n            ceiling: value\n        });\n        myAxisInfo.ceiling = value;\n        mychart.addAxisEventListener();\n    }\n}\n//轴最大值设置\nfunction hwAxisSelf_axisMaxChange(sender, value) {\n    if (isNaN(value)) {\n        myAxis.update({\n            max: 1\n        });\n        delete myAxisInfo.max;\n    } else {\n        myAxis.update({\n            max: value\n        });\n        myAxisInfo.max = value;\n        mychart.addAxisEventListener();\n    }\n}\n// 轴最小值设置\nfunction hwAxisSelf_axisMinChange(sender, value) {\n    value = parseFloat(value);\n    if (isNaN(value)) {\n        myAxis.update({\n            min: null\n        });\n        delete myAxisInfo.min;\n    } else {\n        myAxis.update({\n            min: value\n        });\n        myAxisInfo.min = value;\n        mychart.addAxisEventListener();\n    }\n}\n//准星线颜色设置\nfunction hwAxisSelf_crosshairColorChange(sender, color) {\n    myAxis.update({\n        crosshair: {\n            color: color\n        }\n    });\n    var cross = myAxisInfo.crosshair || {};\n    cross.color = color;\n    myAxisInfo.crosshair = cross;\n    //mychart.addAxisEventListener();\n}\n// 星线宽度设置\nfunction hwAxisSelf_crosshairWidthChange(sender, value) {\n    myAxis.update({\n        crosshair: {\n            width: value\n        }\n    });\n    var cross = myAxisInfo.crosshair || {};\n    cross.width = value;\n    myAxisInfo.crosshair = cross;\n    //mychart.addAxisEventListener();\n}\n// 准星线线条样式\nfunction hwAxisSelf_crosshairLineChange(sender, line) {\n    myAxis.update({\n        crosshair: {\n            dashStyle: line\n        }\n    });\n    var cross = myAxisInfo.crosshair || {};\n    cross.dashStyle = line;\n    myAxisInfo.crosshair = cross;\n    //mychart.addAxisEventListener();\n}\n// 轴线偏移量设置\nfunction hwAxisSelf_axisOffsetChange(sender, value) {\n    if (!value) {\n        value = 0;\n    }\n    myAxis.update({\n        offset: value\n    });\n    myAxisInfo.offset = value;\n    mychart.addAxisEventListener();\n    mychart.seleBorder.attr(myAxis.getBackRect());\n}\n// 轴间距设置\nfunction hwAxisSelf_minPaddingChange(sender, value) {\n    myAxis.update({\n        minPadding: value\n    });\n    myAxisInfo.minPadding = value;\n    mychart.addAxisEventListener();\n    mychart.seleBorder.attr(myAxis.getBackRect());\n}\n\n// 主刻度线长度设置\nfunction hwAxisTick_tickLenghtChange(sender, value) {\n    if (isNaN(parseFloat(value))) {\n        value = 0;\n    }\n    myAxis.update({\n        tickLength: value\n    });\n    myAxisInfo.tickLength = value;\n    mychart.addAxisEventListener();\n}\n// 主刻度线宽度\nfunction hwAxisTick_tickWidthChange(sender, value) {\n    if (isNaN(parseFloat(value))) {\n        value = 0;\n    }\n    myAxis.update({\n        tickWidth: value\n    });\n    myAxisInfo.tickWidth = value;\n    mychart.addAxisEventListener();\n}\n// 主刻度线总数\nfunction hwAxisTick_tickAmountChange(sender, value) {\n    if (isNaN(parseFloat(value))) {\n        value = 2;\n        myAxis.update({\n            tickAmount: value\n        });\n        delete myAxisInfo.tickAmount;\n    } else {\n        myAxis.update({\n            tickAmount: value\n        });\n        myAxisInfo.tickAmount = value;\n    }\n\n    mychart.addAxisEventListener();\n}\n//主刻度线数值间隔设置\nfunction hwAxisTick_tickIntervalChange(sender, value) {\n    if (isNaN(parseFloat(value))) {\n        value = 1;\n        delete myAxisInfo.tickInterval\n    } else {\n        myAxis.update({\n            tickInterval: value\n        });\n        myAxisInfo.tickInterval = value;\n    }\n    mychart.addAxisEventListener();\n}\n//主刻度线像素间隔设置\nfunction hwAxisTick_tickPixelIntervalChange(sender, value) {\n    if (!isNaN(parseFloat(value))) {\n        myAxis.update({\n            tickPixelInterval: value,\n        });\n        myAxisInfo.tickPixelInterval = value;\n    } else {\n        myAxis.update({\n            tickPixelInterval: null,\n        });\n        delete myAxisInfo.tickPixelInterval;\n    }\n    mychart.addAxisEventListener();\n}\n// 主刻度线颜色设置\nfunction hwAxisTick_tickColorsChange(sender, color) {\n    myAxis.update({\n        tickColor: color\n    });\n    myAxisInfo.tickColor = color;\n    mychart.addAxisEventListener();\n}\n// 主网格线宽度设置\nfunction hwAxisTick_gridLineWidthChange(sender, value) {\n    myAxis.update({\n        gridLineWidth: value\n    });\n    myAxisInfo.gridLineWidth = value;\n    mychart.addAxisEventListener();\n}\n// 主网格线线条样式设置\nfunction hwAxisTick_gridLineDashStyleChange(sender, line) {\n    myAxis.update({\n        gridLineDashStyle: line\n    });\n    myAxisInfo.gridLineDashStyle = line;\n    mychart.addAxisEventListener();\n}\n// 主网格线颜色设置\nfunction hwAxisTick_gridLineColorChange(sender, color) {\n    myAxis.update({\n        gridLineColor: color\n    });\n    myAxisInfo.gridLineColor = color;\n    mychart.addAxisEventListener();\n}\n// 次刻度线宽度设置\nfunction hwAxisTick_minorTickWidthChange(sender, value) {\n    myAxis.update({\n        minorTickWidth: value\n    });\n    myAxisInfo.minorTickWidth = value;\n    mychart.addAxisEventListener();\n}\n// 次刻度线长度\nfunction hwAxisTick_minorTickLenghtChange(sender, value) {\n    myAxis.update({\n        minorTickLength: value\n    });\n    myAxisInfo.minorTickLength = value;\n    mychart.addAxisEventListener();\n}\n// 次刻度线颜色设置\nfunction hwAxisTick_minorTickColorChange(sender, color) {\n    myAxis.update({\n        minorTickColor: color\n    });\n    myAxisInfo.minorTickColor = color;\n    mychart.addAxisEventListener();\n}\n// 次网格线宽度设置\nfunction hwAxisTick_minorGridLineWidthChange(sender, value) {\n    myAxis.update({\n        minorGridLineWidth: value\n    });\n    myAxisInfo.minorGridLineWidth = value;\n    mychart.addAxisEventListener();\n}\n// 次网格线线条样式设置\nfunction hwAxisTick_minorGridLineDashStyleChange(sender, line) {\n    myAxis.update({\n        minorGridLineDashStyle: line\n    });\n    myAxisInfo.minorGridLineDashStyle = line;\n    mychart.addAxisEventListener();\n}\n// 次网格线颜色设置\nfunction hwAxisTick_minorGridLineColorChange(sender, color) {\n    myAxis.update({\n        minorGridLineColor: color\n    });\n    myAxisInfo.minorGridLineColor = color;\n    mychart.addAxisEventListener();\n}\n// 轴标签水平偏移量设置\nfunction hwAxislable_lableXChange(sender, value) {\n    myAxis.update({\n        labels: {\n            x: value\n        }\n    });\n    myAxisInfo.labels.x = value;\n    mychart.addAxisEventListener();\n}\n// 轴标签垂直偏移量设置\nfunction hwAxislable_lableYChange(sender, value) {\n    myAxis.update({\n        labels: {\n            y: value\n        }\n    });\n    myAxisInfo.labels.y = value;\n    mychart.addAxisEventListener();\n}\n// 轴标签显示行数设置\nfunction hwAxislable_labelStaggerLinesChange(sender, value) {\n    myAxis.update({\n        labels: {\n            staggerLines: value\n        }\n    });\n    myAxisInfo.labels.staggerLines = value;\n    mychart.addAxisEventListener();\n}\n// 轴标签对齐方式设置\nfunction hwAxislable_lableAlignChange(sender, align) {\n    myAxis.update({\n        labels: {\n            align: align\n        }\n    });\n    myAxisInfo.labels.align = align;\n    mychart.addAxisEventListener();\n}\n// 轴标签文本字体设置\nfunction hwAxislable_fontFamityChange(sender, famity) {\n    myAxis.update({\n        labels: {\n            style: {\n                fontFamily: famity.data.EnName\n            }\n        }\n    });\n    myAxisInfo.labels.style.fontFamily = famity.data.EnName;\n    mychart.addAxisEventListener();\n}\n// 轴标签文本字号设置\nfunction hwAxislable_fontSizeChange(sender, size) {\n    myAxis.update({\n        labels: {\n            style: {\n                fontSize: size.data.px\n            }\n        }\n    });\n    myAxisInfo.labels.style.fontSize = size.data.px;\n    mychart.addAxisEventListener();\n}\n// 轴标签文本字形设置\nfunction hwAxislable_fontStyleChange(sender, style) {\n    if (!style.data) {\n        return\n    }\n    var Style, Weight;\n    if (style.data.EnName == 'normal') {\n        Style = \"normal\";\n        Weight = \"normal\";\n    }\n    if (style.data.EnName == 'bold') {\n        Weight = \"bold\";\n    }\n    if (style.data.EnName == 'italic') {\n        Style = \"italic\";\n    }\n    if (style.data.EnName == 'boldAnditalic') {\n        Style = \"italic\";\n        Weight = \"bold\";\n    }\n    myAxis.update({\n        labels: {\n            style: {\n                fontStyle: Style,\n                fontWeight: Weight\n            }\n        }\n    });\n    myAxisInfo.labels.style.fontStyle = Style;\n    myAxisInfo.labels.style.fontWeight = Weight;\n    mychart.addAxisEventListener();\n}\n// 轴标签文本字体颜色设置\nfunction hwAxislable_fontColorChange(sender, color) {\n    myAxis.update({\n        labels: {\n            style: {\n                color: color\n            }\n        }\n    });\n    myAxisInfo.labels.style.color = color;\n    mychart.addAxisEventListener();\n}\n// 轴标签文本旋转角度设置\nfunction hwAxislable_labelRotationChange(sender, value) {\n    if (isNaN(parseFloat(value))) {\n        value = 0;\n    }\n    myAxis.update({\n        labels: {\n            rotation: value\n        }\n    });\n    myAxisInfo.labels.rotation = value;\n    mychart.addAxisEventListener();\n}\n//轴标签文本显示间隔设置\nfunction hwAxislable_lableStepChange(sender, value) {\n    if (value) {\n        myAxis.update({\n            labels: {\n                step: value\n            }\n        });\n        myAxisInfo.labels.step = value;\n    } else {\n        myAxis.update({\n            labels: {\n                step: null\n            }\n        });\n        delete myAxisInfo.labels.step;\n    }\n    mychart.addAxisEventListener();\n}\n// 添加坐标轴\nfunction addXAxis_click(sender, e) {\n\n    var id = vmd.getGuid();\n    var num = chartXAxis.length;\n    var options = {\n        id: id,\n        title: {\n            text: '横轴' + (num + 1)\n        },\n        lineWidth: 1,\n        lineColor: '#ccd6eb',\n        offset: 20 * num,\n    }\n    chartXAxis.push(options);\n    for (var i = 0; i < chartXAxis.length; i++) {\n        if (chartXAxis[i].id === id) {\n            myAxisInfo = chartXAxis[i];\n            break\n        }\n    }\n    // 初始化新添加轴的初始属性\n    vmd.util.applyIf(myAxisInfo, defultAxis);\n    vmd.util.applyIf(myAxisInfo.labels, defultAxis.labels);\n    vmd.util.applyIf(myAxisInfo.title, defultAxis.title);\n    mychart.addAxis(myAxisInfo, true);\n}\n\nfunction addMenu_click(sender, menuItem, e) {\n    var id = vmd.getGuid();\n    if (menuItem.id === 'horizontalAdd') { // 添加横向排列的Y轴\n        var num = chartYAxis.length;\n        var options = {\n            id: id,\n            title: {\n                text: '竖<br>轴<br>' + (num + 1),\n                offset: 20,\n                x: 0,\n                rotation: 0,\n            },\n            lineWidth: 1,\n            lineColor: '#ccd6eb',\n            offset: 20,\n            direction: 'horizontal'\n        }\n        chartYAxis.push(options);\n        for (var i = 0; i < chartYAxis.length; i++) {\n            if (chartYAxis[i].id === id) {\n                myAxisInfo = chartYAxis[i];\n                break\n            }\n        }\n        vmd.util.applyIf(myAxisInfo, defultAxis);\n        vmd.util.applyIf(myAxisInfo.labels, defultAxis.labels);\n        vmd.util.applyIf(myAxisInfo.title, defultAxis.title);\n        mychart.addAxis(myAxisInfo, false);\n    } else if (menuItem.id === 'noReverse') { // 添加垂直排列正向显示的Y轴\n        var num = chartYAxis.length;\n        var axisArr = [];\n        var options = {\n            id: id,\n            title: {\n                text: '竖<br>轴<br>' + (num + 1),\n                offset: 20,\n                x: 0,\n                rotation: 0,\n            },\n            opposite: false,\n            lineWidth: 1,\n            lineColor: '#ccd6eb',\n            offset: chartYAxis[0].offset || 0,\n            direction: 'vertical'\n        }\n        chartYAxis.push(options);\n        for (var i = 0; i < chartYAxis.length; i++) {\n            if (chartYAxis[i].id === id) {\n                myAxisInfo = chartYAxis[i];\n                vmd.util.applyIf(myAxisInfo, defultAxis);\n                vmd.util.applyIf(myAxisInfo.labels, defultAxis.labels);\n                vmd.util.applyIf(myAxisInfo.title, defultAxis.title);\n                mychart.addAxis(myAxisInfo, false);\n            }\n            if (!chartYAxis[i].opposite && chartYAxis[i].direction == 'vertical') {\n                axisArr.push(chartYAxis[i])\n            }\n        }\n        // 根据轴的数量自动计算每条轴的高度及位置\n        if (mychart.plotTop && mychart.plotTop > 20) {\n            var ch = 0;\n        } else {\n            var ch = 36 / mychart.clipBox.height * 100;\n        }\n        if (chartInfo.axisSpacing) {\n            var spacing = chartInfo.axisSpacing / mychart.clipBox.height * 100;\n        } else {\n            var spacing = 20 / mychart.clipBox.height * 100;\n        }\n        var n = axisArr.length;\n        var h = Math.round(((100 - ch) - (n - 1) * spacing) / n * 100) / 100;\n\n        for (var j = 0; j < axisArr.length; j++) {\n            var Axis = mychart.get(axisArr[j].id);\n            if (i == 0) {\n                Axis.update({\n                    height: h + \"%\",\n                    top: ch + \"%\"\n                });\n                axisArr[j].height = h + \"%\";\n                axisArr[j].top = ch + \"%\";\n            } else {\n                Axis.update({\n                    height: h + \"%\",\n                    top: (h * j + spacing * j + ch) + \"%\"\n                });\n                axisArr[j].height = h + \"%\";\n                axisArr[j].top = (h * j + spacing * j + ch) + \"%\";\n            }\n            axisArr[j].direction = 'vertical';\n        }\n    } else if (menuItem.id === 'isReverse') { // 添加垂直排列对面显示的Y轴\n        var num = chartYAxis.length;\n        var axisArr = [];\n        var options = {\n            id: id,\n            title: {\n                text: '竖<br>轴<br>' + (num + 1),\n                offset: 20,\n                x: -20,\n                rotation: 0,\n            },\n            opposite: true,\n            lineWidth: 1,\n            lineColor: '#ccd6eb',\n            offset: chartYAxis[0].offset || 0,\n            direction: 'vertical'\n        }\n        chartYAxis.push(options);\n        for (var i = 0; i < chartYAxis.length; i++) {\n            if (chartYAxis[i].id === id) {\n                myAxisInfo = chartYAxis[i];\n                vmd.util.applyIf(myAxisInfo, defultAxis);\n                vmd.util.applyIf(myAxisInfo.labels, defultAxis.labels);\n                vmd.util.applyIf(myAxisInfo.title, defultAxis.title);\n                mychart.addAxis(myAxisInfo, false);\n            }\n            if (chartYAxis[i].opposite && chartYAxis[i].direction == 'vertical') {\n                axisArr.push(chartYAxis[i])\n            }\n        }\n\n\n        if (mychart.plotTop && mychart.plotTop > 20) {\n            var ch = 0;\n        } else {\n            var ch = 36 / mychart.clipBox.height * 100;\n        }\n        if (chartInfo.axisSpacing) {\n            var spacing = chartInfo.axisSpacing / mychart.clipBox.height * 100;\n        } else {\n            var spacing = 20 / mychart.clipBox.height * 100;\n        }\n        var n = axisArr.length;\n        var h = Math.round(((100 - ch) - (n - 1) * spacing) / n * 100) / 100;\n\n        for (var j = 0; j < axisArr.length; j++) {\n            var Axis = mychart.get(axisArr[j].id);\n            if (i == 0) {\n                Axis.update({\n                    height: h + \"%\",\n                    top: ch + \"%\"\n                });\n                axisArr[j].height = h + \"%\";\n                axisArr[j].top = ch + \"%\";\n            } else {\n                Axis.update({\n                    height: h + \"%\",\n                    top: (h * j + spacing * j + ch) + \"%\"\n                });\n                axisArr[j].height = h + \"%\";\n                axisArr[j].top = (h * j + spacing * j + ch) + \"%\";\n            }\n            axisArr[j].direction = 'vertical';\n        }\n\n\n    } else {\n        return\n    }\n    myAxis = mychart.get(id);\n    titleText = myAxisInfo.title.text;\n    lastlableFormat = myAxisInfo.labels.format;\n    setLink(axisComlist, getAxisData(mychart.axes), id);\n    var activeTab = MyTabs1.getActiveTab().title;\n    switch (activeTab) {\n        case \"标题\":\n            setAxisOriTitle();\n            break;\n        case \"轴属性\":\n            setAxisOriValue();\n            break;\n        case \"刻度线\":\n            setTickOriValue();\n            break;\n        case \"标签\":\n            setAxisLableOriValue();\n            break;\n    }\n    mychart.seleBorder.attr(myAxis.getBackRect());\n    mychart.addAxisEventListener();\n}\n// 删除坐标轴\nfunction delBnt_click(sender, e) {\n    Ext.Msg.confirm('提示', '坐标轴删除后，对应的序列也将删除，确认删除此坐标轴吗?', function(bnt) {\n        if (bnt == 'yes') {\n            console.log(myAxis)\n            var id = myAxis.userOptions.id;\n            var coll = myAxis.coll;\n            var index = myAxis.userOptions.index;\n            var direction = myAxis.userOptions.direction || 'horizontal'; //记录要删除的轴是横向还是垂直排列\n            var opposite = myAxis.userOptions.opposite || false; //记录要删除的轴是否是对面显示\n            // 删除对应序列\n            for (var i = 0; i < chartSeries.length; i++) {\n                if (chartSeries[i].yAxis == id || chartSeries[i].yAxis == id) {\n                    chartSeries.remove(chartSeries[i])\n                    var seriesMapping = vmdChart.tplJSON.data.seriesMapping;\n                    seriesMapping.remove(seriesMapping[i]);\n                }\n            }\n            // 删除坐标轴\n            mychart.get(id).remove();\n            if (coll === 'xAxis') {\n                var axisData = chartXAxis;\n            } else if (coll === 'yAxis') {\n                var axisData = chartYAxis;\n            }\n            // 设置被删除轴相邻的轴为当前被操作的轴\n            for (var i = 0; i < axisData.length; i++) {\n                if (axisData[i].id == id) {\n                    if (i > 0) {\n                        myAxis = mychart.get(axisData[i - 1].id);\n                        myAxisInfo = axisData[i - 1];\n                    }\n                    if (i == 0) {\n                        if (axisData[i + 1]) {\n                            myAxis = mychart.get(axisData[i + 1].id);\n                            myAxisInfo = axisData[i + 1];\n                        } else {\n                            myAxis = {}\n                            myAxisInfo = {}\n                        }\n                    }\n                    axisData.remove(axisData[i]);\n                    break\n                }\n            }\n            // 如果被删除的轴是垂直排列的轴，那么重新计算剩余垂直排列轴的高度及位置\n            if (coll === 'yAxis' && direction === 'vertical') {\n                var axisArr = [];\n                for (var i = 0; i < chartYAxis.length; i++) {\n                    if (chartYAxis[i].opposite === opposite && chartYAxis[i].direction == 'vertical') {\n                        axisArr.push(chartYAxis[i])\n                    }\n                }\n                if (mychart.plotTop && mychart.plotTop > 20) {\n                    var ch = 0;\n                } else {\n                    var ch = 36 / mychart.clipBox.height * 100;\n                }\n                if (chartInfo.axisSpacing) {\n                    var spacing = chartInfo.axisSpacing / mychart.clipBox.height * 100;\n                } else {\n                    var spacing = 20 / mychart.clipBox.height * 100;\n                }\n                var n = axisArr.length;\n                var h = Math.round(((100 - ch) - (n - 1) * spacing) / n * 100) / 100;\n\n                for (var j = 0; j < axisArr.length; j++) {\n                    var Axis = mychart.get(axisArr[j].id);\n                    if (i == 0) {\n                        Axis.update({\n                            height: h + \"%\",\n                            top: ch + \"%\"\n                        });\n                        axisArr[j].height = h + \"%\";\n                        axisArr[j].top = ch + \"%\";\n                    } else {\n                        Axis.update({\n                            height: h + \"%\",\n                            top: (h * j + spacing * j + ch) + \"%\"\n                        });\n                        axisArr[j].height = h + \"%\";\n                        axisArr[j].top = (h * j + spacing * j + ch) + \"%\";\n                    }\n                    axisArr[j].direction = 'vertical';\n                }\n            }\n            vmd.util.applyIf(myAxisInfo, defultAxis);\n            vmd.util.applyIf(myAxisInfo.labels, defultAxis.labels);\n            vmd.util.applyIf(myAxisInfo.title, defultAxis.title);\n            titleText = myAxisInfo.title.text;\n            lastlableFormat = myAxisInfo.labels.format;\n            setLink(axisComlist, getAxisData(mychart.axes), myAxis.userOptions.id);\n            var activeTab = MyTabs1.getActiveTab().title;\n            switch (activeTab) {\n                case \"标题\":\n                    setAxisOriTitle();\n                    break;\n                case \"轴属性\":\n                    setAxisOriValue();\n                    break;\n                case \"刻度线\":\n                    setTickOriValue();\n                    break;\n                case \"标签\":\n                    setAxisLableOriValue();\n                    break;\n            }\n            mychart.seleBorder.attr(myAxis.getBackRect());\n            mychart.addAxisEventListener();\n        }\n    })\n}\n// 传递数据集\nfunction getStoreData(store) {\n    myStore = store;\n    getStore();\n    if (MyTabs2.getActiveTab() && MyTabs2.getActiveTab().title === \"序列\") {\n        setLink(hwSeriesSelf.storeData, storeData, selStore);\n    }\n}\n// 图表属性tab页切换\nfunction MyTabs3_tabchange(sender, tab) {\n    vmd.taskRunner(function() {\n        if (chartInfo) return true;\n    }, function() {\n        switch (tab.title) {\n            case \"图表\":\n                setChartValue();\n                break;\n            case \"边框背景\":\n                setBroderAndBackground();\n                break;\n            case \"数据提示框\":\n                setTooltip();\n                break;\n        }\n    })\n}\n// 横竖轴转换添加<br>\nfunction addBr(text) {\n    if (!text) {\n        return\n    }\n    var str = removeBr(text);\n    var strArr1 = [],\n        strArr2 = [],\n        slicer1, endStr, slicer2, slicer3;\n    if (str.indexOf(\"(\") > -1) {\n        slicer1 = \"(\";\n        slicer2 = \")\";\n\n    } else if (str.indexOf(\"（\") > -1) {\n        slicer1 = \"（\";\n        slicer2 = \"）\";\n    } else {\n        slicer1 = \"\";\n        slicer2 = \"\";\n    }\n    if (slicer1) {\n        strArr1 = str.split(slicer1)[0].split(\"\"); // 括号前面的部分 \n    } else {\n        strArr1 = str.split(slicer1);\n    }\n\n    var other = str.split(slicer1)[1];\n    if (other.split(slicer2)[1]) {\n        strArr2 = other.split(slicer2)[1].split(\"\"); // 括号后面的部分\n    }\n    // 括号中的部分的处理\n    // if (other.split(slicer2)[0].indexOf(\"/\") > -1) {\n    //     endStr = other.split(slicer2)[0].split(\"/\");\n    //     slicer3 = '/';\n    // } else {\n    endStr = other.split(slicer2)[0].split(\" \");\n    slicer3 = '';\n    // }\n    var reg = /^[\\u4e00-\\u9fa5]+$/;\n    var reg1 = /^[a-zA-Z0-9]/;\n    strArr1.forEach(function(item, index) {\n        // if (reg.test(item)) {\n        //     strArr1[index] = '<div style=\"text-align: center;\">' + item + '</div>';\n        // } else if (reg1.test(item) && strArr1[index + 1] && reg.test(strArr1[index + 1])) {\n        //     strArr1[index] = '<div style=\"text-align: center;\">' + item + '</div>';\n        // }\n        strArr1[index] = '<div style=\"text-align: center;min-width:60px\">' + item + '</div>';\n    })\n    strArr2.forEach(function(item, index) {\n        // if (reg.test(item)) {\n        //     strArr2[index] = '<div style=\"text-align: center;\">' + item + '</div>';\n        // } else if (reg1.test(item) && strArr2[index + 1] && reg.test(strArr2[index + 1])) {\n        //     strArr2[index] = '<div style=\"text-align: center;\">' + item + '</div>';\n        // }\n        strArr2[index] = '<div style=\"text-align: center;min-width:60px\">' + item + '</div>';\n    })\n\n    if (slicer1 && slicer2) {\n        if (slicer3) {\n            var str = strArr1.join('') +\n                \"<div style='text-align: center;'>\" +\n                \"<div style='text-align: center; min-width:60px'>\" + slicer1 + endStr[0] + \"</div>\" +\n                \"<div style='text-align: center; min-width:60px'>\" + slicer3 + \"</div>\" +\n                \"<div style='text-align: center;' min-width:60px>\" + endStr[1] + slicer2 + \"</div>\" +\n                \"</div>\" + strArr2.join('');\n        } else {\n            var str = strArr1.join('') +\n                \"<div style='text-align: center;'>\" +\n                \"<div style='text-align: center;min-width:60px'>\" + slicer1 + endStr[0] + slicer2 + \"</div>\" +\n                \"</div>\" + strArr2.join('');\n        }\n\n    } else {\n        var str = strArr1.join('');\n    }\n    return str;\n}\n// 横竖排转化删除<br>\nfunction removeBr(srt) {\n    // var reg = /<\\/?.+?\\/?>/g;\n    var reg = /<[^>]*>|<\\/[^>]*>/gm;\n    var s = srt.replace(reg, \"\")\n    s = titleEscape(s);\n    return s;\n}\n// 标签转义\nfunction titleEscape(text) {\n    var codeObj = [{\n            num: '1',\n            code: '&#185;'\n        },\n        {\n            num: '2',\n            code: '&#178;'\n        },\n        {\n            num: '3',\n            code: '&#179;'\n        },\n        {\n            num: '4',\n            code: '&#8308;'\n        },\n        {\n            num: '5',\n            code: '&#8309;'\n        },\n        {\n            num: '6',\n            code: '&#8310;'\n        },\n        {\n            num: '7',\n            code: '&#8311;'\n        },\n        {\n            num: '8',\n            code: '&#8312;'\n        },\n        {\n            num: '9',\n            code: '&#8313;'\n        },\n        {\n            num: 'n',\n            code: '&#8319;'\n        },\n        {\n            num: '0',\n            code: '&#8304;'\n        }\n    ]\n    // 查找un码\n    function getCode(str) {\n        for (var i = 0; i < codeObj.length; i++) {\n            if (codeObj[i].num == str) {\n                return codeObj[i].code;\n            }\n        }\n    }\n    var t = text\n    if (text.indexOf(\"^\") != -1) {\n        var strArr = text.split('^');\n        var arr = [];\n        strArr.forEach(function(item, index) {\n            if (index > 0) {\n                if (item.substring(0, 1) == '-') {\n                    var v = '&#8315;' + getCode(item.substring(1, 2));\n                    var v1 = item.substring(2, item.length)\n                    arr.push(v + v1);\n                } else {\n                    if (getCode(item.substring(0, 1))) {\n                        var v = getCode(item.substring(0, 1));\n                        var v1 = item.substring(1, item.length)\n                        arr.push(v + v1);\n                    } else {\n                        vmd.alert('提示', '该上标数字不存在')\n                    }\n                }\n\n            } else {\n                arr.push(item);\n            }\n        })\n        t = arr.join('');\n    }\n    return t;\n}","vmdcss":".comlist-b{\n    border:1px solid #ddd;\n}\n.comlist-b input{\n    border:0;\n}\n.ext-el-mask {\n    background-color: #eee;\n    opacity: 0.5;\n}","vmdprops":"\"\"","type":"ux","vmdevents_controller":"Ext.define('vmd.ux.chartSeting.Controller', {\n    xtype: 'vmd.ux.chartSeting.Controller',\n    constructor: function(options) {\n        \n    }\n})","vmdinterface":"{\"components\":[{\"cid\":\"vmduxprops\",\"layoutConfig\":{},\"userConfig\":{}},{\"cid\":\"vmduxmethods\",\"id\":\"方法\",\"layoutConfig\":{},\"userConfig\":{},\"cn\":[{\"cid\":\"uxmethod\",\"id\":\"bindChart\",\"layoutConfig\":{},\"userConfig\":{\"id\":\"bindChart\",\"zhname\":\"\",\"bindCmp\":\"\",\"bindValue\":\"\",\"isPublic\":\"on\",\"desc\":\"\",\"uxcid\":\"\",\"params\":\"name,obj,itemEl,store\",\"code\":\"//直接填写方法内容\\ngetChart(name,obj,itemEl,store);\",\"returnType\":\"\"}},{\"cid\":\"uxmethod\",\"id\":\"receiveStoreData\",\"layoutConfig\":{},\"userConfig\":{\"id\":\"receiveStoreData\",\"params\":\"store\",\"desc\":\"\",\"isPublic\":\"on\",\"code\":\"//直接填写方法内容\\ngetStoreData(store)\",\"returnType\":\"\"}}]},{\"cid\":\"vmduxevents\",\"id\":\"事件\",\"layoutConfig\":{},\"userConfig\":{}}]}","vmdresource":"{\"components\":[{\"cid\":\"vmdrescsss\",\"layoutConfig\":{},\"userConfig\":{}},{\"cid\":\"vmdresjss\",\"layoutConfig\":{},\"userConfig\":{},\"cn\":[{\"cid\":\"resjs\",\"id\":\"controller.js\",\"layoutConfig\":{},\"userConfig\":{}},{\"cid\":\"resjs\",\"id\":\"components/ux/chartseting/1.0/js/defaultData.js\",\"layoutConfig\":{},\"userConfig\":{\"id\":\"components/ux/chartseting/1.0/js/defaultData.js\",\"path\":\"components/ux/chartseting/1.0/js/defaultData.js\",\"absolutePath\":\"{{vmduxpath}}/components/ux/chartseting/1.0/js/defaultData.js\",\"ext\":\"js\"}}]},{\"cid\":\"vmdresimgs\",\"layoutConfig\":{},\"userConfig\":{}}]}"}