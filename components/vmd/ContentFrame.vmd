{"vmdversion":"vmd2.0.5.200306","vmdlayout":"{\"components\":[{\"cid\":\"uxpanel\",\"id\":\"ContentFrame\",\"layoutConfig\":{},\"userConfig\":{\"layout\":\"fit\",\"header\":false,\"width\":300,\"height\":1000,\"beforerender\":\"ContentFrame_beforerender\"},\"cn\":[{\"cid\":\"tabpanel\",\"id\":\"MyTabs\",\"layoutConfig\":{},\"userConfig\":{\"activeTab\":1,\"collapsible\":false,\"unstyled\":false,\"tabchange\":\"MyTabs_tabchange\",\"afterrender\":\"MyTabs_afterrender\",\"activeItem\":\"panel\"},\"cn\":[{\"cid\":\"panel\",\"id\":\"panel\",\"layoutConfig\":{},\"userConfig\":{\"title\":\"基本\",\"style\":\"padding: 0px 0px\",\"layout\":\"fit\",\"autoScroll\":false},\"cn\":[{\"cid\":\"vmd.ux.LayoutPanel\",\"id\":\"hwLayoutPanel\",\"layoutConfig\":{},\"userConfig\":{\"settingChangedEvent\":\"hwLayoutPanel_settingChangedEvent\",\"LayoutItemVisibleChanged\":\"hwLayoutPanel_LayoutItemVisibleChanged\",\"layoutItemVisibleChanged\":\"hwLayoutPanel_layoutItemVisibleChanged\"}}]},{\"cid\":\"panel\",\"id\":\"panel1\",\"layoutConfig\":{},\"userConfig\":{\"title\":\"网格\",\"layout\":\"fit\",\"autoHeight\":false},\"cn\":[{\"cid\":\"vmd.ux.GridType\",\"id\":\"hwGridType\",\"layoutConfig\":{},\"userConfig\":{\"copyGridToForm\":\"hwGridType_copyGridToForm\",\"settingChangeEvents\":\"hwGridType_settingChangeEvents\",\"anchor\":\"100% 100%\",\"hidden\":false}}]},{\"cid\":\"panel\",\"id\":\"panel2\",\"layoutConfig\":{},\"userConfig\":{\"title\":\"自由格式\",\"layout\":\"fit\"},\"cn\":[{\"cid\":\"vmd.ux.FormType\",\"id\":\"formtype\",\"layoutConfig\":{},\"userConfig\":{\"copyGridToForm\":\"formtype_copyGridToForm\",\"settingChangeEvents\":\"formtype_settingChangeEvents\"}}]},{\"cid\":\"panel\",\"id\":\"panel3\",\"layoutConfig\":{},\"userConfig\":{\"title\":\"工具栏\"},\"cn\":[{\"cid\":\"tabpanel\",\"id\":\"MyTabs1\",\"layoutConfig\":{},\"userConfig\":{\"activeTab\":0,\"width\":309,\"height\":900,\"tabchange\":\"MyTabs1_tabchange\"},\"cn\":[{\"cid\":\"panel\",\"id\":\"panel6\",\"layoutConfig\":{},\"userConfig\":{\"title\":\"导航栏\",\"height\":402,\"layout\":\"auto\"},\"cn\":[{\"cid\":\"vmd.ux.NavigationPanel\",\"id\":\"hwNavigationPanel\",\"layoutConfig\":{},\"userConfig\":{\"settingChangedEvent\":\"hwNavigationPanel_settingChangedEvent\",\"height\":724}}]},{\"cid\":\"panel\",\"id\":\"panel7\",\"layoutConfig\":{},\"userConfig\":{\"title\":\"编辑栏\",\"layout\":\"fit\"},\"cn\":[{\"cid\":\"vmd.ux.OperationPanel\",\"id\":\"hwOperationPanel\",\"layoutConfig\":{},\"userConfig\":{\"settingChangedEvent\":\"hwOperationPanel_settingChangedEvent\"}}]}]}]},{\"cid\":\"panel\",\"id\":\"panel5\",\"layoutConfig\":{},\"userConfig\":{\"title\":\"统计\"},\"cn\":[{\"cid\":\"vmd.ux.StatisticsPanel\",\"id\":\"statisticspanel\",\"layoutConfig\":{\"align\":\"left\",\"pack\":\"start\"},\"userConfig\":{\"settingChangedEvent\":\"statisticspanel_settingChangedEvent\"}}]}]}]}]}","vmdevents":"var page = this;\r\nvar curActiveCmp;\r\n\r\nxds.on('beforecomponentchanged', function(arg) {\r\n    if (arg) {\r\n        var type = arg.status;\r\n        var list = xds.inputInfo\r\n        if (list) {\r\n            switch (type) {\r\n                case 'delete':\r\n                    if (arg.cmp.cid == 'vmdDataInput') {\r\n                        //删除的类型是录入时，直接删除\r\n                        for (var i = 0; i < list.length; i++) {\r\n                            if (list[i].id == arg.cmp.id)\r\n                                list.splice(i, 1);\r\n                            break;\r\n                        }\r\n                    } else if (arg.cmp.cid == 'panel' || arg.cmp.cid == 'container' || arg.cmp.cid == 'tabpanel') {\r\n                        //删除的类型是容器时，遍历组件树\r\n                        for (var i = list.length - 1; i > 0; i++) {\r\n                            var flag = false;\r\n                            for (var akey in xds.inspector && xds.inspector.nodeHash) {\r\n                                if (list[i].id == akey) {\r\n                                    flag = true;\r\n                                    break;\r\n                                }\r\n                            }\r\n                            if (!flag) {\r\n                                list.splice(i, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case 'update':\r\n                    if (arg.attr == 'id') {\r\n                        if (arg.cmp.cid == 'vmdDataInput') {\r\n                            for (var i = 0; i < list.length; i++) {\r\n                                if (list[i].id == arg.oldValue) {\r\n                                    list[i].id = arg.value;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n})\r\n\r\n\r\nfunction MyTabs_tabchange(sender, tab) {\r\n\r\n    var activeTitle = sender.activeTab.title;\r\n\r\n    this.toolbarOperate = function() {\r\n        var title = MyTabs1.activeTab.title;\r\n\r\n        if (title == '导航栏') {\r\n            hwNavigationPanel.setValue(page.controller.comp.navigation.serialize())\r\n            page.controller.operateType = 'navigation'\r\n        } else if (title == '编辑栏') {\r\n            hwOperationPanel.setValue(page.controller.comp.operation.serialize())\r\n            page.controller.operateType = 'operation'\r\n        }\r\n    }\r\n\r\n    if (page && page.controller) {\r\n        switch (activeTitle) {\r\n            case '布局':\r\n                hwLayoutPanel.setValue(page.controller.comp.layout.serialize())\r\n                page.controller.operateType = 'layout'\r\n                break;\r\n            case '网格':\r\n                hwGridType.setInfo(page.controller.comp.grid.serialize())\r\n                page.controller.operateType = 'grid'\r\n                break;\r\n            case '自由格式':\r\n                formtype.setInfo(page.controller.comp.form.serialize())\r\n                page.controller.operateType = 'form'\r\n                break;\r\n            case '工具栏':\r\n                this.toolbarOperate()\r\n                break;\r\n            case '统计':\r\n                statisticspanel.setValue(page.controller.comp.statistics.serialize())\r\n                page.controller.operateType = 'statistics'\r\n                break;\r\n        }\r\n    }\r\n\r\n}\r\n\r\nfunction MyTabs_afterrender(sender) {\r\n    var id = this.el.dom.id\r\n    var titleGroup = vmd(this.header.dom).find('.x-tab-strip-text')\r\n    titleGroup[0].setAttribute('data-tooltip', '布局')\r\n    titleGroup[1].setAttribute('data-tooltip', '网格格式')\r\n    titleGroup[2].setAttribute('data-tooltip', '自由格式')\r\n    titleGroup[3].setAttribute('data-tooltip', '导航条设置')\r\n    titleGroup[4].setAttribute('data-tooltip', '编辑条设置')\r\n    titleGroup[5].setAttribute('data-tooltip', '统计设置')\r\n\r\n    vmd.utils.tooltip(\"#\" + id + \" [data-tooltip]\")\r\n}\r\n\r\nfunction hwLayoutPanel_layoutItemVisibleChanged(sender, configs) {\r\n    switch (configs.cname) {\r\n        case 'isShowGrid':\r\n            configs.cvalue ? MyTabs.unhideTabStripItem(panel1) : MyTabs.hideTabStripItem(panel1)\r\n            break;\r\n        case 'isShowForm':\r\n            configs.cvalue ? MyTabs.unhideTabStripItem(panel2) : MyTabs.hideTabStripItem(panel2)\r\n            break;\r\n        case 'isShowNavigation':\r\n            toolbarSet('isShowNavigation', configs.cvalue)\r\n            break;\r\n        case 'isShowOperation':\r\n            toolbarSet('isShowOperation', configs.cvalue)\r\n            break;\r\n        case 'isShowStatistics':\r\n            configs.cvalue ? MyTabs.unhideTabStripItem(panel5) : MyTabs.hideTabStripItem(panel5)\r\n            break;\r\n    }\r\n}\r\npage.p6 = true;\r\npage.p7 = true;\r\n\r\nfunction toolbarSet(type, value) {\r\n    switch (type) {\r\n        case 'isShowNavigation':\r\n            if (value) {\r\n                MyTabs1.unhideTabStripItem(panel6)\r\n                page.p6 = true;\r\n            } else {\r\n                MyTabs1.hideTabStripItem(panel6)\r\n                page.p6 = false\r\n            }\r\n            break;\r\n        case 'isShowOperation':\r\n            if (value) {\r\n                MyTabs1.unhideTabStripItem(panel7)\r\n                page.p7 = true;\r\n            } else {\r\n                MyTabs1.hideTabStripItem(panel7)\r\n                page.p7 = false\r\n            }\r\n            break;\r\n    }\r\n    if ((!page.p6) && (!page.p7)) {\r\n        MyTabs.hideTabStripItem(panel3)\r\n    } else {\r\n        MyTabs.unhideTabStripItem(panel3)\r\n    }\r\n}\r\n\r\nfunction hwLayoutPanel_settingChangedEvent(sender) {\r\n    try {\r\n        xds.active.component.setConfig('inputConfig', JSON.stringify(page.controller.serialize()))\r\n        xds.fireEvent(\"componentchanged\")\r\n    } catch (ex) {\r\n\r\n    }\r\n}\r\n\r\nfunction ContentFrame_beforerender(sender) {\r\n    //增加属性面板的指向\r\n    xds.active.component.propPanel = page;\r\n}\r\n\r\nfunction ContentFrame_afterrender(sender) {\r\n\r\n}\r\n\r\nfunction save(activeCmp) {\r\n\r\n    if (activeCmp) curActiveCmp = activeCmp;\r\n    var saveInfo = page.controller.serialize();\r\n    var tg = saveRptInfo(saveInfo.grid, saveInfo.layout.dataSet);\r\n    var tf = saveFormInfo(saveInfo.form, saveInfo.layout.dataSet);\r\n    saveInfo.gridJson = tg;\r\n    saveInfo.formJson = tf;\r\n    if (curActiveCmp) curActiveCmp.setConfig('inputConfig', JSON.stringify(saveInfo));\r\n    else {\r\n        if (xds.active.component.cid == 'vmdDataInput') xds.active.component.setConfig('inputConfig', JSON.stringify(saveInfo));\r\n    }\r\n    //增加事件\r\n    saveEvents(curActiveCmp || xds.active.component, saveInfo)\r\n\r\n}\r\n\r\nfunction saveEvents(activeCmp, saveInfo) {\r\n    var gridEvents = saveInfo.gridJson.main.events;\r\n    var fromEvents = saveInfo.formJson.main.events;\r\n\r\n    var addGridFormEvent = function(events) {\r\n        for (var key in events) {\r\n            var list = events[key];\r\n            for (var name in list) {\r\n                var _name = list[name];\r\n                _name && xds.vmd.addEventForDesignerCmp(activeCmp, _name, _name)\r\n            }\r\n        }\r\n    }\r\n    //网格\r\n    addGridFormEvent(gridEvents);\r\n    //自由格式\r\n    addGridFormEvent(fromEvents);\r\n\r\n}\r\n\r\nfunction saveRptInfo(info, sName) {\r\n    var maxRow = 2;\r\n    var maxCol = info.settings.fields.length;\r\n    var styleInfo = new reportInfos();\r\n\r\n    var report = {};\r\n    report.main = {};\r\n    report.main.body = {};\r\n    report.main.celltypes = {};\r\n    report.main.datasource = {};\r\n    report.main.style = {};\r\n    report.main.tree = {};\r\n\r\n    report.main.style.aligns = {\r\n        1: {\r\n            autoenter: \"0\",\r\n            escapelabel: 0,\r\n            halign: \"left\",\r\n            padding: \"0 4 0 4\",\r\n            rotation: \"0\",\r\n            rowspace: \"\",\r\n            singlerotation: undefined,\r\n            textcontrol: \"\",\r\n            txtdirection: \"0\",\r\n            valign: \"middle\"\r\n        }\r\n    }\r\n\r\n    report.main.style.borders = {\r\n        1: {\r\n            bottom: \"1,RGB(204,204,204),0\",\r\n            left: \"1,RGB(204,204,204),0\",\r\n            right: \"1,RGB(204,204,204),0\",\r\n            top: \"1,RGB(204,204,204),0\"\r\n        }\r\n    }\r\n\r\n    report.main.style.fonts = {\r\n        1: {\r\n            color: \"#000\",\r\n            italic: \"0\",\r\n            name: \"SimSun\",\r\n            size: \"10\",\r\n            unline: \"0\",\r\n            weight: \"0\"\r\n        },\r\n        2: {\r\n            color: \"#F00\", //主键红\r\n            italic: \"0\",\r\n            name: \"SimSun\",\r\n            size: \"10\",\r\n            unline: \"0\",\r\n            weight: \"0\"\r\n        },\r\n        3: {\r\n            color: \"#00F\", //非空蓝\r\n            italic: \"0\",\r\n            name: \"SimSun\",\r\n            size: \"10\",\r\n            unline: \"0\",\r\n            weight: \"0\"\r\n        }\r\n\r\n    }\r\n\r\n    report.main.style.numbers = {\r\n        1: {\r\n            type: '0'\r\n        }\r\n    }\r\n\r\n    report.main.body.columns = {};\r\n    report.main.body.columns.width = []\r\n\r\n    for (var i = 0; i < maxCol; i++) {\r\n        // report.main.body.columns.width.push(100)\r\n        report.main.body.columns.width.push(\r\n            (info.settings.fields[i].fieldsConfig && info.settings.fields[i].fieldsConfig.settings.colHide) ?\r\n            0 : ((info.settings.fields[i].fieldsConfig && info.settings.fields[i].fieldsConfig.settings.colWidth) ?\r\n                info.settings.fields[i].fieldsConfig.settings.colWidth : 100)\r\n        )\r\n    }\r\n    report.main.body.colNum = maxCol;\r\n    report.main.body.rowNum = 2;\r\n    report.main.body.fixedrow = 1;\r\n    report.main.body.fixedcol = 0;\r\n\r\n    report.main.body.sections = [];\r\n    var s = getSectionRowInfo(0, parseInt(maxRow), 0, parseInt(maxCol), styleInfo, info, sName);\r\n    report.main.body.sections.push(s);\r\n    //保存字段类型和事件\r\n    var setCellTypeAndEvent = function(cellinfo, settings, events) {\r\n        cellinfo.fillcelltype = styleInfo.getCellTypeID(settings).toString();\r\n        cellinfo.event = styleInfo.getEventsID(events).toString();\r\n\r\n    }\r\n    //单元格类型属性   \r\n    for (var i = 0; i < info.settings.fields.length; i++) {\r\n        var sets = info.settings.fields[i].fieldsConfig;\r\n        // info.settings.fields[0].fieldsConfig.settings\r\n        if (sets) {\r\n            switch (sets.type) {\r\n                case \"text\":\r\n                    if (sets.settings.text_typeSelect == 'common') {\r\n                        var text = {};\r\n                        text.type = \"Text\";\r\n                        text.regexptip = '';\r\n                        text.charexp = sets.settings.text_rule_charExp\r\n                        text.fillrule = sets.settings.text_common_fillRules\r\n                        text.ismultiline = sets.settings.text_common_mutilRow\r\n                        text.isenableedit = sets.settings.text_common_allowEdit\r\n                        text.isallownull = sets.settings.text_common_allowEmpty\r\n                        text.emptydisplay = sets.settings.text_common_emptyAlert\r\n                        text.minlen = sets.settings.text_rule_minLength\r\n                        text.maxlen = sets.settings.text_rule_maxLength\r\n                        text.tellformart = sets.settings.text_common_phoneType\r\n                        text.char = sets.settings.text_common_symbol\r\n\r\n                        var text_event = {\r\n                            click: sets.events.text_click,\r\n                            change: sets.events.text_change\r\n                        }\r\n                        try {\r\n                            if (report.main.body.sections[0].data[0] && report.main.body.sections[0].data[0].cells) {\r\n                                setCellTypeAndEvent(report.main.body.sections[0].data[0].cells[i], text, text_event)\r\n                                // report.main.body.sections[0].data[0].cells[i].fillcelltype = styleInfo.getCellTypeID(text).toString();\r\n                                // report.main.body.sections[0].data[0].cells[i].event = styleInfo.getEventsID(text).toString();\r\n                            }\r\n\r\n                        } catch (ex) {\r\n\r\n                        }\r\n                    } else if (sets.settings.text_typeSelect == 'no') {\r\n                        var order = {};\r\n                        order.type = \"order\";\r\n                        order.isallownull = sets.settings.text_no_allowEmpty\r\n                        order.emptydisplay = sets.settings.text_no_emptyAlert\r\n                        try {\r\n                            if (report.main.body.sections[0].data[0] && report.main.body.sections[0].data[0].cells) {\r\n                                setCellTypeAndEvent(report.main.body.sections[0].data[0].cells[i], order, sets.events)\r\n                            }\r\n\r\n                        } catch (ex) {\r\n\r\n                        }\r\n\r\n                    } else if (sets.settings.text_typeSelect == 'guid') {\r\n                        var guid = {};\r\n                        guid.type = \"guid\";\r\n                        guid.isallownull = sets.settings.text_guid_alloewEmpty\r\n                        guid.emptydisplay = sets.settings.text_guid_emptyAlert\r\n                        guid.length = sets.settings.text_guid_length\r\n                        try {\r\n                            if (report.main.body.sections[0].data[0] && report.main.body.sections[0].data[0].cells)\r\n                                setCellTypeAndEvent(report.main.body.sections[0].data[0].cells[i], guid, sets.events)\r\n                        } catch (ex) {\r\n\r\n                        }\r\n\r\n                    } else if (sets.settings.text_typeSelect == 'password') {\r\n                        var passWord = {};\r\n                        passWord.type = \"PassWord\";\r\n                        passWord.isenableedit = sets.settings.text_password_allowEdit\r\n                        passWord.isallownull = sets.settings.text_password_allowEmpty\r\n                        passWord.emptydisplay = sets.settings.text_password_emptyAlert\r\n                        try {\r\n                            if (report.main.body.sections[0].data[0] && report.main.body.sections[0].data[0].cells)\r\n                                setCellTypeAndEvent(report.main.body.sections[0].data[0].cells[i], passWord, sets.events);\r\n                        } catch (ex) {\r\n\r\n                        }\r\n\r\n                    }\r\n                    break;\r\n                case \"checkbox\":\r\n                    var checkBox = {};\r\n                    checkBox.type = \"CheckBoxGroup\";\r\n                    checkBox.displayLabel = sets.settings.displayLabel\r\n                    checkBox.separator = sets.settings.symbol\r\n                    checkBox.isenableedit = sets.settings.allowEdit\r\n                    checkBox.isallselect = sets.settings.provideAll\r\n                    checkBox.isother = sets.settings.provideOther\r\n                    checkBox.multigroup = sets.settings.allowMulti\r\n                    checkBox.autolayout = sets.settings.autolayout\r\n                    checkBox.colcount = \"\";\r\n                    checkBox.linespace = sets.settings.rowMargin\r\n                    checkBox.isallownull = sets.settings.allowEmpty\r\n                    checkBox.emptydisplay = sets.settings.emptyAlert\r\n\r\n                    checkBox.bindsource = {};\r\n                    checkBox.bindsource.tablename = (sets.datas&&sets.datas.dataSet)||sets.settings.dataSet\r\n                    checkBox.bindsource.valuecolumn = (sets.datas&&sets.datas.saveField)||sets.settings.saveField\r\n                    checkBox.bindsource.showcolumn = (sets.datas&&sets.datas.displayField)||sets.settings.displayField\r\n                    checkBox.bindsource.condition = (sets.datas&&sets.datas.filter)||sets.settings.filter\r\n                    try {\r\n                        if (report.main.body.sections[0].data[0] && report.main.body.sections[0].data[0].cells)\r\n                            setCellTypeAndEvent(report.main.body.sections[0].data[0].cells[i], checkBox, sets.events);\r\n                    } catch (ex) {\r\n\r\n                    }\r\n                    break; //复选框\r\n                case \"richText\":\r\n                    var richEdit = {};\r\n                    richEdit.type = \"RichEdit\";\r\n                    richEdit.firstindent = sets.settings.segmentPadding\r\n                    richEdit.isenableedit = sets.settings.allowEdit\r\n                    richEdit.isallownull = sets.settings.allowEmpty\r\n                    richEdit.emptydisplay = sets.settings.emptyAlert\r\n                    try {\r\n                        if (report.main.body.sections[0].data[0] && report.main.body.sections[0].data[0].cells)\r\n                            setCellTypeAndEvent(report.main.body.sections[0].data[0].cells[i], richEdit, sets.events);\r\n                    } catch (ex) {\r\n\r\n                    }\r\n                    break; //富文本\r\n                case \"date\":\r\n                    var date = {};\r\n                    date.type = \"Date\";\r\n                    date.allowuserdefine = sets.settings.customFormat;\r\n                    date.format = sets.settings.format\r\n                    date.isallownull = sets.settings.allowEmpty\r\n                    date.emptydisplay = sets.settings.emptydisplay\r\n                    date.isenableedit = sets.settings.allowEdit\r\n                    date.isdefultdate = sets.settings.defaultNow\r\n                    try {\r\n                        if (report.main.body.sections[0].data[0] && report.main.body.sections[0].data[0].cells)\r\n                            setCellTypeAndEvent(report.main.body.sections[0].data[0].cells[i], date, sets.events);\r\n                    } catch (ex) {\r\n\r\n                    }\r\n                    break; //日期\r\n                case \"radioButton\":\r\n                    var radioGroup = {};\r\n                    radioGroup.type = \"RadioGroup\";\r\n                    radioGroup.isenableedit = sets.settings.allowEdit\r\n                    radioGroup.autolayout = sets.settings.adaptive\r\n                    radioGroup.colcount = sets.settings.displayRow\r\n                    radioGroup.linespace = sets.settings.rowMargin\r\n                    radioGroup.displaystyle = sets.settings.displayStyle\r\n\r\n                    radioGroup.bindsource = {};\r\n                    radioGroup.bindsource.tablename = (sets.datas&&sets.datas.dataSet)||sets.settings.dataSet\r\n                    radioGroup.bindsource.valuecolumn = (sets.datas&&sets.datas.saveField)||sets.settings.saveField\r\n                    radioGroup.bindsource.showcolumn = (sets.datas&&sets.datas.displayField)||sets.settings.displayField\r\n                    try {\r\n                        if (report.main.body.sections[0].data[0] && report.main.body.sections[0].data[0].cells)\r\n                            setCellTypeAndEvent(report.main.body.sections[0].data[0].cells[i], radioGroup, sets.events);\r\n                    } catch (ex) {\r\n\r\n                    }\r\n                    break; //单选按钮\r\n                    // case \"comlist\":\r\n                case \"comboGrid\":\r\n                    debugger\r\n                    var ddg = {};\r\n                    ddg.type = \"vmdgrid\"\r\n                    ddg.isenableedit = sets.settings.allowEdit\r\n                    ddg.width = sets.settings.grid_width\r\n                    ddg.isallownull = sets.settings.allowEmpty\r\n                    ddg.emptydisplay = sets.settings.emptyAlert\r\n                    ddg.ismulti = sets.settings.multi\r\n                    ddg.height = sets.settings.gridHeight\r\n                    ddg.bindsource = {};\r\n                    if(sets.datas)\r\n                    ddg.bindsource.tablename = (sets.datas&&sets.datas.dataSet)||sets.settings.dataSet\r\n                    ddg.bindsource.valuecolumn =  (sets.datas&&sets.datas.saveField)||sets.settings.saveField\r\n                    ddg.bindsource.showcolumn =  (sets.datas&&sets.datas.displayField)||sets.settings.displayField\r\n                    try {\r\n                        if (report.main.body.sections[0].data[0] && report.main.body.sections[0].data[0].cells)\r\n                            setCellTypeAndEvent(report.main.body.sections[0].data[0].cells[i], ddg, sets.events);\r\n                    } catch (ex) {\r\n\r\n                    }\r\n                    break; //下拉网格\r\n                case \"comboTree\":\r\n                    var ddt = {};\r\n                    ddt.type = \"dropdowntree\";\r\n                    ddt.width = sets.settings.ct_width;\r\n                    ddt.selectableType = sets.settings.chooseType\r\n                    ddt.height = sets.settings.ct_height\r\n                    ddt.isallownull = sets.settings.allowEmpty\r\n                    ddt.emptydisplay = sets.settings.emptyAlert\r\n                    ddt.bindsource = {};\r\n                    ddt.bindsource.tablename = (sets.datas&&sets.datas.dataSet)||sets.settings.dataSet\r\n                    ddt.bindsource.valuecolumn = (sets.datas&&sets.datas.valueField)||sets.settings.valueField\r\n                    ddt.bindsource.showcolumn = (sets.datas&&sets.datas.displayField)||sets.settings.displayField\r\n                    ddt.bindsource.parentcolumn = (sets.datas&&sets.datas.parentField)||sets.settings.parentField\r\n                    ddt.bindsource.nodecolumn = (sets.datas&&sets.datas.leafValue)||sets.settings.leafValue\r\n                    ddt.bindsource.rootvalue = (sets.datas&&sets.datas.rootValue)||sets.settings.rootValue\r\n                    ddt.bindsource.roottext = (sets.datas&&sets.datas.rootText)||sets.settings.rootText\r\n                    try {\r\n                        if (report.main.body.sections[0].data[0] && report.main.body.sections[0].data[0].cells)\r\n                            setCellTypeAndEvent(report.main.body.sections[0].data[0].cells[i], ddt, sets.events);\r\n                    } catch (ex) {\r\n\r\n                    }\r\n                    break; //下拉树\r\n                case \"number\":\r\n                    var numberInfo = {};\r\n                    numberInfo.type = \"Number\";\r\n                    numberInfo.isenableedit = sets.settings.number_allowEdit;\r\n                    numberInfo.isallownull = sets.settings.number_allowEmpty;\r\n                    numberInfo.isdecimal = sets.settings.number_allowDecimal;\r\n                    numberInfo.isnegative = sets.settings.number_allowNegetive;\r\n                    numberInfo.decimalnumbers = sets.settings.number_decimalLength;\r\n                    numberInfo.emptydisplay = sets.settings.number_emptyAlert;\r\n                    numberInfo.islimit = sets.settings.number_limit;\r\n                    numberInfo.maxvalue = sets.settings.number_maxValue;\r\n                    numberInfo.minvalue = sets.settings.number_minValue;\r\n\r\n                    var number_event = {\r\n                        click: sets.events.number_click,\r\n                        change: sets.events.number_change\r\n                    }\r\n                    try {\r\n                        if (report.main.body.sections[0].data[0] && report.main.body.sections[0].data[0].cells)\r\n                            setCellTypeAndEvent(report.main.body.sections[0].data[0].cells[i], numberInfo, number_event);\r\n                    } catch (ex) {\r\n\r\n                    }\r\n                    break; //数字\r\n                case \"combo\":\r\n                    var comboBox = {};\r\n                    comboBox.type = \"Combox\";\r\n                    comboBox.isenableedit = sets.settings.allowEdit;\r\n                    comboBox.ismulti = sets.settings.allowMulti;\r\n                    comboBox.width = sets.settings.combo_width;\r\n                    comboBox.height = sets.settings.combo_height;\r\n                    comboBox.isallownull = sets.settings.allowEmpty;\r\n                    comboBox.emptydisplay = sets.settings.emptyAlert;\r\n                    comboBox.noValueClear = sets.settings.noValueClear;\r\n                    comboBox.bindsource = {};\r\n                    comboBox.bindsource.tablename =  (sets.datas&&sets.datas.dataSet)||sets.settings.dataSet;\r\n                    comboBox.bindsource.valuecolumn =  (sets.datas&&sets.datas.saveField)||sets.settings.saveField;\r\n                    comboBox.bindsource.showcolumn =  (sets.datas&&sets.datas.displayField)||sets.settings.displayField;\r\n                    comboBox.bindsource.condition =  (sets.datas&&sets.datas.filter)||sets.filter;\r\n                    try {\r\n                        if (report.main.body.sections[0].data[0] && report.main.body.sections[0].data[0].cells)\r\n                            setCellTypeAndEvent(report.main.body.sections[0].data[0].cells[i], comboBox, sets.events);\r\n                    } catch (ex) {\r\n\r\n                    }\r\n                    break; //下拉框\r\n            }\r\n        }\r\n    }\r\n\r\n    report.main.celltypes = styleInfo.cellTypeInfos;\r\n    report.main.events = styleInfo.eventInfo;\r\n    //构造grid的bindSource\r\n    initBindSourceProp(report);\r\n    return report;\r\n}\r\n\r\nfunction saveFormInfo(info, sName) {\r\n\r\n    var colset = info.settings.formColumn;\r\n    var maxRow = Math.ceil(info.settings.fields.length / parseInt(colset));\r\n    var maxCol = colset;\r\n    var styleInfo = new reportInfos();\r\n    var report = {};\r\n    report.main = {};\r\n    report.main.body = {};\r\n    report.main.celltypes = {};\r\n    report.main.datasource = {};\r\n    report.main.style = {};\r\n    report.main.tree = {};\r\n    report.main.style.aligns = {\r\n        1: {\r\n            autoenter: \"0\",\r\n            escapelabel: 0,\r\n            halign: \"left\",\r\n            padding: \"0 4 0 4\",\r\n            rotation: \"0\",\r\n            rowspace: \"\",\r\n            singlerotation: undefined,\r\n            textcontrol: \"\",\r\n            txtdirection: \"0\",\r\n            valign: \"middle\"\r\n        },\r\n        2: {\r\n            autoenter: \"0\",\r\n            escapelabel: 0,\r\n            halign: \"right\",\r\n            padding: \"0 4 0 4\",\r\n            rotation: \"0\",\r\n            rowspace: \"\",\r\n            singlerotation: undefined,\r\n            textcontrol: \"\",\r\n            txtdirection: \"0\",\r\n            valign: \"middle\"\r\n        }\r\n    }\r\n    report.main.style.borders = {\r\n        1: {\r\n            bottom: \"1,RGB(204,204,204),0\",\r\n            left: \"1,RGB(204,204,204),0\",\r\n            right: \"1,RGB(204,204,204),0\",\r\n            top: \"1,RGB(204,204,204),0\"\r\n        }\r\n    }\r\n    report.main.style.fonts = {\r\n        1: {\r\n            color: \"#000\",\r\n            italic: \"0\",\r\n            name: \"SimSun\",\r\n            size: \"10\",\r\n            unline: \"0\",\r\n            weight: \"0\"\r\n        },\r\n        2: {\r\n            color: \"#F00\", //主键红\r\n            italic: \"0\",\r\n            name: \"SimSun\",\r\n            size: \"10\",\r\n            unline: \"0\",\r\n            weight: \"0\"\r\n        },\r\n        3: {\r\n            color: \"#00F\", //非空蓝\r\n            italic: \"0\",\r\n            name: \"SimSun\",\r\n            size: \"10\",\r\n            unline: \"0\",\r\n            weight: \"0\"\r\n        }\r\n    }\r\n    report.main.style.numbers = {\r\n        1: {\r\n            type: '0'\r\n        }\r\n    }\r\n    report.main.body.columns = {};\r\n    report.main.body.columns.width = []\r\n    if (info.settings.fields.length > 0) {\r\n        var extra = 0;\r\n        for (var i = 0; i < colset; i++) {\r\n            var n = i + extra;\r\n            var isHide = info.settings.fields[n] && info.settings.fields[n].fieldsConfig && info.settings.fields[n].fieldsConfig.settings.colHide;\r\n            if (isHide) {\r\n                extra++;\r\n                i--;\r\n            } else {\r\n                var w = (info.settings.fields[n] && info.settings.fields[n].fieldsConfig && info.settings.fields[n].fieldsConfig.settings.colWidth) || 100;\r\n                report.main.body.columns.width.push(parseInt(w / 10 * 2))\r\n                report.main.body.columns.width.push(parseInt(w / 10 * 7))\r\n                report.main.body.columns.width.push(parseInt(w / 10 * 1))\r\n            }\r\n        }\r\n    }\r\n\r\n    report.main.body.colNum = maxCol * 3;\r\n    report.main.body.rowNum = maxRow;\r\n\r\n    report.main.body.sections = [];\r\n    var s = getSectionRowInfoform(0, parseInt(maxRow), 0, parseInt(maxCol), styleInfo, info, sName, colset);\r\n    report.main.body.sections.push(s)\r\n\r\n    //保存字段类型和事件\r\n    var setCellTypeAndEvent = function(cellinfo, settings, events) {\r\n        cellinfo.fillcelltype = styleInfo.getCellTypeID(settings).toString();\r\n        cellinfo.event = styleInfo.getEventsID(events).toString();\r\n\r\n    }\r\n\r\n    //单元格类型属性   \r\n\r\n    for (var i = 0; i < info.settings.fields.length; i++) {\r\n        var sets = info.settings.fields[i].fieldsConfig;\r\n\r\n        var cellInfo = report.main.body.sections[0].data[Math.floor(i / colset)].cells[(i * 3 + 1) % (3 * colset)];\r\n        if (sets) {\r\n            switch (sets.type) {\r\n                case \"text\":\r\n                    if (sets.settings.text_typeSelect == 'common') {\r\n                        var text = {};\r\n                        text.type = \"Text\";\r\n                        text.regexptip = '';\r\n                        text.charexp = sets.settings.text_rule_charExp\r\n                        text.fillrule = sets.settings.text_common_fillRules\r\n                        text.ismultiline = sets.settings.text_common_mutilRow\r\n                        text.isenableedit = sets.settings.text_common_allowEdit\r\n                        text.isallownull = sets.settings.text_common_allowEmpty\r\n                        text.emptydisplay = sets.settings.text_common_emptyAlert\r\n                        text.minlen = sets.settings.text_rule_minLength\r\n                        text.maxlen = sets.settings.text_rule_maxLength\r\n                        text.tellformart = sets.settings.text_common_phoneType\r\n                        text.char = sets.settings.text_common_symbol\r\n\r\n                        var text_event = {\r\n                            click: sets.events.text_click,\r\n                            change: sets.events.text_change\r\n                        }\r\n                        try {\r\n                            if (cellInfo)\r\n                                setCellTypeAndEvent(cellInfo, text, text_event)\r\n                        } catch (ex) {\r\n\r\n                        }\r\n                        break;\r\n                    } else if (sets.settings.text_typeSelect == 'no') {\r\n                        var order = {};\r\n                        order.type = \"order\";\r\n                        order.isallownull = sets.settings.text_no_allowEmpty\r\n                        order.emptydisplay = sets.settings.text_no_emptyAlert\r\n                        if (cellInfo)\r\n                            setCellTypeAndEvent(cellInfo, order, sets.events)\r\n                        break;\r\n                    } else if (sets.settings.text_typeSelect == 'guid') {\r\n                        var guid = {};\r\n                        guid.type = \"guid\";\r\n                        guid.isallownull = sets.settings.text_guid_alloewEmpty\r\n                        guid.emptydisplay = sets.settings.text_guid_emptyAlert\r\n                        guid.length = sets.settings.text_guid_length\r\n                        if (cellInfo)\r\n                            setCellTypeAndEvent(cellInfo, guid, sets.events)\r\n                        break;\r\n                    } else if (sets.settings.text_typeSelect == 'password') {\r\n                        var passWord = {};\r\n                        passWord.type = \"PassWord\";\r\n                        passWord.isenableedit = sets.settings.text_password_allowEdit\r\n                        passWord.isallownull = sets.settings.text_password_allowEmpty\r\n                        passWord.emptydisplay = sets.settings.text_password_emptyAlert\r\n                        if (cellInfo)\r\n                            setCellTypeAndEvent(cellInfo, passWord, sets.events)\r\n                        break;\r\n                    }\r\n                    break;\r\n                case \"checkbox\":\r\n                    var checkBox = {};\r\n                    checkBox.type = \"CheckBoxGroup\";\r\n                    checkBox.displayLabel = sets.settings.displayLabel\r\n                    checkBox.separator = sets.settings.symbol\r\n                    checkBox.isenableedit = sets.settings.allowEdit\r\n                    checkBox.isallselect = sets.settings.provideAll\r\n                    checkBox.isother = sets.settings.provideOther\r\n                    checkBox.multigroup = sets.settings.allowMulti\r\n                    checkBox.autolayout = sets.settings.autolayout\r\n                    checkBox.colcount = \"\";\r\n                    checkBox.linespace = sets.settings.rowMargin\r\n                    checkBox.isallownull = sets.settings.allowEmpty\r\n                    checkBox.emptydisplay = sets.settings.emptyAlert\r\n\r\n                    checkBox.bindsource = {};\r\n                    checkBox.bindsource.tablename = (sets.datas&&sets.datas.dataSet)||sets.settings.dataSet\r\n                    checkBox.bindsource.valuecolumn = (sets.datas&&sets.datas.saveField)||sets.settings.saveField\r\n                    checkBox.bindsource.showcolumn = (sets.datas&&sets.datas.displayField)||sets.settings.displayField\r\n                    checkBox.bindsource.condition = (sets.datas&&sets.datas.filter)||sets.settings.filter\r\n                    if (cellInfo)\r\n                        setCellTypeAndEvent(cellInfo, checkBox, sets.events)\r\n                    break;\r\n                case \"richText\":\r\n                    var richEdit = {};\r\n                    richEdit.type = \"RichEdit\";\r\n                    richEdit.firstindent = sets.settings.segmentPadding\r\n                    richEdit.isenableedit = sets.settings.allowEdit\r\n                    richEdit.isallownull = sets.settings.allowEmpty\r\n                    richEdit.emptydisplay = sets.settings.emptyAlert\r\n                    if (cellInfo)\r\n                        setCellTypeAndEvent(cellInfo, richEdit, sets.events)\r\n                    break; //富文本\r\n                case \"date\":\r\n                    var date = {};\r\n                    date.type = \"Date\";\r\n                    date.allowuserdefine = sets.settings.customFormat;\r\n                    date.format = sets.settings.format\r\n                    date.isallownull = sets.settings.allowEmpty\r\n                    date.emptydisplay = sets.settings.emptydisplay\r\n                    date.isenableedit = sets.settings.allowEdit\r\n                    date.isdefultdate = sets.settings.defaultNow\r\n                    // date.isprint = sets.settings.\r\n                    if (cellInfo)\r\n                        setCellTypeAndEvent(cellInfo, date, sets.events)\r\n                    break\r\n                case \"radioButton\":\r\n                    var radioGroup = {};\r\n                    radioGroup.type = \"RadioGroup\";\r\n                    radioGroup.isenableedit = sets.settings.allowEdit\r\n                    // radioGroup.isprint = sets.settings.\r\n                    radioGroup.autolayout = sets.settings.adaptive\r\n                    radioGroup.colcount = sets.settings.displayRow\r\n                    radioGroup.linespace = sets.settings.rowMargin\r\n                    radioGroup.displaystyle = sets.settings.displayStyle\r\n\r\n                    radioGroup.bindsource = {};\r\n                    radioGroup.bindsource.tablename = (sets.datas&&sets.datas.dataSet)||sets.settings.dataSet\r\n                    radioGroup.bindsource.valuecolumn = (sets.datas&&sets.datas.saveField)||sets.settings.saveField\r\n                    radioGroup.bindsource.showcolumn = (sets.datas&&sets.datas.displayField)||sets.settings.displayField\r\n                    // radioGroup.bindsource.condition = sets.settings.\r\n                    if (cellInfo)\r\n                        setCellTypeAndEvent(cellInfo, radioGroup, sets.events)\r\n                    break; //单选按钮\r\n                    // case \"comlist\":\r\n                case \"comboGrid\":\r\n                    debugger\r\n                    var ddg = {};\r\n                    ddg.type = \"vmdgrid\"\r\n                    ddg.isenableedit = sets.settings.allowEdit\r\n                    ddg.width = sets.settings.grid_width\r\n                    ddg.isallownull = sets.settings.allowEmpty\r\n                    ddg.emptydisplay = sets.settings.emptyAlert\r\n                    ddg.ismulti = sets.settings.multi\r\n                    ddg.height = sets.settings.gridHeight\r\n                    ddg.bindsource = {};\r\n                    ddg.bindsource.tablename = (sets.datas&&sets.datas.dataSet)||sets.settings.dataSet\r\n                    ddg.bindsource.valuecolumn = (sets.datas&&sets.datas.saveField)||sets.settings.saveField\r\n                    ddg.bindsource.showcolumn = (sets.datas&&sets.datas.displayField)||sets.settings.displayField\r\n                    if (cellInfo)\r\n                        setCellTypeAndEvent(cellInfo, ddg, sets.events);\r\n                    break\r\n                case \"comboTree\":\r\n                    var ddt = {};\r\n                    ddt.type = \"dropdowntree\";\r\n                    ddt.width = sets.settings.ct_width;\r\n                    ddt.selectableType = sets.settings.chooseType\r\n                    ddt.height = sets.settings.ct_height\r\n                    ddt.isallownull = sets.settings.allowEmpty\r\n                    ddt.emptydisplay = sets.settings.emptyAlert\r\n                    ddt.bindsource = {};\r\n                    ddt.bindsource.tablename = (sets.datas&&sets.datas.dataSet)||sets.settings.dataSet\r\n                    ddt.bindsource.valuecolumn = (sets.datas&&sets.datas.valueField)||sets.settings.valueField\r\n                    ddt.bindsource.showcolumn = (sets.datas&&sets.datas.displayField)||sets.settings.displayField\r\n                    ddt.bindsource.parentcolumn = (sets.datas&&sets.datas.parentField)||sets.settings.parentField\r\n                    ddt.bindsource.nodecolumn = (sets.datas&&sets.datas.leafValue)||sets.settings.leafValue\r\n                    ddt.bindsource.rootvalue = (sets.datas&&sets.datas.rootValue)||sets.settings.rootValue\r\n                    ddt.bindsource.roottext = (sets.datas&&sets.datas.rootText)||sets.settings.rootText\r\n                    if (cellInfo)\r\n                        setCellTypeAndEvent(cellInfo, ddt, sets.events)\r\n                    break;\r\n                case \"number\":\r\n                    var numberInfo = {};\r\n                    numberInfo.type = \"Number\";\r\n                    numberInfo.isenableedit = sets.settings.number_allowEdit;\r\n                    numberInfo.isallownull = sets.settings.number_allowEmpty;\r\n                    numberInfo.isdecimal = sets.settings.number_allowDecimal;\r\n                    numberInfo.isnegative = sets.settings.number_allowNegetive;\r\n                    numberInfo.decimalnumbers = sets.settings.number_decimalLength;\r\n                    numberInfo.emptydisplay = sets.settings.number_emptyAlert;\r\n                    numberInfo.islimit = sets.settings.number_limit;\r\n                    numberInfo.maxvalue = sets.settings.number_maxValue;\r\n                    numberInfo.minvalue = sets.settings.number_minValue;\r\n\r\n                    var number_event = {\r\n                        click: sets.events.number_click,\r\n                        change: sets.events.number_change\r\n                    }\r\n                    if (cellInfo)\r\n                        setCellTypeAndEvent(cellInfo, numberInfo, number_event)\r\n                    break;\r\n                case \"combo\":\r\n                    var comboBox = {};\r\n                    comboBox.type = \"Combox\";\r\n                    comboBox.isenableedit = sets.settings.allowEdit;\r\n                    comboBox.ismulti = sets.settings.allowMulti;\r\n                    comboBox.width = sets.settings.combo_width;\r\n                    comboBox.height = sets.settings.combo_height;\r\n                    comboBox.isallownull = sets.settings.allowEmpty;\r\n                    comboBox.emptydisplay = sets.settings.emptyAlert;\r\n                    comboBox.noValueClear = sets.settings.noValueClear;\r\n                    comboBox.bindsource = {};\r\n                    comboBox.bindsource.tablename = (sets.datas&&sets.datas.dataSet)||sets.settings.dataSet;\r\n                    comboBox.bindsource.valuecolumn =(sets.datas&& sets.datas.saveField)||sets.settings.saveField;\r\n                    comboBox.bindsource.showcolumn = (sets.datas&&sets.datas.displayField)||sets.settings.displayField;\r\n                    comboBox.bindsource.condition = (sets.datas&&sets.datas.filter)||sets.settings.filter;\r\n                    if (cellInfo)\r\n                        setCellTypeAndEvent(cellInfo, comboBox, sets.events)\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    report.main.celltypes = styleInfo.cellTypeInfos;\r\n    report.main.events = styleInfo.eventInfo;\r\n\r\n    //构建填报需要的bindSource\r\n    initBindSourceProp(report);\r\n    return report;\r\n}\r\n\r\nfunction initBindSourceProp(rpt) {\r\n\r\n    var dts = getDataTables();\r\n    var celltypes = rpt.main.celltypes;\r\n    var validDts = [];\r\n\r\n    for (var key in celltypes) {\r\n        var info = celltypes[key];\r\n        if (info.bindsource) {\r\n            var tablename = info.bindsource.tablename;\r\n            if (tablename && (validDts.indexOf(tablename) == -1)) validDts.push(tablename);\r\n        }\r\n    }\r\n\r\n    //datasource={tables:{ds1:{factname:'ds1',name:'ds1'}}}\r\n    if (!rpt.main.datasource.tables) rpt.main.datasource.tables = {};\r\n    Ext.each(validDts, function(name) {\r\n        rpt.main.datasource.tables[name] = {\r\n            factname: name,\r\n            name: name\r\n        }\r\n    })\r\n\r\n\r\n}\r\n\r\nfunction hwNavigationPanel_settingChangedEvent(sender) {\r\n    try {\r\n        xds.active.component.setConfig('inputConfig', JSON.stringify(page.controller.serialize()))\r\n        xds.fireEvent(\"componentchanged\")\r\n    } catch (ex) {\r\n\r\n    }\r\n}\r\n\r\nfunction hwOperationPanel_settingChangedEvent(sender) {\r\n    try {\r\n        xds.active.component.setConfig('inputConfig', JSON.stringify(page.controller.serialize()))\r\n        xds.fireEvent(\"componentchanged\")\r\n    } catch (ex) {\r\n\r\n    }\r\n}\r\n\r\nfunction statisticspanel_settingChangedEvent(sender) {\r\n    try {\r\n        save()\r\n        xds.fireEvent(\"componentchanged\")\r\n    } catch (ex) {\r\n\r\n    }\r\n}\r\npage.getOne = true;\r\n\r\n\r\nfunction setInfo() {\r\n    //增加属性面板的指向\r\n    xds.active.component.propPanel = page;\r\n\r\n    // if(){}\r\n\r\n    if (!xds.inputInfo) xds.inputInfo = [];\r\n    if (xds.inputInfo.length == 0) {\r\n        page.controller = new vmd.ux.contentFrame.Controller(page);\r\n        xds.inputInfo.push({\r\n            id: xds.active.component.id,\r\n            controller: page.controller\r\n        })\r\n        page.controller.setValue()\r\n        page.activeId = xds.active.component.id;\r\n    } else {\r\n        //没有先创建\r\n        var flag = true;\r\n        for (var i = 0; i < xds.inputInfo.length; i++) {\r\n            if (xds.inputInfo[i].id == xds.active.component.id) {\r\n                flag = false;\r\n                break;\r\n            }\r\n        }\r\n        if (flag) {\r\n            page.controller = new vmd.ux.contentFrame.Controller(page);\r\n            xds.inputInfo.push({\r\n                id: xds.active.component.id,\r\n                controller: page.controller\r\n            })\r\n            page.controller.setValue()\r\n            page.activeId = xds.active.component.id;\r\n        }\r\n        if (xds.active.component.id != page.activeId) {\r\n            page.controller.setValue();\r\n            for (var i = 0; i < xds.inputInfo.length; i++) {\r\n                if (page.activeId == xds.inputInfo[i].id) {\r\n                    page.activeId = xds.inputInfo[i].id\r\n                    page.controller = xds.inputInfo[i].controller;\r\n                    page.controller.setValue()\r\n                }\r\n            }\r\n            page.activeId = xds.active.component.id;\r\n        }\r\n    }\r\n}\r\n\r\nfunction hwGridType_copyGridToForm(sender) {\r\n    // page.controller.comp.form.setValue(page.controller.serialize())\r\n    page.controller.comp.grid.setValue(page.controller.comp.form.serialize())\r\n}\r\n\r\n\r\nfunction formtype_copyGridToForm(sender) {\r\n    page.controller.comp.form.setValue(page.controller.comp.grid.serialize())\r\n}\r\n\r\nvar getSectionRowInfo = function(startrow, endrow, startcol, endcol, report, info, sName) {\r\n    // var mArray = this.getPlugin('MergeCells').mergedCellsCollection.mergedCells;\r\n    var sections = {};\r\n    sections.header = [];\r\n    sections.data = [];\r\n    sections.title = [];\r\n    sections.startrow = 1;\r\n    sections.startcol = 1;\r\n    sections.endcol = endcol;\r\n    sections.endrow = 2;\r\n\r\n    //遍历有效行列提取属性信息\r\n    var temp = [];\r\n    var opts = {\r\n        type: 'grid'\r\n    }\r\n    for (var i = startrow; i < endrow; i++) {\r\n        var cells = [];\r\n        for (var n = startcol; n < endcol; n++) {\r\n            if (i == 0) {\r\n                opts.type2 = 'header';\r\n                cells.push(\r\n                    cell('g0', info.settings.fields[n].dictionary.cname, info.settings.fields[n].dictionary, opts)\r\n                    //('0', info.settings.fields[n].dictionary.cname,null,info.settings.fields[n].dictionary)\r\n                )\r\n            }\r\n            if (i == 1) {\r\n                opts.type2 = 'data';\r\n                cells.push(\r\n                    cell('g1', sName + '.' + info.settings.fields[n].dictionary.name, info.settings.fields[n].dictionary, opts)\r\n                    // ('1', sName + '.' + info.settings.fields[n].dictionary.name, info.settings.fields[n].dictionary)\r\n                )\r\n            }\r\n        }\r\n        temp.push({\r\n            i: cells\r\n        })\r\n    }\r\n\r\n    sections.header.push({\r\n        cells: temp[0].i,\r\n        height: 32\r\n    })\r\n    sections.data.push({\r\n        cells: temp[1].i,\r\n        height: 32\r\n    })\r\n\r\n    return sections;\r\n}\r\n\r\nvar getSectionRowInfoform = function(startrow, endrow, startcol, endcol, report, info, sName, colset) {\r\n    // var mArray = this.getPlugin('MergeCells').mergedCellsCollection.mergedCells;\r\n    var sections = {};\r\n    sections.header = [];\r\n    sections.data = [];\r\n    sections.title = [];\r\n    sections.startrow = startrow;\r\n    sections.startcol = startcol;\r\n    sections.endcol = endcol * 3;\r\n    sections.endrow = endrow;\r\n\r\n    //遍历有效行列提取属性信息\r\n    var extra = 0;\r\n    var temp = [];\r\n    for (var i = startrow; i < endrow; i++) {\r\n        var cells = [];\r\n\r\n        for (var n = 0; n < colset; n++) {\r\n            var k = n + extra + colset * i;\r\n            if (k > info.settings.fields.length - 1) break;\r\n            var isHide = info.settings.fields[k].fieldsConfig && info.settings.fields[k].fieldsConfig.settings.colHide;\r\n            if (isHide) {\r\n                extra++;\r\n                n--;\r\n            } else {\r\n                var opts = {\r\n                    type: 'form'\r\n                }\r\n                cells.push(cell('f0', info.settings.fields[k].dictionary.cname, info.settings.fields[k].dictionary, opts))\r\n                cells.push(cell('f1', sName + '.' + info.settings.fields[k].dictionary.name, info.settings.fields[k].dictionary, opts))\r\n                cells.push(cell('f2', '', info.settings.fields[k].dictionary, opts))\r\n            }\r\n        }\r\n        temp.push({\r\n            i: cells\r\n        })\r\n    }\r\n    for (var i = 0; i < temp.length; i++) {\r\n        sections.data.push({\r\n            cells: temp[i].i,\r\n            height: 45\r\n        })\r\n    }\r\n    sections.startcol = 1;\r\n    sections.startrow = 1;\r\n    return sections;\r\n}\r\n/*\r\n *desc 返回单元格信息\r\n *@param {string}- t 标识，网格g1-表头,g2-数据；自由格式f1-标题，f2-类型,f3-单位\r\n *@param {string}- v name 名称\r\n *@param {object}-d 数据字典对象\r\n *@param {object}-opts 配置type：grid||form，type2:分为网格表头和数据\r\n *return {object} 返回json对象\r\n */\r\nfunction cell(t, v, d, opts) {\r\n    var json = {\r\n        align: \"1\",\r\n        borders: \"1\",\r\n        datatype: \"0\",\r\n        event: undefined,\r\n        fonts: \"1\",\r\n        links: undefined,\r\n        menus: undefined,\r\n        merged: \"0\",\r\n        number: \"1\"\r\n    }\r\n    if (t == 'g0') {\r\n        json.data = v;\r\n    } else if (t == 'g1') {\r\n        json.datavalue = \"=\" + v;\r\n    } else if (t == 'f0') {\r\n        json.data = v + ':';\r\n        json.align = '2'\r\n    } else if (t == 'f1') {\r\n        if (d) {\r\n            json.datavalue = '=' + v;\r\n            if (d.type == 'NUMBER') json.align = '2';\r\n        }\r\n    } else if (t == 'f2') {\r\n        //\r\n    }\r\n\r\n    if (d) {\r\n        if (d.primary != '' && t != 'g1') json.fonts = '2'\r\n        //  if (d.primary == '' && d.nullable != 'Y') json.fonts = '3'\r\n        if (d.primary == '' && d.nullable != 'Y') {\r\n            if (opts) {\r\n                if (opts.type == 'form') json.fonts = '3';\r\n                else if (opts.type == 'grid') {\r\n                    if (opts.type2 == 'header') json.fonts = '3'\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n    return json;\r\n}\r\n\r\nvar getDatasets = function(report) {\r\n    var names = [];\r\n    var i = 0;\r\n    var storeRoot = xds.vmd.getRootNode(\"dataset\") || parent.xds.vmd.getRootNode(\"dataset\");\r\n    if (typeof storeRoot != 'undefined') {\r\n        storeRoot.eachChild(function(n) {\r\n            var name = {};\r\n            name.name = n.component.config.id;\r\n            if (n.component.config.dsName) {\r\n                name.dsname = n.component.config.dsName;\r\n            }\r\n            name.fields = [];\r\n            for (var key in n.childNodes) {\r\n                var field = n.childNodes[key];\r\n                if (field && field.attributes) {\r\n                    name.fields.push(field.attributes.text);\r\n                }\r\n            }\r\n            if (name) {\r\n                names.push(name);\r\n            }\r\n            i++\r\n        }, report);\r\n    }\r\n    return names;\r\n}\r\n\r\nfunction getDataTables() {\r\n\r\n    var names = [];\r\n\r\n    var storeRoot = xds.vmd.getRootNode(\"dataset\") || parent.xds.vmd.getRootNode(\"dataset\");\r\n    if (typeof storeRoot != 'undefined') {\r\n        storeRoot.eachChild(function(cmp) {\r\n            names.push(cmp.id);\r\n        });\r\n    }\r\n    return names;\r\n}\r\n\r\nfunction hwGridType_settingChangeEvents(sender) {\r\n    try {\r\n        save()\r\n        xds.fireEvent(\"componentchanged\")\r\n    } catch (ex) {\r\n\r\n    }\r\n}\r\n\r\nfunction formtype_settingChangeEvents(sender) {\r\n    try {\r\n        save()\r\n        xds.fireEvent(\"componentchanged\")\r\n    } catch (ex) {\r\n\r\n    }\r\n}\r\n\r\nfunction MyTabs1_tabchange(sender, tab) {\r\n    MyTabs.toolbarOperate()\r\n}\r\n\r\nfunction panel_beforerender(sender) {\r\n\r\n}","vmdcss":".x-tab-strip-top .x-tab-right {\r\n    padding: 0 10px;\r\n    height: 30px;\r\n    background-color: #fafafa;\r\n    font-size: 13px\r\n}","vmdprops":"\"\"","type":"ux","vmdevents_controller":"//page.getOne = true;\r\n\r\nExt.define('vmd.ux.contentFrame.Controller', {\r\n    xtype: 'vmd.ux.contentFrame.Controller',\r\n    constructor: function(options) {\r\n        this.scope = options;\r\n        this.comp = {\r\n            layout: this.scope.hwLayoutPanel.controller,\r\n            navigation: this.scope.hwNavigationPanel.controller,\r\n            operation: this.scope.hwOperationPanel.controller,\r\n            statistics: this.scope.statisticspanel.controller,\r\n            form: this.scope.formtype.controller,\r\n            grid: this.scope.hwGridType.controller\r\n        }\r\n    },\r\n    setValue: function() {\r\n        if (!xds.active.component.userConfig.inputConfig) {\r\n            xds.active.component.userConfig.inputConfig = {\r\n                form: {\r\n                    events: {\r\n                        rowChange: \"\",\r\n                        rowClick: \"\"\r\n                    },\r\n                    settings: {\r\n                        displayMode: \"0\",\r\n                        fields: [],\r\n                        formColumn: \"3\",\r\n                        issave: true\r\n                    }\r\n                },\r\n                grid: {\r\n                    events: {\r\n                        rowChange: \"\",\r\n                        rowClick: \"\"\r\n                    },\r\n\r\n                    settings: {\r\n                        displayMode: \"0\",\r\n                        fields: [],\r\n                        issave: true,\r\n                        storeName: undefined\r\n                    }\r\n                },\r\n                layout: {\r\n                    dataSet: \"\",\r\n                    displayMode: \"style1\",\r\n                    isShowForm: true,\r\n                    isShowGrid: true,\r\n                    isShowNavigation: true,\r\n                    isShowOperation: true,\r\n                    isShowStatistics: true\r\n                },\r\n                navigation: {\r\n                    click: \"\",\r\n                    first: true,\r\n                    firstCls: \"\",\r\n                    firstName: \"首行\",\r\n                    last: true,\r\n                    lastCls: \"\",\r\n                    lastName: \"尾行\",\r\n                    next: true,\r\n                    nextCls: \"\",\r\n                    nextName: \"下一行\",\r\n                    pageNum: true,\r\n                    prev: true,\r\n                    prevCls: \"\",\r\n                    prevName: \"上一行\"\r\n                },\r\n                operation: {\r\n                    addCls: \"\",\r\n                    addName: \"\",\r\n                    addbar: true,\r\n                    click: \"\",\r\n                    deleteCls: \"\",\r\n                    deleteName: \"\",\r\n                    deletebar: true,\r\n                    exData: true,\r\n                    exDataCls: \"\",\r\n                    exDataName: \"\",\r\n                    printCls: \"\",\r\n                    printName: \"\",\r\n                    printbar: true,\r\n                    saveCls: \"\",\r\n                    saveName: \"\",\r\n                    savebar: true\r\n                },\r\n                statistics: {\r\n                    expression: \"\"\r\n                }\r\n            }\r\n        }\r\n        var saveInfo = typeof xds.active.component.userConfig.inputConfig == 'object' ?\r\n            xds.active.component.userConfig.inputConfig : JSON.parse(xds.active.component.userConfig.inputConfig);\r\n        this.setInfo(saveInfo);\r\n\r\n    },\r\n    setInfo: function(info) {\r\n        if (info) {\r\n            this.comp.layout.setValue(info.layout);\r\n            this.comp.grid.setValue(info.grid);\r\n            this.comp.form.setValue(info.form);\r\n            this.comp.navigation.setValue(info.navigation);\r\n            this.comp.operation.setValue(info.operation);\r\n            this.comp.statistics.setValue(info.statistics)\r\n\r\n            var layout = this.comp.layout.serialize();\r\n            layout.isShowGrid ? this.scope.MyTabs.unhideTabStripItem(this.scope.panel1) : this.scope.MyTabs.hideTabStripItem(this.scope.panel1);\r\n            layout.isShowForm ? this.scope.MyTabs.unhideTabStripItem(this.scope.panel2) : this.scope.MyTabs.hideTabStripItem(this.scope.panel2);\r\n            layout.isShowNavigation ? this.scope.MyTabs.unhideTabStripItem(this.scope.panel3) : this.scope.MyTabs.hideTabStripItem(this.scope.panel3);\r\n            layout.isShowOperation ? this.scope.MyTabs.unhideTabStripItem(this.scope.panel4) : this.scope.MyTabs.hideTabStripItem(this.scope.panel4);\r\n            layout.isShowStatistics ? this.scope.MyTabs.unhideTabStripItem(this.scope.panel5) : this.scope.MyTabs.hideTabStripItem(this.scope.panel5);\r\n        }\r\n    },\r\n    serialize: function() {\r\n\r\n        var json = {\r\n            layout: this.comp.layout.serialize(),\r\n            navigation: this.comp.navigation.serialize(),\r\n            operation: this.comp.operation.serialize(),\r\n            statistics: this.comp.statistics.serialize(),\r\n            form: this.comp.form.serialize(),\r\n            grid: this.comp.grid.serialize()\r\n        }\r\n        return json;\r\n    },\r\n\r\n    //扩展其他公共方法\r\n    getDatasets: function() {\r\n\r\n        var names = [];\r\n        var storeRoot;\r\n        if (typeof xds != 'undefined') storeRoot = xds.vmd.getRootNode(\"dataset\");\r\n        else if (parent.xds) storeRoot = parent.xds.vmd.getRootNode(\"dataset\");\r\n        if (typeof storeRoot != 'undefined') {\r\n\r\n            var setstore = function(n) {\r\n                var name = {};\r\n                name.name = n.component.config.id;\r\n                if (n.component.config.dsName) {\r\n                    name.dsname = n.component.config.dsName;\r\n                }\r\n                name.fields = [];\r\n                for (var key in n.childNodes) {\r\n                    var field = n.childNodes[key];\r\n                    if (field && field.attributes) {\r\n                        name.fields.push(field.attributes.text);\r\n                    }\r\n                }\r\n                var temp = JSON.parse(n.component.config.storeConfig);\r\n                name.dictionary = temp.fields;\r\n                if (name) {\r\n                    names.push(name);\r\n                }\r\n            }\r\n            storeRoot.eachChild(function(n) {\r\n                if (n.component.cid == 'vmdDataSet') {\r\n                    n.eachChild(function(m) {\r\n                        if (m.component.config.storeConfig) {\r\n                            setstore(m)\r\n                        }\r\n                    })\r\n                } else if (n.component.config.storeConfig) {\r\n                    setstore(n)\r\n                }\r\n            });\r\n        }\r\n        return names;\r\n    },\r\n    // //取得数据集及数据字典\r\n    // getDatasetsWithDictionary: function() {\r\n    //     var names = [];\r\n    //     var storeRoot;\r\n    //     if (typeof xds != 'undefined') storeRoot = xds.vmd.getRootNode(\"dataset\");\r\n    //     else if (parent.xds) storeRoot = parent.xds.vmd.getRootNode(\"dataset\");\r\n    //     if (typeof storeRoot != 'undefined') {\r\n    //         storeRoot.eachChild(function(n) {\r\n    //             \r\n\r\n    //         });\r\n    //     }\r\n    //     return names;\r\n    // },\r\n    //字段选择，下拉窗使用\r\n    openVisualSelector: function(data, data1, urlCode, inst, p) {\r\n        debugger\r\n        var myurl;\r\n        if (typeof filter == 'undefined') {\r\n            myurl = '/system/modules/eQ9ULgcVb1/hwYa3IA0Y1/hwHCHpNfHv/hw1c3f0610.html'\r\n        } else {\r\n            myurl = '/system/modules/eQ9ULgcVb1/hwYa3IA0Y1/hwHCHpNfHv/hwfSA4EDtH.html'\r\n        }\r\n        if (urlCode == 'xlwg') myurl = '/system/modules/eQ9ULgcVb1/eQ9ULgcVb5/hwk9PgTMpg/hwpfrhVj8e.html'\r\n\r\n        if (data) {\r\n            // 创建一个新窗口（有url指向） \r\n            window.selectorWin = new vmd.window({\r\n                url: myurl,\r\n                title: '下拉显示列显示字段选择',\r\n                enableLoading: true, //启用进度加载\r\n                width: 780,\r\n                height: 480,\r\n                auto: false //auto为true 自动适应窗口，配合offset使用\r\n                // params: {\r\n                //     data: data,\r\n                //     data1: data1,\r\n                //     type: urlCode\r\n                // } //url中追加的编码的参数，json格式 \r\n            })\r\n            var temp = this.comp[this.operateType].settings.fields;\r\n\r\n            window.selectorWin.data = data;\r\n            window.selectorWin.data1 = data1;\r\n            window.selectorWin.type = urlCode;\r\n            window.selectorWin.selected = temp;\r\n            window.selectorWin.fname = p.dictionary.name;\r\n\r\n            window.selectorWin.show(); //窗口显示\r\n            window.selectorWin.close = function(result, urlCode, filter) {\r\n                var no = 0;\r\n                if (result) {\r\n                    var t = '';\r\n                    for (var i = 0; i < result.length; i++) {\r\n                        if (i == 0) {\r\n                            t = result[i].name;\r\n                        } else {\r\n                            t += ',' + result[i].name\r\n                        }\r\n                    }\r\n                    // p.fieldsConfig.comlist = t;\r\n                    // p.fieldsConfig.selected = [];\r\n                    // window.settingWin.iframe.setGridSettings(t)\r\n                    // for (var i = 0; i < result.length; i++) {\r\n                    //     p.fieldsConfig.selected.push(result[i])\r\n                    // }\r\n                    //   window.selectorWin.selected\r\n\r\n                    for (var i = 0; i < this.selected.length; i++) {\r\n                        if (this.fname == this.selected[i].dictionary.name) {\r\n                            no = i;\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    this.selected[no].fieldsConfig.comlist = t;\r\n                    this.selected[no].fieldsConfig.selected = [];\r\n                    window.settingWin.iframe.setGridSettings(t)\r\n                    for (var i = 0; i < result.length; i++) {\r\n                        this.selected[no].fieldsConfig.selected.push(result[i])\r\n                    }\r\n\r\n                }\r\n                selectorWin.hide();\r\n            }\r\n        }\r\n    },\r\n    //弹窗事件编辑器\r\n    openCodeEditor: function(sender, eventname, eventValue, param) {\r\n        var operateType = this.operateType || 'grid';\r\n        var operateCmpId = this.scope.activeId;\r\n        var operateField;\r\n        if (this.comp[operateType].settings) {\r\n            operateField = '_' + this.comp[operateType].settings.fields[this.comp[operateType].activeNo].dictionary.name;\r\n        } else {\r\n            if (this.comp[operateType][eventname]) {\r\n                operateField = '_' + this.comp[operateType][eventname];\r\n            } else {\r\n                operateField = ''\r\n            }\r\n        }\r\n\r\n\r\n        var eventName = eventValue || ('' + operateCmpId + '_' + operateType + operateField + '_' + eventname).toLowerCase();\r\n        var editor = new vmd.comp.Ace({\r\n            id: \"ace_code\"\r\n        });\r\n        init_def_platformControlData();\r\n        var aceWin = new vmd.window({\r\n            title: \"事件编辑\",\r\n            id: \"aceWin\",\r\n            url: vmd.virtualPath + vmd.vmdCodePath + \"?\" + Date.parse(new Date()),\r\n            offset: [100, 100],\r\n            modal: true,\r\n            maximizable: true,\r\n            maskStyle: 'opacity:0.7',\r\n            layout: 'border',\r\n            draggable: false\r\n\r\n        });\r\n        aceWin.closeFn = function() {\r\n            //修复ace tooltip还存在的问题\r\n            Ext.select('.Ace-Tern-tooltip').remove();\r\n            var val = aceWin.val;\r\n            if (aceWin.script == val) {\r\n                return;\r\n            }\r\n            Ext.Msg.confirm(\"提示\", \"脚本已改变是否保存?\", function(btn) {\r\n\r\n                if (btn == 'no') return;\r\n                var click_label = sender;\r\n                if (val.trim()) {\r\n                    xds.vmd.events = val;\r\n                    sender.setValue(eventName)\r\n                    sender.fireEvent('change', sender, eventName);\r\n                    // 返回给对象\r\n                } else {\r\n                    click_label = undefined;\r\n                    delete xds.vmd.events\r\n                }\r\n            })\r\n        }\r\n        //mafei 在ide-automachjs中\r\n        // init_def_platformControlData();\r\n        aceWin.on('close', aceWin.closeFn, this)\r\n        //当前拖拽组件\r\n        window.setTimeout(function() {\r\n            window.setTimeout(function() {\r\n                //代码编辑器初始化\r\n                if (typeof rowIndex == \"number\") {\r\n                    aceWin.aceline = rowIndex;\r\n                }\r\n            }, 150)\r\n            var code = parent.xds.vmd.events;\r\n\r\n\r\n            var getdefaulteventname = function() {\r\n                if (!param) {\r\n                    return \"function(sender\" + \"){\\n\" + \"\\n} \\n\";\r\n                } else {\r\n                    return \"function(sender,\" + param + \"){\\n\" + \"\\n} \\n\";\r\n                }\r\n            }\r\n            var m = getdefaulteventname(),\r\n                code = code ? code : \"\",\r\n                replaceStr = \"function {0}{1}\",\r\n                regex = new RegExp(\"function\\\\s+\" + eventName + \"\\\\s*?\\\\(\");\r\n            if (eventName && code.search(regex) == -1) {\r\n                var e = m.trim().replace(\"function\", \"\"),\r\n                    i = String.format(replaceStr, eventName, e);\r\n                code += (code ? \"\\n\\n\" : \"\") + i\r\n            }\r\n            aceWin.script = code;\r\n            aceWin.val = code;\r\n            aceWin.show();\r\n            //进度提示\r\n            var myMask = new Ext.LoadMask(aceWin.el, {\r\n                msg: \"数据加载中,请稍后...\",\r\n                msgCls: 'z-index:10000;'\r\n            });\r\n            myMask.show();\r\n            aceWin.loading = myMask;\r\n            //  aceWin.update(\"<iframe  id='iframe_page' src='\" + vmd.virtualPath + vmd.vmdCodePath + \"?\" + Date.parse(new Date()) + \"' width=600 height=900 frameborder=0  ></iframe>\")\r\n            var scriptArr = code.split(\"\\n\"),\r\n                rowIndex = null;\r\n            Ext.each(scriptArr,\r\n                function(o, p) {\r\n                    if (o.search(regex) != -1) {\r\n                        rowIndex = p + 2;\r\n                        return false\r\n                    }\r\n                });\r\n        }, 50)\r\n\r\n    }\r\n})\r\n\r\n// layout\r\n// grid\r\n// form\r\n// navigation\r\n// operation\r\n// statistics\r\n\r\n/**\r\n * Created by Administrator on 2018/6/6.\r\n * 整个报表信息\r\n */\r\nfunction reportInfos() {\r\n    var that = this;\r\n\r\n    //字体信息\r\n    this.fontsInfo = {};\r\n    this.fontLength = 0;\r\n    // 边框信息\r\n    this.bordersInfo = {};\r\n    this.borderLength = 0;\r\n    //数字类型\r\n    this.numberInfos = {};\r\n    this.numberLength = 0;\r\n    //\r\n    this.treeFieldInfos = {};\r\n    this.treeLength = 0;\r\n    //\r\n    this.alignInfos = {};\r\n    this.alignLength = 0;\r\n    this.cellTypeInfos = {};\r\n    this.cellTypeLength = 0;\r\n    //行信息\r\n    this.rowsInfo = {};\r\n    this.dataSetsInfo = {};\r\n    this.datasets = [];\r\n    this.rownum = 1;\r\n    this.colnum = 1;\r\n    this.eventInfo = {};\r\n    this.eventInfoLength = 0;\r\n    this.menuInfo = {};\r\n    this.menuInfoLength = 0;\r\n    this.linkInfo = {};\r\n    this.linkInfoLength = 0;\r\n    this.approvalInfo = {};\r\n    this.approvalInfoLength = 0;\r\n\r\n    // 获取事件对应的id\r\n    this.getEventsID = function(info) {\r\n        // \r\n        var id = this.eventInfoLength;\r\n        var isIn = false;\r\n        if (this.eventInfoLength == 0) {\r\n            id = id + 1;\r\n            this.eventInfo[id] = info;\r\n            this.eventInfoLength += 1;\r\n        } else {\r\n            for (var key in this.eventInfo) {\r\n                var f = this.eventInfo[key];\r\n                if (\r\n                    info.click == f.click &&\r\n                    info.dbclick == f.dbclick &&\r\n                    info.change == f.change &&\r\n                    info.approval == f.approval &&\r\n                    info.rightClick == f.rightClick &&\r\n                    info.beforeClick == f.beforeClick\r\n                ) {\r\n                    id = key;\r\n                    isIn = true;\r\n                    break;\r\n                }\r\n            }\r\n            if (!isIn) {\r\n                id = id + 1;\r\n                this.eventInfo[id] = info;\r\n                this.eventInfoLength += 1;\r\n            }\r\n        }\r\n        return id;\r\n    };// 获取事件对应的id\r\n    this.getHeadEventsID = function(info) {\r\n        // \r\n        var id = this.eventInfoLength;\r\n        var isIn = false;\r\n        if (this.eventInfoLength == 0) {\r\n            id = id + 1;\r\n            this.eventInfo[id] = info;\r\n            this.eventInfoLength += 1;\r\n        } else {\r\n            for (var key in this.eventInfo) {\r\n                var f = this.eventInfo[key];\r\n                if (\r\n                    info.change == f.allChange\r\n                ) {\r\n                    id = key;\r\n                    isIn = true;\r\n                    break;\r\n                }\r\n            }\r\n            if (!isIn) {\r\n                id = id + 1;\r\n                this.eventInfo[id] = info;\r\n                this.eventInfoLength += 1;\r\n            }\r\n        }\r\n        return id;\r\n    };\r\n    this.getMenusID = function(info) {\r\n\r\n        var id = this.menuInfoLength;\r\n        var isIn = false;\r\n        if (this.menuInfoLength == 0) {\r\n            id = id + 1;\r\n            this.menuInfo[id] = info;\r\n            this.menuInfoLength += 1;\r\n        } else {\r\n            for (var key in this.menuInfo) {\r\n                var f = this.menuInfo[key];\r\n                if (info.id == f.id && info.param == f.param &&\r\n                    info.source == f.source && info.sets == f.sets &&\r\n                    info.choose == f.choose && info.cmbMenuID == f.cmbMenuID &&\r\n                    info.pid == f.pid && info.text == f.text) {\r\n                    id = key;\r\n                    isIn = true;\r\n                    break;\r\n                }\r\n            }\r\n            if (!isIn) {\r\n                id = id + 1;\r\n                this.menuInfo[id] = info;\r\n                this.menuInfoLength += 1;\r\n            }\r\n        }\r\n        return id;\r\n    };\r\n    this.getLinksID = function(info) {\r\n        // \r\n        var id = this.linkInfoLength;\r\n        var isIn = false;\r\n        if (this.linkInfoLength == 0) {\r\n            id = id + 1;\r\n            this.linkInfo[id] = info;\r\n            this.linkInfoLength += 1;\r\n        } else {\r\n            for (var key in this.linkInfo) {\r\n                var f = this.linkInfo[key];\r\n                if (info.param == f.param) {\r\n                    id = key;\r\n                    isIn = true;\r\n                    break;\r\n                }\r\n            }\r\n            if (!isIn) {\r\n                id = id + 1;\r\n                this.linkInfo[id] = info;\r\n                this.linkInfoLength += 1;\r\n            }\r\n        }\r\n        return id;\r\n    };\r\n    // 判断数据集是否已经添加\r\n    this.inDsArray = function(item) {\r\n        var index = -1;\r\n        if (this.datasets.length > 0) {\r\n            for (var i = 0; i < this.datasets.length; i++) {\r\n                if (this.datasets[i] == item) {\r\n                    return i;\r\n                }\r\n            }\r\n        }\r\n        return index;\r\n    };\r\n    // 获取字体信息对应的id\r\n    this.getFontInfoID = function(info) {\r\n        // \r\n        var id = this.fontLength;\r\n        var isIn = false;\r\n        if (this.fontLength == 0) {\r\n            id = id + 1;\r\n            this.fontsInfo[id] = info;\r\n            this.fontLength += 1;\r\n        } else {\r\n            for (var key in this.fontsInfo) {\r\n                var f = this.fontsInfo[key];\r\n                if (f.name == info.name && f.size == info.size && f.fontSize == info.fontSize && f.weight == info.weight && f.italic == info.italic && f.unline == info.unline && f.color == info.color) {\r\n                    id = key;\r\n                    isIn = true;\r\n                    break;\r\n                }\r\n            }\r\n            if (!isIn) {\r\n                id = id + 1;\r\n                this.fontsInfo[id] = info;\r\n                this.fontLength += 1;\r\n            }\r\n        }\r\n        return id;\r\n    };\r\n    // 获取边框信息对应的id\r\n    this.getBorderInfoID = function(info) {\r\n        var id = this.borderLength;\r\n        var isIn = false;\r\n        if (this.borderLength == 0) {\r\n            id = id + 1;\r\n            this.bordersInfo[id] = info;\r\n            this.borderLength += 1;\r\n        } else {\r\n            for (var key in this.bordersInfo) {\r\n                var f = this.bordersInfo[key];\r\n                if (f.top == info.top && f.bottom == info.bottom && f.left == info.left && f.right == info.right) {\r\n                    id = key;\r\n                    isIn = true;\r\n                    break;\r\n                }\r\n            }\r\n            if (!isIn) {\r\n                id = id + 1;\r\n                this.bordersInfo[id] = info;\r\n                this.borderLength += 1;\r\n            }\r\n        }\r\n        return id;\r\n    }\r\n    // 获取数字信息对应的id\r\n    this.getNumberInfoID = function(info) {\r\n        var id = this.numberLength;\r\n        var isIn = false;\r\n        if (this.numberLength == 0) {\r\n            id = id + 1;\r\n            this.numberInfos[id] = info;\r\n            this.numberLength += 1;\r\n        } else {\r\n            for (var key in this.numberInfos) {\r\n                var f = this.numberInfos[key];\r\n                if (f.dateformat == info.dateformat &&\r\n                    f.type == info.type &&\r\n                    f.separator == info.separator &&\r\n                    f.zerovisible == info.zerovisible &&\r\n                    f.decimal == info.decimal &&\r\n                    f.numbering == info.numbering) {\r\n                    id = key;\r\n                    isIn = true;\r\n                    break;\r\n                }\r\n            }\r\n            if (!isIn) {\r\n                id = id + 1;\r\n                this.numberInfos[id] = info;\r\n                this.numberLength += 1;\r\n            }\r\n        }\r\n        return id;\r\n    }\r\n    // treeInfos\r\n    // 获取树信息对应的id\r\n    this.getTreeInfoID = function(info) {\r\n        var id = this.treeLength;\r\n        var isIn = false;\r\n        if (this.treeFieldInfos == 0) {\r\n            id = id + 1;\r\n            this.treeFieldInfos[id] = info;\r\n            this.treeLength += 1;\r\n        } else {\r\n            for (var key in this.treeFieldInfos) {\r\n                var f = this.treeFieldInfos[key];\r\n                if (f.dsname == info.dsname && f.id == info.id && f.parentid == info.parentid && f.showfield == info.showfield && f.cell == info.cell && f.treetype == info.treetype) {\r\n                    id = key;\r\n                    isIn = true;\r\n                    break;\r\n                }\r\n            }\r\n            if (!isIn) {\r\n                id = id + 1;\r\n                this.treeFieldInfos[id] = info;\r\n                this.treeLength += 1;\r\n            }\r\n        }\r\n        return id;\r\n    }\r\n    // 获取树信息对应的id\r\n    this.getAlignInfoID = function(info) {\r\n        var id = this.alignLength;\r\n        var isIn = false;\r\n        if (this.alignInfos == 0) {\r\n            id = id + 1;\r\n            this.alignInfos[id] = info;\r\n            this.alignLength += 1;\r\n        } else {\r\n            for (var key in this.alignInfos) {\r\n                var f = this.alignInfos[key];\r\n                if (f.halign == info.halign && f.valign == info.valign && f.textcontrol == info.textcontrol &&\r\n                    f.escapelabel == info.escapelabel && f.txtdirection == info.txtdirection && f.rotation == info.rotation &&\r\n                    f.singlerotation == info.singlerotation && f.padding == info.padding && f.autoenter == info.autoenter) {\r\n                    id = key;\r\n                    isIn = true;\r\n                    break;\r\n                }\r\n            }\r\n            if (!isIn) {\r\n                id = id + 1;\r\n                this.alignInfos[id] = info;\r\n                this.alignLength += 1;\r\n            }\r\n        }\r\n        return id;\r\n    }\r\n    // 获取树信息对应的id    celltypes\r\n    this.getCellTypeID = function(info) {\r\n        var id = this.cellTypeLength;\r\n        var isIn = false;\r\n        if (this.cellTypeInfos == 0) {\r\n            id = id + 1;\r\n            this.cellTypeInfos[id] = info;\r\n            this.cellTypeLength += 1;\r\n        } else {\r\n            for (var key in this.cellTypeInfos) {\r\n                var f = this.cellTypeInfos[key];\r\n                switch (info.type) {\r\n                    case \"Text\": // 文本控件\r\n                        if (this.cellTypeText(f, info)) {\r\n                            id = key;\r\n                            isIn = true;\r\n                        }\r\n                        break;\r\n                    case \"id\":\r\n                        if (this.cellTypeID(f, info)) {\r\n                            id = key;\r\n                            isIn = true;\r\n                        }\r\n                        break;\r\n                    case \"qtb\":\r\n                        if (this.cellTypeNested(f, info)) {\r\n                            id = key;\r\n                            isIn = true;\r\n                        }\r\n                        break;\r\n                    case \"Approval\": //审批组件\r\n                        if (this.cellTypeApproval(f, info)) {\r\n                            id = key;\r\n                            isIn = true;\r\n                        }\r\n                        break;\r\n                    case \"Combox\": //下拉框组件\r\n                        if (this.cellTypeCombo(f, info)) {\r\n                            id = key;\r\n                            isIn = true;\r\n                        }\r\n                        break;\r\n                    case \"RadioGroup\": // 单选按钮\r\n                        if (this.cellTypeRadioGroup(f, info)) {\r\n                            id = key;\r\n                            isIn = true;\r\n                        }\r\n                        break;\r\n                    case \"Date\": //日期控件\r\n                        if (this.cellTypeDate(f, info)) {\r\n                            id = key;\r\n                            isIn = true;\r\n                        }\r\n                        break;\r\n                        // case \"DateTime\": //时间组件\r\n                        //     if (this.cellTypeTime(f, info)) {\r\n                        //         id = key;\r\n                        //         isIn = true;\r\n                        //     }\r\n                        break;\r\n                    case \"Number\": //数字\r\n                        if (this.cellTypeNumber(f, info)) {\r\n                            id = key;\r\n                            isIn = true;\r\n                        }\r\n                        break;\r\n                        // case \"CheckBoxGroup\": //复选框组\r\n                        //     if (this.xxxxxxxxxxxxxx(f, info)) {\r\n                        //         id = key;\r\n                        //         isIn = true;\r\n                        //     }\r\n                        //     break;\r\n                    case \"CheckBox\": //复选框\r\n                        if (this.cellTypeCheckBox(f, info)) {\r\n                            id = key;\r\n                            isIn = true;\r\n                        }\r\n                        break;\r\n                    case \"RichEdit\": //富文本\r\n                        if (this.cellTypeRichEdit(f, info)) {\r\n                            id = key;\r\n                            isIn = true;\r\n                        }\r\n                        break;\r\n                        // case \"List\": //下拉列表\r\n                        // case \"vmdgrid\":\r\n                        //     if (this.cellTypeList(f, info)) {\r\n                        //         id = key;\r\n                        //         isIn = true;\r\n                        //     }\r\n                        //     break;\r\n                    case \"Button\": //按钮\r\n                        if (this.cellTypeButton(f, info)) {\r\n                            id = key;\r\n                            isIn = true;\r\n                        }\r\n                        break;\r\n                        // case \"ButtonGroup\": //\r\n                        //     if (this.cellTypeApproval(f, info)) {\r\n                        //         id = key;\r\n                        //         isIn = true;\r\n                        //     }\r\n                        // break;\r\n                    case \"HyperLink\": //超链接\r\n                        if (this.cellTypeHyperLink(f, info)) {\r\n                            id = key;\r\n                            isIn = true;\r\n                        }\r\n                        break;\r\n                    case \"menu\": //右键菜单\r\n                        if (this.cellTypeMenu(f, info)) {\r\n                            id = key;\r\n                            isIn = true;\r\n                        }\r\n                        break;\r\n                    case \"UpLoad\": //上传组件\r\n                        if (that.cellTypeUpload(f, info)) {\r\n                            id = key;\r\n                            isIn = true;\r\n                        }\r\n                        break;\r\n                        // case \"Tree\": //树形组件\r\n                        //     if (this.cellTypeTree(f, info)) {\r\n                        //         id = key;\r\n                        //         isIn = true;\r\n                        //     }\r\n                        //     break;\r\n                    case \"order\": //序号\r\n                        if (this.cellTypeNo(f, info)) {\r\n                            id = key;\r\n                            isIn = true;\r\n                        }\r\n                        break;\r\n                    case \"img\": //图片组件\r\n                        if (this.cellTypeImg(f, info)) {\r\n                            id = key;\r\n                            isIn = true;\r\n                        }\r\n                        break;\r\n                    case \"guid\": //GUID\r\n                        if (this.cellTypeGuid(f, info)) {\r\n                            id = key;\r\n                            isIn = true;\r\n                        }\r\n                        break;\r\n                    case \"dropdowntree\": //下拉树\r\n                        if (this.cellTypeDropDownTree(f, info)) {\r\n                            id = key;\r\n                            isIn = true;\r\n                        }\r\n                        break;\r\n                    case \"PassWord\": //密码\r\n                        if (this.cellTypePassword(f, info)) {\r\n                            id = key;\r\n                            isIn = true;\r\n                        }\r\n                        break;\r\n                        // case \"progressbar\": //进度条\r\n                        //     if (this.cellTypeProgressBar(f, info)) {\r\n                        //         id = key;\r\n                        //         isIn = true;\r\n                        //     }\r\n                        //     break;\r\n                    case 'vmdgrid':\r\n                        if (this.cellTypeGrid(f, info)) {\r\n                            id = key;\r\n                            isIn = true;\r\n                        }\r\n                        break;\r\n                }\r\n            }\r\n            if (!isIn) {\r\n                id = id + 1;\r\n                this.cellTypeInfos[id] = info;\r\n                this.cellTypeLength += 1;\r\n            }\r\n        }\r\n        return id;\r\n    }\r\n    // this.cellTypeDefault = function(f, info) {\r\n    //     return true;\r\n    // }\r\n    this.cellTypeDropDownTree = function(f, info) {\r\n        if (f.type == info.type &&\r\n            f.width == info.width &&\r\n            f.selectableType == info.selectableType &&\r\n            f.bindsource.tablename == info.bindsource.tablename &&\r\n            f.bindsource.valuecolumn == info.bindsource.valuecolumn &&\r\n            f.bindsource.showcolumn == info.bindsource.showcolumn &&\r\n            f.bindsource.parentcolumn == info.bindsource.parentcolumn &&\r\n            f.bindsource.nodecolumn == info.bindsource.nodecolumn &&\r\n            f.bindsource.rootvalue == info.bindsource.rootvalue &&\r\n            f.bindsource.roottext == info.bindsource.roottext) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    this.cellTypeNo = function(f, info) {\r\n        if (f.type == info.type &&\r\n            f.isprint == info.isprint &&\r\n            f.isallownull == info.isallownull &&\r\n            f.emptydisplay == info.emptydisplay) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    this.cellTypeText = function(f, info) {\r\n        if (f.regexptip == info.regexptip &&\r\n            f.charexp == info.charexp &&\r\n            f.fillrule == info.fillrule &&\r\n            f.ismultiline == info.ismultiline &&\r\n            f.ischar == info.ischar &&\r\n            f.isenableedit == info.isenableedit &&\r\n            f.isallownull == info.isallownull &&\r\n            f.isprint == info.isprint &&\r\n            f.emptydisplay == info.emptydisplay &&\r\n            f.minlen == info.minlen &&\r\n            f.maxlen == info.maxlen &&\r\n            f.tellformart == info.tellformart) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    this.cellTypeHyperLink = function(f, info) {\r\n        if (f.isEnableEdit == info.isEnableEdit && f.url == info.url &&\r\n            f.isprint == info.isprint && f.isAllowNull == info.isAllowNull && f.EmptyDisplay == info.EmptyDisplay) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    this.cellTypeApproval = function(f, info) {\r\n        if (f && f.Items) {\r\n            var f0 = f.Items[0];\r\n            var f1 = f.Items[1];\r\n            var f2 = f.Items[2];\r\n            var f3 = f.Items[3];\r\n            var f4 = f.Items[4];\r\n            var f5 = f.Items[5];\r\n            var f6 = f.Items[6];\r\n            var f7 = f.Items[7];\r\n\r\n\r\n            if (info && info.Items) {\r\n                var i0 = info.Items[0];\r\n                var i1 = info.Items[1];\r\n                var i2 = info.Items[2];\r\n                var i3 = info.Items[3];\r\n                var i4 = info.Items[4];\r\n                var i5 = info.Items[5];\r\n                var i6 = info.Items[6];\r\n                var i7 = info.Items[7];\r\n                if (info.isenableedit == f.isenableedit && info.isprint == f.isprint && i0.fontcolor == f0.fontcolor && i0.fontname == f0.fontname && i0.fontsize == f0.fontsize && i0.height == f0.height && i0.isshow == f0.isshow && i0.italic == f0.italic && i0.labelValue == f0.labelValue && i0.mark == f0.mark && i0.type == f0.type && i0.underline == f0.underline && i0.value == f0.value && i0.width == f0.width && i0.x == f0.x && i0.y == f0.y && i1.fontcolor == f1.fontcolor && i1.fontname == f1.fontname && i1.fontsize == f1.fontsize && i1.height == f1.height && i1.isshow == f1.isshow && i1.italic == f1.italic && i1.labelValue == f1.labelValue && i1.mark == f1.mark && i1.type == f1.type && i1.underline == f1.underline && i1.value == f1.value && i1.width == f1.width && i1.x == f1.x && i1.y == f1.y && i2.fontcolor == f2.fontcolor && i2.fontname == f2.fontname && i2.fontsize == f2.fontsize && i2.height == f2.height && i2.isshow == f2.isshow && i2.italic == f2.italic && i2.labelValue == f2.labelValue && i2.mark == f2.mark && i2.src == f2.src && i2.type == f2.type && i2.underline == f2.underline && i2.width == f2.width && i2.x == f2.x && i2.y == f2.y && i3.fontcolor == f3.fontcolor && i3.fontname == f3.fontname && i3.fontsize == f3.fontsize && i3.height == f3.height && i3.isshow == f3.isshow && i3.italic == f3.italic && i3.labelValue == f3.labelValue && i3.mark == f3.mark && i3.namepicture == f3.namepicture && i3.type == f3.type && i3.underline == f3.underline && i3.value == f3.value && i3.width == f3.width && i3.x == f3.x && i3.y == f3.y && i4.dateformat == f4.dateformat && i4.fontcolor == f4.fontcolor && i4.fontname == f4.fontname && i4.fontsize == f4.fontsize && i4.height == f4.height && i4.isshow == f4.isshow && i4.italic == f4.italic && i4.labelValue == f4.labelValue && i4.mark == f4.mark && i4.type == f4.type && i4.underline == f4.underline && i4.value == f4.value && i4.width == f4.width && i4.x == f4.x && i4.y == f4.y && i5.fontcolor == f5.fontcolor && i5.fontname == f5.fontname && i5.fontsize == f5.fontsize && i5.height == f5.height && i5.isshow == f5.isshow && i5.italic == f5.italic && i5.labelValue == f5.labelValue && i5.mark == f5.mark && i5.type == f5.type && i5.underline == f5.underline && i5.value == f5.value && i5.width == f5.width && i5.x == f5.x && i5.y == f5.y && i6.fontcolor == f6.fontcolor && i6.fontname == f6.fontname && i6.fontsize == f6.fontsize && i6.height == f6.height && i6.isshow == f6.isshow && i6.italic == f6.italic && i6.labelValue == f6.labelValue && i6.mark == f6.mark && i6.type == f6.type && i6.underline == f6.underline && i6.value == f6.value && i6.width == f6.width && i6.x == f6.x && i6.y == f6.y && i7.fontcolor == f7.fontcolor && i7.fontname == f7.fontname && i7.fontsize == f7.fontsize && i7.height == f7.height && i7.isshow == f7.isshow && i7.italic == f7.italic && i7.labelValue == f7.labelValue && i7.mark == f7.mark && i7.type == f7.type && i7.underline == f7.underline && i7.value == f7.value && i7.width == f7.width && i7.x == f7.x && i7.y == f7.y) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    this.cellTypeMenu = function(f, info) {\r\n        if (f.menutype == info.menutype && f.menuname == info.menuname) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    this.cellTypeCombo = function(f, info) {\r\n        if (f.clicktrigger == info.clicktrigger &&\r\n            f.emptydisplay == info.emptydisplay &&\r\n            f.isallownull == info.isallownull &&\r\n            f.isenableedit == info.isenableedit &&\r\n            f.ismulti == info.ismulti &&\r\n            f.isprint == info.isprint &&\r\n            f.type == info.type &&\r\n            f.width == info.width &&\r\n            f.bindsource.condition == info.bindsource.condition &&\r\n            f.bindsource.showcolumn == info.bindsource.showcolumn &&\r\n            f.bindsource.tablename == info.bindsource.tablename &&\r\n            f.bindsource.valuecolumn == info.bindsource.valuecolumn &&\r\n            f.noValueClear == info.noValueClear) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    this.cellTypeRadioGroup = function(f, info) {\r\n        if (f.isenableedit == info.isenableedit &&\r\n            f.isprint == info.isprint &&\r\n            f.autolayout == info.autolayout &&\r\n            f.colcount == info.colcount &&\r\n            f.linespace == info.linespace &&\r\n            f.displaystyle == info.displaystyle) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    this.cellTypeDate = function(f, info) {\r\n        if (f.isenableedit == info.isenableedit &&\r\n            f.isdefultdate == info.isdefultdate &&\r\n            f.format == info.format &&\r\n            f.isprint == info.isprint &&\r\n            f.isallownull == info.isallownull &&\r\n            f.emptydisplay == info.emptydisplay) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    this.cellTypeNumber = function(f, info) {\r\n        if (f.isenableedit == info.isenableedit &&\r\n            f.isallownull == info.isallownull &&\r\n            f.isdecimal == info.isdecimal &&\r\n            f.isnegative == info.isnegative &&\r\n            f.isprint == info.isprint &&\r\n            f.decimalnumbers == info.decimalnumbers &&\r\n            f.emptydisplay == info.emptydisplay &&\r\n            f.islimit == info.islimit &&\r\n            f.maxvalue == info.maxvalue &&\r\n            f.minvalue == info.minvalue &&\r\n            f.nullShowZero == info.nullShowZero) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    this.cellTypeCheckBox = function(f, info) {\r\n        if (f.startchar == info.startchar &&\r\n            f.endchar == info.endchar &&\r\n            f.isenableedit == info.isenableedit &&\r\n            f.isprint == info.isprint &&\r\n            f.isallselect == info.isallselect &&\r\n            f.isother == info.isother &&\r\n            f.multigroup == info.multigroup &&\r\n            f.autolayout == info.autolayout &&\r\n            f.linespace == info.linespace &&\r\n            f.displaystyle == info.displaystyle &&\r\n            f.isallownull == info.isallownull &&\r\n            f.emptydisplay == info.emptydisplay &&\r\n            f.displayLabel == info.displayLabel\r\n        ) {\r\n            return true\r\n        }\r\n        return false\r\n    }\r\n\r\n    this.cellTypeRichEdit = function(f, info) {\r\n        if (f.firstindent == info.firstindent &&\r\n            f.isenableedit == info.isenableedit &&\r\n            f.isprint == info.isprint &&\r\n            f.isallownull == info.isallownull &&\r\n            f.emptydisplay == info.emptydisplay) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    // this.cellTypeList = function(f, info) {\r\n    //     if (f.isenableedit == info.isenableedit &&\r\n    //         f.isprint == info.isprint &&\r\n    //         f.clicktrigger == info.clicktrigger &&\r\n    //         f.ismulti == info.ismulti &&\r\n    //         f.width == info.width &&\r\n    //         f.isallownull == info.isallownull &&\r\n    //         f.emptydisplay == info.emptydisplay) {\r\n    //         return true;\r\n    //     }\r\n    //     return false;\r\n    // }\r\n\r\n    this.cellTypeID = function(f, info) {\r\n        if (f.type == info.type &&\r\n            f.length == info.length &&\r\n            f.isallownull == info.isallownull &&\r\n            f.emptydisplay == info.emptydisplay) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    this.cellTypeGuid = function(f, info) {\r\n        if (f.type == info.type &&\r\n            f.isallownull == info.isallownull &&\r\n            f.emptydisplay == info.emptydisplay) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    this.cellTypePassword = function(f, info) {\r\n        if (f.type == info.type &&\r\n            f.isenableedit == info.isenableedit &&\r\n            f.isprint == info.isprint &&\r\n            f.isallownull == info.isallownull &&\r\n            f.emptydisplay == info.emptydisplay) {\r\n            return true\r\n        }\r\n        return false\r\n    }\r\n\r\n    this.cellTypeGrid = function(f, info) {\r\n        debugger\r\n        if (\r\n            (f.bindsource && JSON.stringify(f.bindsource.multicolumns) == JSON.stringify(info.bindsource.multicolumns)) &&\r\n            (f.bindsource && f.bindsource.showcolumn == info.bindsource.showcolumn) &&\r\n            (f.bindsource && f.bindsource.tablename == info.bindsource.tablename) &&\r\n            (f.bindsource && f.bindsource.valuecolumn == info.bindsource.valuecolumn) &&\r\n            f.emptydisplay == info.emptydisplay &&\r\n            f.height == info.height &&\r\n            f.isallownull == info.isallownull &&\r\n            f.isenableedit == info.isenableedit &&\r\n            f.ismulti == info.ismulti &&\r\n            f.type == info.type &&\r\n            f.width == info.width\r\n        ) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\n\r\nthis.cellTypeUpload = function(f, info) {\r\n    if (f.type == info.type &&\r\n        f.filetype == info.filetype &&\r\n        f.uploadnumer == info.uploadnumer &&\r\n        f.colexp == info.colexp &&\r\n        f.pageexp == info.pageexp &&\r\n        f.add == info.add &&\r\n        f.delete == info.delete &&\r\n        f.enableadd == info.enableadd &&\r\n        f.enabledelete == info.enabledelete &&\r\n        f.addeventid == info.addeventid &&\r\n        f.deleteeventid == info.deleteeventid &&\r\n        f.showmode == info.showmode &&\r\n        f.wordMode == info.wordMode &&\r\n        f.bindsource.docid == info.bindsource.docid &&\r\n        f.bindsource.filename == info.bindsource.filename &&\r\n        f.bindsource.filepath == info.bindsource.filepath &&\r\n        f.bindsource.tablename == info.bindsource.tablename &&\r\n        f.bindsource.filesize == info.bindsource.filesize &&\r\n        f.bindsource.fileext == info.bindsource.fileext) {\r\n        return true\r\n    }\r\n    return false\r\n}\r\n\r\nthis.cellTypeNested = function(f, info) {\r\n    if (f.type == info.type &&\r\n        f.subrptpath == info.subrptpath &&\r\n        f.subrpttype == info.subrpttype &&\r\n        f.subrptname == info.subrptname &&\r\n        f.subrptshowmode == info.subrptshowmode) {\r\n        return true\r\n    }\r\n    return false;\r\n}\r\n\r\nthis.cellTypeButton = function(f, info) {\r\n    if (f.type == info.type &&\r\n        f.activeCells == info.activeCells &&\r\n        f.buttontype == info.buttontype &&\r\n        f.carrycol == info.carrycol &&\r\n        f.insertrowtype == info.insertrowtype &&\r\n        f.isdeletedata == info.isdeletedata &&\r\n        f.name == info.name &&\r\n        f.status == info.status) {\r\n        return true;\r\n    }\r\n    return false\r\n}","vmdinterface":"{\"components\":[{\"cid\":\"vmduxprops\",\"layoutConfig\":{},\"userConfig\":{}},{\"cid\":\"vmduxmethods\",\"id\":\"方法\",\"layoutConfig\":{},\"userConfig\":{},\"cn\":[{\"cid\":\"uxmethod\",\"id\":\"setValue\",\"layoutConfig\":{},\"userConfig\":{\"id\":\"setValue\",\"zhname\":\"\",\"bindCmp\":\"\",\"bindValue\":\"\",\"isPublic\":\"on\",\"desc\":\"\",\"uxcid\":\"\",\"params\":\"\",\"code\":\"\\nsetInfo()\",\"returnType\":\"\"}},{\"cid\":\"uxmethod\",\"id\":\"serialize\",\"layoutConfig\":{},\"userConfig\":{\"id\":\"serialize\",\"zhname\":\"\",\"bindCmp\":\"\",\"bindValue\":\"\",\"isPublic\":\"on\",\"desc\":\"\",\"uxcid\":\"\",\"params\":\"\",\"code\":\"\\nvar json =page.controller.serialize();\\nreturn json;\",\"returnType\":\"\"}},{\"cid\":\"uxmethod\",\"id\":\"save\",\"layoutConfig\":{},\"userConfig\":{\"id\":\"save\",\"zhname\":\"\",\"bindCmp\":\"\",\"bindValue\":\"\",\"isPublic\":\"on\",\"desc\":\"\",\"uxcid\":\"\",\"params\":\"activeCmp\",\"code\":\"save(activeCmp)\",\"returnType\":\"\"}}]},{\"cid\":\"vmduxevents\",\"id\":\"事件\",\"layoutConfig\":{},\"userConfig\":{}}]}","vmdresource":"{\"components\":[{\"cid\":\"vmdrescsss\",\"layoutConfig\":{},\"userConfig\":{}},{\"cid\":\"vmdresjss\",\"layoutConfig\":{},\"userConfig\":{},\"cn\":[{\"cid\":\"resjs\",\"id\":\"controller.js\",\"layoutConfig\":{},\"userConfig\":{}}]},{\"cid\":\"vmdresimgs\",\"layoutConfig\":{},\"userConfig\":{}}]}"}