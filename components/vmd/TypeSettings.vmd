{"vmdversion":"vmd2.0.6.200119","vmdlayout":"{\"components\":[{\"cid\":\"uxpanel\",\"id\":\"TypeSettings\",\"layoutConfig\":{},\"userConfig\":{\"layout\":\"fit\",\"header\":false,\"width\":450,\"height\":640,\"beforerender\":\"TypeSettings_beforerender\",\"afterrender\":\"TypeSettings_afterrender\"},\"cn\":[{\"cid\":\"panel\",\"id\":\"panel\",\"layoutConfig\":{},\"userConfig\":{\"x\":110,\"y\":110,\"border\":false,\"header\":false,\"layout\":\"border\"},\"cn\":[{\"cid\":\"panel\",\"id\":\"panel1\",\"layoutConfig\":{},\"userConfig\":{\"region\":\"center\",\"border\":false,\"header\":false,\"layout\":\"border\"},\"cn\":[{\"cid\":\"panel\",\"id\":\"comps\",\"layoutConfig\":{},\"userConfig\":{\"region\":\"center\",\"layout\":\"anchor\",\"border\":false,\"header\":false,\"id\":\"comps\",\"height\":555,\"cls\":\"bindtype\"},\"cn\":[{\"cid\":\"panel\",\"id\":\"textPanel\",\"layoutConfig\":{},\"userConfig\":{\"id\":\"textPanel\",\"layout\":\"fit\",\"border\":false,\"header\":false,\"hidden\":true,\"anchor\":\"100% 100%\"},\"cn\":[{\"cid\":\"vmd.ux.InputTextProperty\",\"id\":\"hwInputTextProperty\",\"layoutConfig\":{},\"userConfig\":{\"width\":\"\"}}]},{\"cid\":\"panel\",\"id\":\"comboPanel\",\"layoutConfig\":{},\"userConfig\":{\"id\":\"comboPanel\",\"anchor\":\"100% 100%\",\"border\":false,\"header\":false,\"layout\":\"fit\",\"hidden\":true},\"cn\":[{\"cid\":\"vmd.ux.InputComboProperty\",\"id\":\"hwInputComboProperty\",\"layoutConfig\":{},\"userConfig\":{\"hidden\":false,\"anchor\":\"100% 100%\"}}]},{\"cid\":\"panel\",\"id\":\"numberPanel\",\"layoutConfig\":{},\"userConfig\":{\"id\":\"numberPanel\",\"anchor\":\"100% 100%\",\"border\":false,\"header\":false,\"layout\":\"fit\",\"hidden\":true},\"cn\":[{\"cid\":\"vmd.ux.InputNumberProperty\",\"id\":\"hwInputNumberProperty\",\"layoutConfig\":{},\"userConfig\":{\"hidden\":false}}]},{\"cid\":\"panel\",\"id\":\"checkboxPanel\",\"layoutConfig\":{},\"userConfig\":{\"id\":\"checkboxPanel\",\"border\":false,\"header\":false,\"layout\":\"fit\",\"anchor\":\"100% 100%\",\"hidden\":true}},{\"cid\":\"panel\",\"id\":\"comboTreePanel\",\"layoutConfig\":{},\"userConfig\":{\"id\":\"comboTreePanel\",\"border\":false,\"header\":false,\"layout\":\"fit\",\"anchor\":\"100% 100%\",\"hidden\":true},\"cn\":[{\"cid\":\"vmd.ux.InputComboTreeProperty\",\"id\":\"hwInputComboTreeProperty\",\"layoutConfig\":{},\"userConfig\":{\"hidden\":false}}]},{\"cid\":\"panel\",\"id\":\"radioButtonPanel\",\"layoutConfig\":{},\"userConfig\":{\"id\":\"radioButtonPanel\",\"border\":false,\"header\":false,\"layout\":\"fit\",\"anchor\":\"100% 100%\",\"hidden\":true},\"cn\":[{\"cid\":\"vmd.ux.InputRadioButtonProperty\",\"id\":\"hwInputRadioButtonProperty\",\"layoutConfig\":{},\"userConfig\":{\"hidden\":false}}]},{\"cid\":\"panel\",\"id\":\"datePanel\",\"layoutConfig\":{},\"userConfig\":{\"id\":\"datePanel\",\"border\":false,\"header\":false,\"layout\":\"fit\",\"anchor\":\"100% 100%\",\"hidden\":true},\"cn\":[{\"cid\":\"vmd.ux.InputDateProperty\",\"id\":\"hwInputDateProperty\",\"layoutConfig\":{},\"userConfig\":{\"hidden\":false}}]},{\"cid\":\"panel\",\"id\":\"checkBoxPanel\",\"layoutConfig\":{},\"userConfig\":{\"id\":\"checkBoxPanel\",\"border\":false,\"header\":false,\"layout\":\"fit\",\"anchor\":\"100% 100%\",\"hidden\":true},\"cn\":[{\"cid\":\"vmd.ux.InputCheckBoxProperty\",\"id\":\"hwInputCheckBoxProperty\",\"layoutConfig\":{},\"userConfig\":{\"hidden\":false}}]},{\"cid\":\"panel\",\"id\":\"richTextPanel\",\"layoutConfig\":{},\"userConfig\":{\"id\":\"richTextPanel\",\"border\":false,\"header\":false,\"layout\":\"fit\",\"anchor\":\"100% 100%\",\"hidden\":true},\"cn\":[{\"cid\":\"vmd.ux.InputRichTextProperty\",\"id\":\"hwInputRichTextProperty\",\"layoutConfig\":{},\"userConfig\":{\"hidden\":false}}]},{\"cid\":\"panel\",\"id\":\"comboGridPanel\",\"layoutConfig\":{},\"userConfig\":{\"id\":\"comboGridPanel\",\"border\":false,\"header\":false,\"layout\":\"fit\",\"anchor\":\"100% 100%\",\"hidden\":true},\"cn\":[{\"cid\":\"vmd.ux.InputComboGridProperty\",\"id\":\"hwInputComboGridProperty\",\"layoutConfig\":{},\"userConfig\":{\"hidden\":false}}]}]},{\"cid\":\"panel\",\"id\":\"panel4\",\"layoutConfig\":{},\"userConfig\":{\"region\":\"north\",\"border\":false,\"header\":true,\"title\":\"属性设置\",\"height\":181,\"layout\":\"anchor\",\"padding\":\"0 0 0 5\"},\"cn\":[{\"cid\":\"container\",\"id\":\"div\",\"layoutConfig\":{},\"userConfig\":{\"anchor\":\"100% 20%\",\"layout\":\"border\",\"border\":false},\"cn\":[{\"cid\":\"container\",\"id\":\"div2\",\"layoutConfig\":{},\"userConfig\":{\"width\":87,\"region\":\"center\",\"border\":false,\"layout\":\"anchor\"},\"cn\":[{\"cid\":\"vmdComlist\",\"id\":\"editType\",\"layoutConfig\":{},\"userConfig\":{\"anchor\":\"-10\",\"id\":\"editType\",\"afterrender\":\"editType_afterrender\",\"selectChanged\":\"editType_selectChanged\",\"beforerender\":\"editType_beforerender\"}}]},{\"cid\":\"container\",\"id\":\"div3\",\"layoutConfig\":{\"align\":\"center\",\"pack\":\"center\"},\"userConfig\":{\"region\":\"west\",\"width\":62,\"border\":false,\"layout\":\"vbox\",\"height\":31},\"cn\":[{\"cid\":\"label\",\"id\":\"label\",\"layoutConfig\":{},\"userConfig\":{\"text\":\"编辑类型：\"}}]}]},{\"cid\":\"container\",\"id\":\"div1\",\"layoutConfig\":{},\"userConfig\":{\"anchor\":\"100% 20%\",\"layout\":\"border\",\"border\":false},\"cn\":[{\"cid\":\"container\",\"id\":\"div4\",\"layoutConfig\":{},\"userConfig\":{\"region\":\"center\",\"border\":false,\"layout\":\"anchor\"},\"cn\":[{\"cid\":\"textfield\",\"id\":\"dicLength\",\"layoutConfig\":{},\"userConfig\":{\"anchor\":\"-10\",\"id\":\"dicLength\",\"style\":\"border-bottom: none\",\"readOnly\":true}}]},{\"cid\":\"container\",\"id\":\"div5\",\"layoutConfig\":{\"align\":\"center\",\"pack\":\"center\"},\"userConfig\":{\"region\":\"west\",\"width\":63,\"border\":false,\"layout\":\"vbox\"},\"cn\":[{\"cid\":\"label\",\"id\":\"label1\",\"layoutConfig\":{},\"userConfig\":{\"text\":\"显示长度：\"}}]}]},{\"cid\":\"container\",\"id\":\"div9\",\"layoutConfig\":{},\"userConfig\":{\"anchor\":\"100% 20%\",\"border\":false,\"height\":30},\"cn\":[{\"cid\":\"checkbox\",\"id\":\"colHide\",\"layoutConfig\":{},\"userConfig\":{\"boxLabel\":\"列隐藏\",\"id\":\"colHide\"}}]},{\"cid\":\"container\",\"id\":\"div6\",\"layoutConfig\":{},\"userConfig\":{\"anchor\":\"100% 20%\",\"layout\":\"border\",\"border\":false},\"cn\":[{\"cid\":\"container\",\"id\":\"div7\",\"layoutConfig\":{},\"userConfig\":{\"region\":\"center\",\"border\":false,\"layout\":\"anchor\"},\"cn\":[{\"cid\":\"textfield\",\"id\":\"colWidth\",\"layoutConfig\":{},\"userConfig\":{\"anchor\":\"-10\",\"id\":\"colWidth\"}}]},{\"cid\":\"container\",\"id\":\"div8\",\"layoutConfig\":{\"align\":\"left\",\"pack\":\"center\"},\"userConfig\":{\"region\":\"west\",\"width\":40,\"border\":false,\"layout\":\"vbox\",\"height\":22},\"cn\":[{\"cid\":\"label\",\"id\":\"label2\",\"layoutConfig\":{},\"userConfig\":{\"text\":\"列宽：\",\"width\":37}}]}]},{\"cid\":\"container\",\"id\":\"hwDiv\",\"layoutConfig\":{},\"userConfig\":{\"anchor\":\"100% 19%\",\"border\":false,\"layout\":\"border\"},\"cn\":[{\"cid\":\"container\",\"id\":\"hwDiv1\",\"layoutConfig\":{\"align\":\"middle\"},\"userConfig\":{\"region\":\"west\",\"width\":40,\"border\":false,\"height\":22,\"layout\":\"hbox\"},\"cn\":[{\"cid\":\"label\",\"id\":\"hwLabel\",\"layoutConfig\":{},\"userConfig\":{\"text\":\"位置：\"}}]},{\"cid\":\"container\",\"id\":\"hwDiv2\",\"layoutConfig\":{\"align\":\"middle\"},\"userConfig\":{\"region\":\"center\",\"border\":false,\"layout\":\"hbox\"},\"cn\":[{\"cid\":\"radiogroup\",\"id\":\"txtAlign\",\"layoutConfig\":{},\"userConfig\":{\"width\":153,\"id\":\"txtAlign\"},\"cn\":[{\"cid\":\"radio\",\"id\":\"hwRadio\",\"layoutConfig\":{},\"userConfig\":{\"boxLabel\":\"居左\",\"fieldLabel\":\"\",\"inputValue\":\"1\",\"checked\":true}},{\"cid\":\"radio\",\"id\":\"hwRadio1\",\"layoutConfig\":{},\"userConfig\":{\"fieldLabel\":\"\",\"boxLabel\":\"居中\",\"inputValue\":\"3\"}},{\"cid\":\"radio\",\"id\":\"hwRadio2\",\"layoutConfig\":{},\"userConfig\":{\"width\":52,\"fieldLabel\":\"\",\"boxLabel\":\"居右\",\"inputValue\":\"2\"}}]},{\"cid\":\"checkbox\",\"id\":\"dicFirst\",\"layoutConfig\":{},\"userConfig\":{\"boxLabel\":\"数据字典优先\",\"inputValue\":\"1\",\"id\":\"dicFirst\",\"check\":\"dicFirst_check\",\"checked\":true}}]}]}]}]},{\"cid\":\"panel\",\"id\":\"panel2\",\"layoutConfig\":{},\"userConfig\":{\"region\":\"west\",\"width\":150,\"header\":false,\"border\":false,\"layout\":\"fit\",\"style\":\"border-right: 1px solid #ddd\"},\"cn\":[{\"cid\":\"grid\",\"id\":\"MyGrid\",\"layoutConfig\":{},\"userConfig\":{\"hideHeaders\":true,\"title\":\"已选字段\",\"disableHeaderClick\":true,\"enableHdMenu\":false,\"cellclick\":\"MyGrid_cellclick\",\"beforerender\":\"MyGrid_beforerender\",\"border\":false,\"region\":\"center\"},\"cn\":[{\"cid\":\"gridcolumn\",\"layoutConfig\":{},\"userConfig\":{\"header\":\"已选字段\",\"dataIndex\":\"mixName\",\"width\":140,\"align\":\"left\",\"fixed\":false,\"menuDisabled\":true},\"name\":\"mixName\"}]}]}]}]}]}","vmdevents":"var page = this;\r\npage.noone = true;\r\n\r\nthis.on('afterrender', function() {\r\n    this.cascade(function(item) {\r\n        item.on('change', function(a, b, c) {\r\n            changeAttribute(a, b)\r\n        })\r\n        item.on(\"check\", function(a, b, c) {\r\n            changeAttribute(a, b)\r\n        })\r\n        item.on(\"select\", function(a, b, c) {\r\n            changeAttribute(a, b)\r\n        })\r\n    })\r\n})\r\n\r\nvar info = parent.settingWin && parent.settingWin.params;\r\nvar inst = info && info.inst;\r\nvar type = info && info.type;\r\nvar selNum = 0;\r\n\r\npage.controller = inst;\r\n\r\nvar store = new Ext.data.JsonStore({\r\n    proxy: new Ext.data.MemoryProxy(),\r\n    fields: ['cellType', 'describe']\r\n});\r\nvar data = [{\r\n    cellType: 'text',\r\n    describe: '文本'\r\n}, {\r\n    cellType: 'number',\r\n    describe: '数字'\r\n}, {\r\n    cellType: 'combo',\r\n    describe: '下拉框'\r\n}, {\r\n    cellType: 'comboTree',\r\n    describe: '下拉树'\r\n}, {\r\n    cellType: 'comboGrid',\r\n    describe: '下拉网格'\r\n}, {\r\n    cellType: 'radioButton',\r\n    describe: '单选按钮'\r\n}, {\r\n    cellType: 'checkbox',\r\n    describe: '复选框'\r\n}, {\r\n    cellType: 'richText',\r\n    describe: '富文本'\r\n}, {\r\n    cellType: 'date',\r\n    describe: '日期'\r\n}];\r\nstore.loadData(data);\r\nvar store1 = new Ext.data.JsonStore({\r\n    proxy: new Ext.data.MemoryProxy(),\r\n    fields: ['mixName']\r\n});\r\n\r\nfunction changeAttribute(a, b) {\r\n    if (a.initialConfig.xtype == 'radiostoregroup') {\r\n        inst.activeComp[a.initialConfig.id] = b.inputValue;\r\n    } else if (a.initialConfig.id == 'valueDisplay') {\r\n        inst.activeComp[a.rootScope.initialConfig.id] = b\r\n    } else {\r\n        inst.activeComp[a.initialConfig.id] = b\r\n    }\r\n}\r\n\r\nfunction editType_afterrender(sender) {\r\n    sender.store = store;\r\n    sender.displayField = 'describe';\r\n    sender.valueField = 'cellType'\r\n}\r\n\r\nfunction closeAllComp() {\r\n    textPanel.hide()\r\n    numberPanel.hide()\r\n    comboPanel.hide()\r\n    comboTreePanel.hide()\r\n    comboGridPanel.hide()\r\n    radioButtonPanel.hide()\r\n    checkBoxPanel.hide()\r\n    richTextPanel.hide()\r\n    datePanel.hide()\r\n}\r\n\r\nfunction editType_selectChanged(sender, combo, record, index) {\r\n    var property = inst.settings.fields;\r\n    if (inst.activeComp.type != record.data.cellType) {\r\n        closeAllComp();\r\n        txtAlign.setValue(\"1\")\r\n        switch (record.json.cellType) {\r\n            case 'text':\r\n                textPanel.show()\r\n                property[inst.activeNo].fieldsConfig = new vmd.ux.inputTextProperty.Controller(hwInputTextProperty)\r\n                break;\r\n            case 'number':\r\n                numberPanel.show()\r\n                txtAlign.setValue(\"2\")\r\n                property[inst.activeNo].fieldsConfig = new vmd.ux.inputNumberProperty.Controller(hwInputNumberProperty)\r\n                break;\r\n            case 'combo':\r\n                comboPanel.show()\r\n                property[inst.activeNo].fieldsConfig = new vmd.ux.inputComboProperty.Controller(hwInputComboProperty)\r\n                break;\r\n            case 'comboTree':\r\n                comboTreePanel.show()\r\n                property[inst.activeNo].fieldsConfig = new vmd.ux.inputComboTreeProperty.Controller(hwInputComboTreeProperty)\r\n                break;\r\n            case 'comboGrid':\r\n                comboGridPanel.show()\r\n                property[inst.activeNo].fieldsConfig = new vmd.ux.inputComboGridProperty.Controller(hwInputComboGridProperty)\r\n                break;\r\n            case 'radioButton':\r\n                radioButtonPanel.show()\r\n                property[inst.activeNo].fieldsConfig = new vmd.ux.inputRadioButtonProperty.Controller(hwInputRadioButtonProperty)\r\n                break;\r\n            case 'checkbox':\r\n                checkBoxPanel.show()\r\n                property[inst.activeNo].fieldsConfig = new vmd.ux.inputCheckBoxProperty.Controller(hwInputCheckBoxProperty)\r\n                break;\r\n            case 'richText':\r\n                richTextPanel.show()\r\n                property[inst.activeNo].fieldsConfig = new vmd.ux.inputRichTextProperty.Controller(hwInputRichTextProperty)\r\n                break;\r\n            case 'date':\r\n                datePanel.show()\r\n                txtAlign.setValue(\"3\")\r\n                property[inst.activeNo].fieldsConfig = new vmd.ux.inputDateProperty.Controller(hwInputDateProperty)\r\n                break;\r\n        }\r\n\r\n        inst.activeComp = property[inst.activeNo].fieldsConfig;\r\n\r\n        //设置如果本字段是主键字段，隐藏控制空值的设置\r\n        if (property[inst.activeNo].dictionary.primary) {\r\n            primaryHide(record.json.cellType, true)\r\n        } else {\r\n            primaryHide(record.json.cellType, false)\r\n        }\r\n        comps.doLayout();\r\n        inst.activeComp.setValue(inst.activeComp.serialize())\r\n    }\r\n}\r\npage.moved = false\r\n\r\nfunction MyGrid_cellclick(sender, rowIndex, columnIndex, e) {\r\n    closeAllComp()\r\n    var group = MyGrid.getSelectionModel().selections.items;\r\n    var property = inst.settings.fields;\r\n    for (var i = 0; i < property.length; i++) {\r\n        if (property[i].dictionary.name == (group && group[0] && group[0].json && group[0].json.name) ||\r\n            ((property[i].dictionary.name == MyGrid.getView().getRow(selNum).innerText.split('(')[1].split(')')[0]) && page.noone)\r\n        ) {\r\n            page.noone = false\r\n            //显示对应属性设置面板\r\n            switch (property[i].fieldsConfig.type) {\r\n                case 'text':\r\n                    textPanel.show();\r\n                    break;\r\n                case 'number':\r\n                    numberPanel.show()\r\n                    break;\r\n                case 'checkbox':\r\n                    checkBoxPanel.show()\r\n                    break;\r\n                case 'combo':\r\n                    comboPanel.show()\r\n                    break;\r\n                case 'comboTree':\r\n                    comboTreePanel.show()\r\n                    break;\r\n                case 'radioButton':\r\n                    radioButtonPanel.show()\r\n                    break;\r\n                case 'richText':\r\n                    richTextPanel.show()\r\n                    break;\r\n                case 'comboGrid':\r\n                    comboGridPanel.show()\r\n                    break;\r\n                case 'date':\r\n                    datePanel.show()\r\n                    break;\r\n            }\r\n            //设置本页面当前激活对象\r\n            inst.activeComp = property[i].fieldsConfig;\r\n            //设置如果本字段是主键字段，隐藏控制空值的设置\r\n            if (property[i].dictionary.primary) {\r\n                primaryHide(property[i].fieldsConfig.type, true)\r\n            } else {\r\n                primaryHide(property[i].fieldsConfig.type, false)\r\n            }\r\n            inst.activeNo = i;\r\n            //本页面编辑类型设置上,不能赋值，直接修改dom元素\r\n            page.editType.setValue(property[i].fieldsConfig.type);\r\n            //数据字典中取得字段宽度设置上\r\n            page.dicLength.setValue(property[i].dictionary.length);\r\n            page.colHide.setValue(property[i].fieldsConfig.colHide)\r\n            page.colWidth.setValue(property[i].fieldsConfig.colWidth)\r\n            if (property[i].fieldsConfig.txtAlign)\r\n                page.txtAlign.setValue(property[i].fieldsConfig.txtAlign)\r\n            else {\r\n                if (property[i].fieldsConfig.type == \"number\")\r\n                    page.txtAlign.setValue(\"2\")\r\n                else if (property[i].fieldsConfig.type == \"date\")\r\n                    page.txtAlign.setValue(\"3\")\r\n                else\r\n                    page.txtAlign.setValue(\"1\")\r\n            }\r\n            if (property[i].fieldsConfig.dicFirst === false)\r\n                page.dicFirst.setValue(false)\r\n            else\r\n                page.dicFirst.setValue(true)\r\n            //设置激活对象值\r\n            inst.activeComp.setValue(inst.activeComp.serialize());\r\n        }\r\n    }\r\n    comps.doLayout()\r\n}\r\n\r\nfunction TypeSettings_beforerender(sender) {\r\n    if (!inst) return\r\n    var selected = [];\r\n    for (var i = 0; i < inst.settings.fields.length; i++) {\r\n        selected.push(inst.settings.fields[i].dictionary)\r\n    }\r\n    store1.loadData(selected);\r\n    for (var i = 0; i < selected.length; i++) {\r\n        if (selected[i].name == info.selNum) {\r\n            selNum = i;\r\n        }\r\n    }\r\n    for (var i = 0; i < inst.settings.fields.length; i++) {\r\n        //空的设置文本，保存的生成对象，对象的更换scope\r\n        var cmp = inst.settings.fields[i].fieldsConfig;\r\n        if (typeof cmp == 'undefined') {\r\n            //空值\r\n            var componet\r\n            if (selected[i].type == 'DATE') {\r\n                componet = new vmd.ux.inputDateProperty.Controller(hwInputDateProperty);\r\n            } else if (selected[i].type == 'CHAR' || selected[i].type == 'VARCHAR2') {\r\n                componet = new vmd.ux.inputTextProperty.Controller(hwInputTextProperty);\r\n            } else if (selected[i].type == 'NUMBER') {\r\n                componet = new vmd.ux.inputNumberProperty.Controller(hwInputNumberProperty);\r\n            }\r\n            inst.settings.fields[i].fieldsConfig = componet;\r\n        } else {\r\n            if (cmp.hasOwnProperty('scope')) {\r\n                //更换scope\r\n                switch (cmp.type) {\r\n                    case 'text':\r\n                        cmp.scope = hwInputTextProperty;\r\n                        break;\r\n                    case 'combo':\r\n                        cmp.scope = hwInputComboProperty;\r\n                        break;\r\n                    case 'number':\r\n                        cmp.scope = hwInputNumberProperty;\r\n                        break;\r\n                    case 'checkbox':\r\n                        cmp.scope = hwInputCheckBoxProperty;\r\n                        break;\r\n                    case 'comboTree':\r\n                        cmp.scope = hwInputComboTreeProperty;\r\n                        break;\r\n                    case 'radioButton':\r\n                        cmp.scope = hwInputRadioButtonProperty;\r\n                        break;\r\n                    case 'date':\r\n                        cmp.scope = hwInputDateProperty;\r\n                        break;\r\n                    case 'richText':\r\n                        cmp.scope = hwInputRichTextProperty;\r\n                        break;\r\n                    case 'comboGrid':\r\n                        cmp.scope = hwInputComboGridProperty;\r\n                        break;\r\n                }\r\n            } else {\r\n                //保存的生成对象\r\n                var componet;\r\n                switch (inst.settings.fields[i].fieldsConfig.type) {\r\n                    case 'text':\r\n                        componet = new vmd.ux.inputTextProperty.Controller(hwInputTextProperty);\r\n                        break;\r\n                    case 'number':\r\n                        componet = new vmd.ux.inputNumberProperty.Controller(hwInputNumberProperty);\r\n                        break;\r\n                    case 'combo':\r\n                        componet = new vmd.ux.inputComboProperty.Controller(hwInputComboProperty);\r\n                        break;\r\n                    case 'comboTree':\r\n                        componet = new vmd.ux.inputComboTreeProperty.Controller(hwInputComboTreeProperty);\r\n                        break;\r\n                    case 'comboGrid':\r\n                        componet = new vmd.ux.inputComboGridProperty.Controller(hwInputComboGridProperty);\r\n                        break;\r\n                    case 'radioButton':\r\n                        componet = new vmd.ux.inputRadioButtonProperty.Controller(hwInputRadioButtonProperty);\r\n                        break;\r\n                    case 'checkbox':\r\n                        componet = new vmd.ux.inputCheckBoxProperty.Controller(hwInputCheckBoxProperty);\r\n                        break;\r\n                    case 'richText':\r\n                        componet = new vmd.ux.inputRichTextProperty.Controller(hwInputRichTextProperty);\r\n                        break;\r\n                    case 'date':\r\n                        componet = new vmd.ux.inputDateProperty.Controller(hwInputDateProperty);\r\n                        break;\r\n                }\r\n                componet.setValue(inst.settings.fields[i].fieldsConfig);\r\n                inst.settings.fields[i].fieldsConfig = componet;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction MyGrid_beforerender(sender) {\r\n    MyGrid.store = store1;\r\n}\r\n\r\n\r\nfunction TypeSettings_afterrender(sender) {\r\n\r\n    MyGrid.on('cellclick', function(sender, rowindex, cellindex) {\r\n        var gv = MyGrid.getView();\r\n        var row = gv.getRow(selNum);\r\n        Ext.get(row).removeClass('x-grid3-row-selected')\r\n        currow = gv.getRow(rowindex);\r\n        Ext.get(currow).addClass('x-grid3-row-selected')\r\n    })\r\n    Ext.defer(function() {\r\n        var gv = MyGrid.getView();\r\n        var row = gv.getRow(selNum);\r\n        MyGrid.selModel.selectRow(selNum, true)\r\n        //row.click()\r\n        Ext.get(row).addClass('x-grid3-row-selected')\r\n        MyGrid_cellclick()\r\n    }, 50)\r\n\r\n    //对各个复合组件增加消息通讯监听\r\n    this.cascade(function(item) {\r\n        if (item.xtype && item.xtype.indexOf('vmd.ux') == 0) {\r\n            item.on('updateValue', function(cmp, field, value) {\r\n                var activeCompController = page.controller.activeComp;\r\n                activeCompController[field] = value;\r\n            })\r\n        }\r\n    })\r\n}\r\n\r\nfunction getNow() {\r\n    var sc = page.controller.settings.fields[page.controller.activeNo].fieldsConfig.scope;\r\n    var obj = {\r\n        'sc': sc\r\n    }\r\n    var t = page.controller.settings.fields[page.controller.activeNo].fieldsConfig\r\n    t.scope = []\r\n    var temp = JSON.parse(JSON.stringify(page.controller.settings.fields[page.controller.activeNo]))\r\n    t.scope = obj.sc;\r\n    return temp\r\n}\r\n\r\nfunction primaryHide(type, flag) {\r\n    switch (type) {\r\n        case 'text':\r\n            if (flag) {\r\n                hwInputTextProperty.text_common_allowEmpty.hide()\r\n                hwInputTextProperty.text_common_emptyAlertDiv.hide()\r\n            } else {\r\n                hwInputTextProperty.text_common_allowEmpty.show()\r\n                hwInputTextProperty.text_common_emptyAlertDiv.show()\r\n            }\r\n            break;\r\n        case 'number':\r\n            if (flag) {\r\n                hwInputNumberProperty.number_allowEmpty.hide();\r\n                hwInputNumberProperty.number_emptyAlertDiv.hide()\r\n            } else {\r\n                hwInputNumberProperty.number_allowEmpty.show();\r\n                hwInputNumberProperty.number_emptyAlertDiv.show()\r\n            }\r\n\r\n            break;\r\n        case 'combo':\r\n            if (flag) {\r\n                hwInputComboProperty.setAllowEmpty(false)\r\n                hwInputComboProperty.allowEmpty.hide()\r\n                hwInputComboProperty.emptyAlertDiv.hide()\r\n            } else {\r\n                hwInputComboProperty.allowEmpty.show()\r\n                hwInputComboProperty.emptyAlertDiv.hide()\r\n            }\r\n\r\n            break;\r\n        case 'comboTree':\r\n            if (flag) {\r\n                hwInputComboTreeProperty.allowEmpty.hide()\r\n                hwInputComboTreeProperty.div24.hide()\r\n            } else {\r\n                hwInputComboTreeProperty.allowEmpty.show()\r\n                hwInputComboTreeProperty.div24.show()\r\n            }\r\n\r\n            break;\r\n        case 'comboGrid':\r\n            if (flag) {\r\n                hwInputComboGridProperty.allowEmpty.hide()\r\n                hwInputComboGridProperty.emptyDiv.hide()\r\n            } else {\r\n                hwInputComboGridProperty.allowEmpty.show()\r\n                hwInputComboGridProperty.emptyDiv.show()\r\n            }\r\n\r\n            break;\r\n        case 'checkbox':\r\n            if (flag) {\r\n                hwInputCheckBoxProperty.allowEmpty.hide()\r\n                hwInputCheckBoxProperty.emptyAlertDiv.hide()\r\n            } else {\r\n                hwInputCheckBoxProperty.allowEmpty.show()\r\n                hwInputCheckBoxProperty.emptyAlertDiv.show()\r\n            }\r\n\r\n            break;\r\n        case 'richText':\r\n            if (flag) {\r\n                hwInputRichTextProperty.allowEmpty.hide()\r\n                hwInputRichTextProperty.div.hide()\r\n            } else {\r\n                hwInputRichTextProperty.allowEmpty.show()\r\n                hwInputRichTextProperty.div.show()\r\n            }\r\n\r\n            break;\r\n        case 'date':\r\n            if (flag) {\r\n                hwInputDateProperty.allowEmpty.hide()\r\n                hwInputDateProperty.emptyDiv.hide()\r\n            } else {\r\n                hwInputDateProperty.allowEmpty.show()\r\n                hwInputDateProperty.emptyDiv.show()\r\n            }\r\n\r\n            break;\r\n    }\r\n}\r\n\r\nfunction editType_beforerender(sender) {\r\n\r\n}\r\n\r\nfunction dicFirst_check(sender, checked) {\r\n\r\n}","vmdcss":".bindtype .x-tab-panel .x-tab-panel-header,\n.bindtype .x-tab-panel .x-tab-panel-bwrap,\n.bindtype .x-tab-panel .x-tab-panel-bwrap .x-tab-panel-body {\n    border-left-width: 0;\n}","vmdprops":"\"\"","type":"ux","vmdevents_controller":"Ext.define('vmd.ux.typeSettings.Controller', {\n    xtype: 'vmd.ux.typeSettings.Controller',\n    constructor: function(options) {\n        \n    }\n})","vmdinterface":"{\"components\":[{\"cid\":\"vmduxprops\",\"layoutConfig\":{},\"userConfig\":{}},{\"cid\":\"vmduxmethods\",\"id\":\"方法\",\"layoutConfig\":{},\"userConfig\":{},\"cn\":[{\"cid\":\"uxmethod\",\"id\":\"getNow\",\"layoutConfig\":{},\"userConfig\":{\"id\":\"getNow\",\"zhname\":\"\",\"bindCmp\":\"\",\"bindValue\":\"\",\"isPublic\":\"on\",\"desc\":\"\",\"uxcid\":\"\",\"params\":\"\",\"code\":\"return getNow()\",\"returnType\":\"\"}}]},{\"cid\":\"vmduxevents\",\"id\":\"事件\",\"layoutConfig\":{},\"userConfig\":{}}]}","vmdresource":"{\"components\":[{\"cid\":\"vmdrescsss\",\"layoutConfig\":{},\"userConfig\":{}},{\"cid\":\"vmdresjss\",\"layoutConfig\":{},\"userConfig\":{},\"cn\":[{\"cid\":\"resjs\",\"id\":\"controller.js\",\"layoutConfig\":{},\"userConfig\":{}}]},{\"cid\":\"vmdresimgs\",\"layoutConfig\":{},\"userConfig\":{}}]}"}