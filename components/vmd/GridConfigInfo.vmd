{"vmdversion":"vmd2.0.5.200306","vmdlayout":"{\"components\":[{\"cid\":\"uxpanel\",\"id\":\"GridConfigInfo\",\"layoutConfig\":{},\"userConfig\":{\"layout\":\"anchor\",\"header\":false,\"width\":290,\"height\":510,\"beforerender\":\"GridConfigInfo_beforerender\"},\"cn\":[{\"cid\":\"container\",\"id\":\"hwDiv\",\"layoutConfig\":{\"align\":\"middle\"},\"userConfig\":{\"x\":\"\",\"y\":\"\",\"layout\":\"hbox\",\"anchor\":\"100% \",\"height\":35,\"border\":false},\"cn\":[{\"cid\":\"label\",\"id\":\"hwLabel\",\"layoutConfig\":{},\"userConfig\":{\"text\":\"数据集:\",\"margins\":\"0 0 0 10\"}},{\"cid\":\"vmdComlist\",\"id\":\"dataSet\",\"layoutConfig\":{},\"userConfig\":{\"x\":0,\"y\":0,\"width\":230,\"margins\":\"8 0 0 0\",\"beforerender\":\"dataSet_beforerender\",\"afterrender\":\"dataSet_afterrender\",\"id\":\"dataSet\",\"selectChanged\":\"dataSet_selectChanged\"}}]},{\"cid\":\"container\",\"id\":\"hwDiv1\",\"layoutConfig\":{\"align\":\"middle\"},\"userConfig\":{\"x\":60,\"y\":150,\"anchor\":\"100%\",\"height\":35,\"border\":false,\"layout\":\"hbox\"},\"cn\":[{\"cid\":\"label\",\"id\":\"hwLabel1\",\"layoutConfig\":{},\"userConfig\":{\"text\":\"展示类型：\",\"margins\":\"0 0 0 10\"}},{\"cid\":\"radiogroup\",\"id\":\"displayMode\",\"layoutConfig\":{},\"userConfig\":{\"height\":29,\"change\":\"displayMode_change\",\"id\":\"displayMode\"},\"cn\":[{\"cid\":\"radio\",\"id\":\"hwRadio\",\"layoutConfig\":{},\"userConfig\":{\"boxLabel\":\"实际宽度\",\"fieldLabel\":\"\",\"checked\":true,\"inputValue\":\"0\"}},{\"cid\":\"radio\",\"id\":\"hwRadio1\",\"layoutConfig\":{},\"userConfig\":{\"fieldLabel\":\"\",\"boxLabel\":\"比例平铺\",\"inputValue\":\"1\"}}]}]},{\"cid\":\"container\",\"id\":\"hwDiv2\",\"layoutConfig\":{\"align\":\"middle\"},\"userConfig\":{\"x\":100,\"y\":230,\"anchor\":\"100%\",\"height\":35,\"border\":false,\"layout\":\"hbox\"},\"cn\":[{\"cid\":\"label\",\"id\":\"hwLabel2\",\"layoutConfig\":{},\"userConfig\":{\"text\":\"锁定列数：\",\"margins\":\"0 0 0 10\"}},{\"cid\":\"textfield\",\"id\":\"fixedCol\",\"layoutConfig\":{},\"userConfig\":{\"width\":194,\"afterrender\":\"fixedCol_afterrender\",\"id\":\"fixedCol\"}}]},{\"cid\":\"container\",\"id\":\"hwDiv3\",\"layoutConfig\":{},\"userConfig\":{\"x\":\"\",\"y\":\"\",\"anchor\":\"100% -110\",\"border\":false,\"layout\":\"border\"},\"cn\":[{\"cid\":\"container\",\"id\":\"hwDiv4\",\"layoutConfig\":{},\"userConfig\":{\"width\":274,\"region\":\"north\",\"border\":false,\"height\":33,\"layout\":\"border\",\"style\":\"background-color: rgb(244, 246, 253);\"},\"cn\":[{\"cid\":\"label\",\"id\":\"hwLabel3\",\"layoutConfig\":{},\"userConfig\":{\"text\":\"字段配置\",\"anchor\":\"100 100%\",\"region\":\"west\",\"height\":22,\"margins\":\"7 0 7 15\",\"style\":\"color: #20a0ff;    font-weight: bold;\"}},{\"cid\":\"container\",\"id\":\"hwDiv6\",\"layoutConfig\":{\"align\":\"middle\",\"pack\":\"end\"},\"userConfig\":{\"anchor\":\"-60 100%\",\"x\":50,\"region\":\"center\",\"border\":false,\"layout\":\"hbox\"},\"cn\":[{\"cid\":\"vmdButton\",\"id\":\"button\",\"layoutConfig\":{},\"userConfig\":{\"iconcls\":\"\",\"text\":\"\",\"type\":\"text\",\"width\":30,\"cls\":\"icon-ficsel\",\"click\":\"button_click\"}},{\"cid\":\"vmdButton\",\"id\":\"button1\",\"layoutConfig\":{},\"userConfig\":{\"iconcls\":\"\",\"text\":\"\",\"width\":30,\"type\":\"text\",\"cls\":\"icon-ficadd\",\"click\":\"button1_click\"}},{\"cid\":\"vmdButton\",\"id\":\"btn_up\",\"layoutConfig\":{},\"userConfig\":{\"iconcls\":\"\",\"text\":\"\",\"width\":30,\"type\":\"text\",\"cls\":\"icon-ficup\",\"id\":\"btn_up\",\"click\":\"btn_up_click\"}},{\"cid\":\"vmdButton\",\"id\":\"btn_down\",\"layoutConfig\":{},\"userConfig\":{\"text\":\"\",\"iconcls\":\"\",\"width\":30,\"type\":\"text\",\"cls\":\"icon-ficdown\",\"id\":\"btn_down\",\"click\":\"btn_down_click\"}},{\"cid\":\"vmdButton\",\"id\":\"btn_del\",\"layoutConfig\":{},\"userConfig\":{\"iconcls\":\"\",\"text\":\"\",\"width\":30,\"type\":\"text\",\"cls\":\"icon-ficdel\",\"id\":\"btn_del\",\"click\":\"btn_del_click\"}}]}]},{\"cid\":\"container\",\"id\":\"hwDiv5\",\"layoutConfig\":{},\"userConfig\":{\"region\":\"center\",\"border\":false,\"layout\":\"fit\"},\"cn\":[{\"cid\":\"grid\",\"id\":\"MyGrid\",\"layoutConfig\":{},\"userConfig\":{\"border\":false,\"header\":false,\"hideHeaders\":true,\"beforerender\":\"MyGrid_beforerender\",\"afterrender\":\"MyGrid_afterrender\",\"celldblclick\":\"MyGrid_celldblclick\"},\"cn\":[{\"cid\":\"gridcolumn\",\"layoutConfig\":{},\"userConfig\":{\"header\":\"Column 1\",\"dataIndex\":\"mixName\",\"width\":280},\"name\":\"mixName\"}]}]}]}]}]}","vmdevents":"var page = this;\nvar gridConfigInfo = {}\n\npage.selectedField = new Ext.data.JsonStore({\n    proxy: new Ext.data.MemoryProxy(),\n    fields: ['mixName', 'name', 'id']\n});\n\nvar dsStore = new Ext.data.JsonStore({\n    proxy: new Ext.data.MemoryProxy(),\n    fields: ['name', 'value']\n});\nvar dsStoreDats = [];\n\ndsStore.loadData(dsStoreDats);\n\nfunction dataSet_beforerender(sender) {\n    dataSet.store = dsStore;\n    dataSet.displayField = 'name';\n    dataSet.valueField = 'value'\n}\n\nfunction dataSet_afterrender(sender) {\n    dataSet.positionEl.on('click', function(e) {\n        var dsStoreDats = [];\n        var i = 0;\n        var storeRoot = xds.vmd.getRootNode(\"dataset\");\n        if (typeof storeRoot != 'undefined') {\n            for (var i = 0; i < storeRoot.childNodes.length; i++) {\n                var cmp = storeRoot.childNodes[i].component\n                if (cmp.cid == \"vmdDataSet\") {\n                    for (var j = 0; j < cmp.node.childNodes.length; j++) {\n                        var obj = {\n                            name: cmp.node.childNodes[j].id,\n                            value: cmp.node.childNodes[j].id\n                        }\n                        dsStoreDats.push(obj);\n                    }\n                } else {\n                    var obj = {\n                        name: cmp.id,\n                        value: cmp.id\n                    }\n                    dsStoreDats.push(obj);\n                }\n            }\n        }\n        dsStore.loadData(dsStoreDats)\n    })\n}\n\nfunction button_click(sender, e) {\n\n    var sValue = dataSet.getValue()\n    //首先判断是否选择了数据集\n    if (sValue == '') {\n        vmd.tip('请首先选择数据集', 'error')\n    } else {\n        openSettingWin(page.gridConfigInfo);\n    }\n}\n/*\n *desc 打开字段选择窗口\n */\nfunction openSettingWin(controller, flag) {\n    var dbconfigs = JSON.parse(xds.vmd.getStoreByDsName(dataSet.getValue(), true).component.getConfig(\"storeConfig\").storeConfig)\n    if (dbconfigs) {\n        // 创建一个新窗口（有url指向） \n        window.gridFildSelWin = new vmd.window({\n            url: '/system/modules/eQ9ULgcVb1/eQ9ULgcVb5/hwsEfvFUp9/hwC2OJYBU2.html',\n            title: '字段选择',\n            enableLoading: true, //启用进度加载\n            width: 630,\n            height: 500,\n            auto: false, //auto为true 自动适应窗口，配合offset使用\n            cache: false,\n            params: {\n                inst: controller\n            } //url中追加的编码的参数，json格式 \n        })\n        gridFildSelWin.inputdbconfig = dbconfigs\n        gridFildSelWin.show(); //窗口显示\n        gridFildSelWin.getSelectedFields = function(selected) {\n            var newSelectFields = [];\n            var oldfields = page.gridConfigInfo.fieldsInfo;\n            var ischeckfields = function(name) {\n                var flag = false;\n                Ext.each(oldfields, function(info) {\n                    if (info.colId == name) {\n                        flag = info;\n                        return false;\n                    }\n                })\n                return flag;\n            }\n            var cmpStore = [];\n            for (var i = 0; i < selected.length; i++) {\n                var name = selected[i].name;\n                var matchFieldInfo = ischeckfields(name);\n                if (matchFieldInfo) {\n                    newSelectFields.push(Ext.copyTo(matchFieldInfo))\n                    continue;\n                }\n                selected[i].mixName = selected[i].cname + '(' + selected[i].name + ')'\n                var cmp = {};\n                //var cmp = new vmd.ux.gridType.settings.fieldSettings();\n                //cmp.dictionary = selected[i];\n                var type = selected[i].type.toLowerCase();\n                //根据数据字典类型设置默认值\n                if (type == 'varchar' || type == 'string') {\n                    cmp = {\n                        colId: name,\n                        title: selected[i].cname || name,\n                        unit: selected[i].unit,\n                        length: selected[i].length,\n                        width: selected[i].length * 8 || 100,\n                        allowSort: true,\n                        fileInfo: {\n                            type: \"txt\"\n                        }\n                    }\n                } else if (type == 'number' || type == 'int32' || type == 'int16' || type == 'double' || type == 'float' || type == 'single' || type == 'decimal') {\n                    cmp = {\n                        colId: name,\n                        title: selected[i].cname || name,\n                        unit: selected[i].unit,\n                        length: selected[i].length,\n                        width: _getDefaultWidth(selected[i].length, selected[i].cname || name),\n                        allowSort: true,\n                        fileInfo: {\n                            type: \"num\"\n                        }\n                    }\n                } else {\n                    cmp = {\n                        colId: name,\n                        title: selected[i].cname || name,\n                        unit: selected[i].unit,\n                        length: selected[i].length,\n                        width: selected[i].length * 8 || 100,\n                        allowSort: true,\n                        fileInfo: {\n                            type: \"txt\"\n                        }\n                    }\n                }\n                newSelectFields.push(cmp);\n            }\n            page.gridConfigInfo.fieldsInfo = page.gridConfigInfo.fieldsInfo || []\n            for (var i = 0; i < newSelectFields.length; i++) {\n                page.gridConfigInfo.fieldsInfo.push(newSelectFields[i]);\n            }\n            page.selected = [];\n            for (var i = 0; i < page.gridConfigInfo.fieldsInfo.length; i++) {\n                page.selected.push({\n                    mixName: page.gridConfigInfo.fieldsInfo[i].title + \"(\" + page.gridConfigInfo.fieldsInfo[i].colId + \")\",\n                    name: page.gridConfigInfo.fieldsInfo[i].colId\n                })\n            }\n            page.selectedField.loadData(page.selected)\n            gridFildSelWin.close()\n            \n            //xds.active.component.setConfig(\"gridConfig\",xds.active.component.userConfig.gridConfig)\n        }\n    }\n}\n\nfunction _getDefaultWidth(length, name) {\n    if (length)\n        return 100\n    return (length * 8 + 10) <= (name.length * 8) ? (name.length * 8) : (length * 8 + 10)\n}\n\nfunction moveUp() {\n    //上移\n    var selecModel = page.MyGrid.getSelectionModel()\n    var group = page.MyGrid.getSelectionModel().selections.items;\n    if (group.length == 0) return;\n    page.selected = Ext.pluck(page.MyGrid.store.data.items, 'json')\n    var name = group[0].data.mixName;\n    var list = page.gridConfigInfo.fieldsInfo;\n    for (var i = 0; i < page.selected.length; i++) {\n        if (page.selected[i].mixName == name && i != 0) {\n            var temp = page.selected[i - 1];\n            page.selected[i - 1] = page.selected[i];\n            page.selected[i] = temp;\n            page.selectedField.loadData(page.selected)\n            selecModel.selectRow(i - 1)\n            var temp = list[i - 1]\n            list[i - 1] = list[i]\n            list[i] = temp;\n            break;\n        }\n    }\n    page.fireEvent('settingChangeEvents')\n}\n\nfunction moveDown() {\n    //下移\n    var selecModel = page.MyGrid.getSelectionModel()\n    var group = page.MyGrid.getSelectionModel().selections.items;\n    if (group.length == 0) return;\n    page.selected = Ext.pluck(page.MyGrid.store.data.items, 'json')\n    var name = group[0].data.mixName;\n    var list = page.gridConfigInfo.fieldsInfo;\n    for (var i = 0; i < page.selected.length; i++) {\n        if (page.selected[i].mixName == name && i < (list.length - 1)) {\n            var temp = page.selected[i + 1];\n            page.selected[i + 1] = page.selected[i];\n            page.selected[i] = temp;\n            page.selectedField.loadData(page.selected)\n            selecModel.selectRow(i + 1)\n            var temp = list[i + 1]\n            list[i + 1] = list[i]\n            list[i] = temp;\n            break;\n        }\n    }\n    page.fireEvent('settingChangeEvents')\n}\n\nfunction deleteCol() {\n    var f = page.gridConfigInfo.fieldsInfo;\n    var group = page.MyGrid.getSelectionModel().selections.items;\n    if (group) {\n        for (var i = 0; i < group.length; i++) {\n            for (var n = f.length - 1; n > -1; n--) {\n                if (group[i].data.name == f[n].colId) {\n                    f.splice(n, 1);\n                    break;\n                }\n            }\n        }\n        page.selected = [];\n        for (var i = 0; i < f.length; i++) {\n            page.selected.push({\n                mixName: f[i].title + \"(\" + f[i].colId + \")\",\n                name: f[i].colId\n            })\n        }\n        page.selectedField.loadData(page.selected)\n        page.fireEvent('settingChangeEvents')\n    }\n}\n\nfunction dataSet_selectChanged(sender, combo, record, index) {\n    if (page.gridConfigInfo.storeName != dataSet.getValue() && page.gridConfigInfo.storeName) {\n        if (page.gridConfigInfo.fieldsInfo.length > 0) {\n            Ext.Msg.confirm(\"提示!\", \"数据集发生变化，是否清空已选字段信息?\", function(btn) {\n                if (btn == \"yes\") {\n                    page.gridConfigInfo.fieldsInfo = [];\n                    page.selectedField.loadData([])\n                } else {}\n            })\n        }\n    }\n    page.gridConfigInfo.storeName = dataSet.getValue();\n}\n\nfunction displayMode_change(sender, checked) {\n    page.gridConfigInfo.displayMode = displayMode.getValue();\n}\n\nfunction fixedCol_afterrender(sender) {\n    sender.el.on('change', function() {\n        //var max = page.rootScope.controller.comp.grid.settings.fields.length;\n        //if (max < fixedCol.getValue()) {\n        //    vmd.tip('锁定列数超过已选择字段数', 'error')\n        //    fixedCol.setValue(page.controller.settings.fc)\n        //    return;\n        //}\n\n        page.gridConfigInfo.columns = sender.getValue();\n        //page.fireEvent('settingChangeEvents')\n    })\n}\n\nfunction btn_up_click(sender, e) {\n    moveUp()\n    //xds.active.component.setConfig(\"gridConfig\",xds.active.component.userConfig.gridConfig)\n}\n\nfunction btn_down_click(sender, e) {\n    moveDown()\n    \n    //xds.active.component.setConfig(\"gridConfig\",JSON.stringify(xds.active.component.userConfig.gridConfig))\n    \n}\n\nfunction btn_del_click(sender, e) {\n    deleteCol()\n    //vmd.webBase.syslog(loginfo,logtype,operationtype,function(res){}) \n    \n    //xds.active.component.setConfig(\"gridConfig\",xds.active.component.userConfig.gridConfig)\n}\n\nfunction MyGrid_beforerender(sender) {\n    this.ddGroup = 'griddd';\n    this.enableDragDrop = true;\n    sender.store = page.selectedField;\n    \n    \n    \n\n    MyGrid.on('cellclick', function(sender, rowindex, cellindex) {\n        page.selNo = rowindex;\n        var gv = MyGrid.getView();\n        var row = gv.getRow(rowindex);\n        Ext.get(row).removeClass('x-grid3-row-selected')\n        currow = gv.getRow(rowindex);\n        Ext.get(currow).addClass('x-grid3-row-selected')\n    })\n\n    this.colModel.config[0].renderer = function(value, cellmeta, record) { //可以根据行字段的某个类型进行转换设置显示值\n        if (record.json.type == \"fic\") {\n            return '<div class=\"filename\">' +\n                '<span style=\"color: green;font-weight: bold;\" >' + value + '</span>' +\n                '</div>'\n        } else {\n            return value\n        }\n    }\n}\n\nfunction MyGrid_afterrender(sender) {\n    var store = this.store\n    var ddrow = new Ext.dd.DropTarget(MyGrid.container, {\n        ddGroup: 'griddd',\n        copy: false,\n        notifyEnter: function(ddSource, e, data) {},\n        notifyDrop: function(ddSource, e, data) {\n            var list = page.gridConfigInfo.fieldsInfo;\n            // 选中了多少行\n            var rows = data.selections;\n            // 拖动到第几行\n            var index = ddSource.getDragData(e).rowIndex;\n            if (typeof(index) == \"undefined\") {\n                return;\n            }\n            // 修改store\n            for (i = 0; i < rows.length; i++) {\n                var rowData = rows[i];\n                lindex = store.indexOf(rowData)\n                temp = list[lindex]\n                list.remove(list[lindex])\n                list.splice(index, 0, temp);\n                if (!this.copy) store.remove(rowData);\n                store.insert(index, rowData);\n            }\n            page.selected = Ext.pluck(store.data.items, 'json')\n            page.selectedField.loadData(page.selected)\n            page.fireEvent('settingChangeEvents')\n        }\n    });\n}\n\nfunction GridConfigInfo_beforerender(sender) {\n    //增加属性面板的指向\n    xds.active.component.propPanel = page;\n}\n\n\n\nfunction setInfo() {\n    //增加属性面板的指向\n    xds.active.component.propPanel = page;\n    page.controller = new vmd.ux.gridConfigInfo.Controller(page);\n    page.controller.setValue()\n}\n\n\n//弹窗事件编辑器\nfunction openCodeEditor(sender, eventname, eventValue, param, callback) {\n    var curActiveCmp = curActiveCmp || xds.active.component\n    var eventName = eventValue || (curActiveCmp.id + \"_\" + eventname.toLowerCase());\n    var editor = new vmd.comp.Ace({\n        id: \"ace_code\"\n    });\n    init_def_platformControlData();\n    var aceWin = new vmd.window({\n        title: \"事件编辑\",\n        id: \"aceWin\",\n        url: vmd.virtualPath + vmd.vmdCodePath + \"?\" + Date.parse(new Date()),\n        offset: [100, 100],\n        modal: true,\n        maximizable: true,\n        maskStyle: 'opacity:0.7',\n        layout: 'border',\n        draggable: false\n    });\n    aceWin.closeFn = function() {\n        //修复ace tooltip还存在的问题\n        Ext.select('.Ace-Tern-tooltip').remove();\n        var val = aceWin.val;\n        if (aceWin.script == val) {\n            return;\n        }\n        Ext.Msg.confirm(\"提示\", \"脚本已改变是否保存?\", function(btn) {\n            if (btn == 'no') return;\n            var click_label = sender;\n            if (val.trim()) {\n                xds.vmd.events = val;\n                sender.setValue(eventName)\n                sender.fireEvent('change', sender, eventName);\n                if (callback) callback()\n                saveEvents(eventName)\n                // 返回给对象\n            } else {\n                click_label = undefined;\n                delete xds.vmd.events\n            }\n        })\n    }\n    // init_def_platformControlData();\n    aceWin.on('close', aceWin.closeFn, this)\n    //当前拖拽组件\n    window.setTimeout(function() {\n        window.setTimeout(function() {\n            //代码编辑器初始化\n            if (typeof rowIndex == \"number\") {\n                aceWin.aceline = rowIndex;\n            }\n        }, 150)\n        var code = parent.xds.vmd.events;\n        var getdefaulteventname = function() {\n            if (!param) {\n                return \"function(sender\" + \"){\\n\" + \"\\n} \\n\";\n            } else {\n                return \"function(sender,\" + param + \"){\\n\" + \"\\n} \\n\";\n            }\n        }\n        var m = getdefaulteventname(),\n            code = code ? code : \"\",\n            replaceStr = \"function {0}{1}\",\n            regex = new RegExp(\"function\\\\s+\" + eventName + \"\\\\s*?\\\\(\");\n        if (eventName && code.search(regex) == -1) {\n            var e = m.trim().replace(\"function\", \"\"),\n                i = String.format(replaceStr, eventName, e);\n            code += (code ? \"\\n\\n\" : \"\") + i\n        }\n        aceWin.script = code;\n        aceWin.val = code;\n        aceWin.show();\n        //进度提示\n        var myMask = new Ext.LoadMask(aceWin.el, {\n            msg: \"数据加载中,请稍后...\",\n            msgCls: 'z-index:10000;'\n        });\n        myMask.show();\n        aceWin.loading = myMask;\n        //  aceWin.update(\"<iframe  id='iframe_page' src='\" + vmd.virtualPath + vmd.vmdCodePath + \"?\" + Date.parse(new Date()) + \"' width=600 height=900 frameborder=0  ></iframe>\")\n        var scriptArr = code.split(\"\\n\"),\n            rowIndex = null;\n        Ext.each(scriptArr,\n            function(o, p) {\n                if (o.search(regex) != -1) {\n                    rowIndex = p + 2;\n                    return false\n                }\n            });\n    }, 50)\n}\nwindow.simpleGrid_openCodeEditor = openCodeEditor;\n\n\nfunction saveEvents(eventName) {\n    var curActiveCmp\n    curActiveCmp = curActiveCmp || xds.active.component\n    eventName && xds.vmd.addEventForDesignerCmp(curActiveCmp, eventName, eventName)\n}\n\nfunction MyGrid_celldblclick(sender, rowIndex, columnIndex, e) {\n    var _fieldInfo = page.gridConfigInfo.fieldsInfo[rowIndex]\n    if (_fieldInfo.isVirtual) {\n        var editFieldsInfo = JSON.parse(JSON.stringify(_fieldInfo));\n        virtualColSet(editFieldsInfo, rowIndex, false)\n    } else {\n        var editFieldsInfo = JSON.parse(JSON.stringify(page.gridConfigInfo.fieldsInfo));\n        for (var k = editFieldsInfo.length - 1; k >= 0; k--) {\n            if (editFieldsInfo[k].isVirtual)\n                editFieldsInfo.splice(k, 1);\n        }\n        // 创建一个新窗口（有url指向） \n        window.settingWin = new vmd.window({\n            url: '/system/modules/eQ9ULgcVb1/eQ9ULgcVb5/hwsEfvFUp9/hw0yCvoYcm.html',\n            title: '字段类型设置',\n            enableLoading: true, //启用进度加载\n            width: 500,\n            height: 500,\n            cache: false,\n            auto: false, //auto为true 自动适应窗口，配合offset使用\n            params: {\n                inst: editFieldsInfo,\n                selNum: page.MyGrid.getSelectionModel().selections.items[0].json.name\n            } //url中追加的编码的参数，json格式 \n        })\n        settingWin.show(); //窗口显示\n        settingWin.setBack = function(controller, flag) {\n            if (flag) {\n                for (var j = 0; j < page.gridConfigInfo.fieldsInfo.length; j++) {\n                    for (var k = 0; k < controller.length; k++) {\n                        if (page.gridConfigInfo.fieldsInfo[j].colId == controller[k].colId) {\n                            page.gridConfigInfo.fieldsInfo[j] = controller[k]\n                            break;\n                        }\n                    }\n                }\n            }\n            page.fireEvent('settingChangeEvents')\n            settingWin.close()\n        }\n    }\n}\n\nfunction button1_click(sender, e) {\n    virtualColSet(null, null, true)\n    \n    //xds.active.component.setConfig(\"gridConfig\",xds.active.component.userConfig.gridConfig)\n}\n\n\n\n\nfunction virtualColSet(fileInfo, index, add) {\n    var params = {}\n    var selIndex = index;\n    if (fileInfo)\n        params = {\n            inst: fileInfo\n        }\n    window.addVirtualColWin = new vmd.window({\n        url: '/system/modules/eQ9ULgcVb1/eQ9ULgcVb5/hwsEfvFUp9/hwpeaBofN3.html',\n        title: '添加虚拟列',\n        enableLoading: true, //启用进度加载\n        width: 350,\n        height: 400,\n        cache: false,\n        auto: false, //auto为true 自动适应窗口，配合offset使用\n        params: params\n    })\n    addVirtualColWin.show(); //窗口显示\n    addVirtualColWin.setBack = function(controller, flag) {\n        if (!add && flag)\n            if (flag && selIndex >= 0)\n                page.gridConfigInfo.fieldsInfo[selIndex] = controller\n        if (flag && add) {\n            page.gridConfigInfo.fieldsInfo.push(controller)\n            //重新设置当前界面的选择字段\n            _refreshFields()\n        }\n\n        addVirtualColWin.close()\n    }\n}\n\nfunction _refreshFields() {\n    var info = page.gridConfigInfo\n    var temp = [];\n    for (var i = 0; i < info.fieldsInfo.length; i++) {\n        var mixName = info.fieldsInfo[i].title + \"(\" + info.fieldsInfo[i].colId + \")\";\n\n        if (info.fieldsInfo[i].isVirtual)\n            mixName = info.fieldsInfo[i].title + \"(虚拟列)\";\n\n        temp.push({\n            mixName: mixName,\n            name: info.fieldsInfo[i].colId,\n            id: info.fieldsInfo[i].colId\n        })\n    }\n    page.selectedField.loadData(temp)\n}\n\n\nfunction _codeEditWin(info, callback) {\n    var editFieldsInfo = info;\n\n    // 创建一个新窗口（有url指向） \n    simpleGridCodeEdit = new vmd.window({\n        url: '/system/modules/eQ9ULgcVb1/eQ9ULgcVb5/hwsEfvFUp9/hwa21e57c4.html',\n        title: '字段类型设置',\n        enableLoading: true, //启用进度加载\n        width: 700,\n        height: 580,\n        cache: false,\n        auto: false, //auto为true 自动适应窗口，配合offset使用\n        params: {\n            editCode: editFieldsInfo\n        } //url中追加的编码的参数，json格式 \n    }); //窗口显示\n    simpleGridCodeEdit.setBack = callback;\n    simpleGridCodeEdit.show()\n    return simpleGridCodeEdit;\n\n\n}\nwindow.openSimpleGridCodeEdit = _codeEditWin","vmdcss":".icon-ficdown {\n    background-image: url(/img/public/fic_down.png) !important;\n    background-repeat: no-repeat !important;\n    background-position: left center !important;\n}\n.icon-ficup {\n    background-image: url(/img/public/fic_up.png) !important;\n    background-repeat: no-repeat !important;\n    background-position: left center !important;\n}\n.icon-ficadd {\n    background-image: url(/img/public/fic_add.png) !important;\n    background-repeat: no-repeat !important;\n    background-position: left center !important;\n}\n\n.icon-ficsel {\n    background-image: url(/img/public/fic_sel.png) !important;\n    background-repeat: no-repeat !important;\n    background-position: left center !important;\n}\n\n\n.icon-ficdel {\n    background-image: url(/img/public/fic_del.png) !important;\n    background-repeat: no-repeat !important;\n    background-position: left center !important;\n}","vmdprops":"\"\"","type":"ux","vmdcmpdeps":[],"vmdevents_controller":"Ext.define('vmd.ux.gridConfigInfo.Controller', {\n    xtype: 'vmd.ux.gridConfigInfo.Controller',\n    constructor: function(options) {\n        this.scope = options;\n    },\n    setValue: function() {\n        if (!xds.active.component.userConfig.gridConfig) {\n            xds.active.component.userConfig.gridConfig = {\n                storeName: \"\",\n                columns: 0,\n                displayMode: \"0\",\n                fieldsInfo: []\n            }\n        }\n        var saveInfo = typeof xds.active.component.userConfig.gridConfig == 'object' ?\n            xds.active.component.userConfig.gridConfig : JSON.parse(xds.active.component.userConfig.gridConfig);\n        this.setInfo(saveInfo);\n\n    },\n    setInfo: function(info) {\n        if (info) {\n            this.scope.dataSet.setValue(info.storeName);\n            this.scope.displayMode.setValue(info.displayMode);\n            this.scope.fixedCol.setValue(info.columns);\n            var temp = [];\n            for (var i = 0; i < info.fieldsInfo.length; i++) {\n                var mixName=info.fieldsInfo[i].title + \"(\" + info.fieldsInfo[i].colId + \")\";\n          \n                if(info.fieldsInfo[i].isVirtual)\n                    mixName=info.fieldsInfo[i].title + \"(虚拟列)\";\n               \n                temp.push({\n                    mixName: mixName,\n                    name: info.fieldsInfo[i].colId,\n                    id: info.fieldsInfo[i].colId\n                })\n            }\n            this.scope.selectedField.loadData(temp)\n            this.scope.gridConfigInfo=info\n        }\n    },\n    serialize: function() {\n        var json = {\n        }\n        return json;\n    }\n})","vmdinterface":"{\"components\":[{\"cid\":\"vmduxprops\",\"layoutConfig\":{},\"userConfig\":{}},{\"cid\":\"vmduxmethods\",\"id\":\"方法\",\"layoutConfig\":{},\"userConfig\":{},\"cn\":[{\"cid\":\"uxmethod\",\"id\":\"setValue\",\"layoutConfig\":{},\"userConfig\":{\"id\":\"setValue\",\"zhname\":\"\",\"bindCmp\":\"\",\"bindValue\":\"\",\"isPublic\":\"on\",\"desc\":\"\",\"uxcid\":\"\",\"params\":\"\",\"code\":\"setInfo()\",\"returnType\":\"\"}},{\"cid\":\"uxmethod\",\"id\":\"serialize\",\"layoutConfig\":{},\"userConfig\":{\"id\":\"serialize\",\"zhname\":\"\",\"bindCmp\":\"\",\"bindValue\":\"\",\"isPublic\":\"on\",\"desc\":\"\",\"uxcid\":\"\",\"params\":\"\",\"code\":\"var json =page.controller.serialize();\\nreturn json;\",\"returnType\":\"\"}},{\"cid\":\"uxmethod\",\"id\":\"save\",\"layoutConfig\":{},\"userConfig\":{\"id\":\"save\",\"zhname\":\"\",\"bindCmp\":\"\",\"bindValue\":\"\",\"isPublic\":\"on\",\"desc\":\"\",\"uxcid\":\"\",\"params\":\"activeCmp\",\"code\":\"debugger\\nsave(activeCmp)\",\"returnType\":\"\"}}]},{\"cid\":\"vmduxevents\",\"id\":\"事件\",\"layoutConfig\":{},\"userConfig\":{}}]}","vmdresource":"{\"components\":[{\"cid\":\"vmdrescsss\",\"layoutConfig\":{},\"userConfig\":{}},{\"cid\":\"vmdresjss\",\"layoutConfig\":{},\"userConfig\":{},\"cn\":[{\"cid\":\"resjs\",\"id\":\"controller.js\",\"layoutConfig\":{},\"userConfig\":{}}]},{\"cid\":\"vmdresimgs\",\"layoutConfig\":{},\"userConfig\":{}}]}"}