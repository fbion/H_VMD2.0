{"vmdversion":"2.0.4.190717","vmdlayout":"{\"components\":[{\"cid\":\"uxpanel\",\"id\":\"SbflTreeBComponent\",\"layoutConfig\":{},\"userConfig\":{\"layout\":\"absolute\",\"header\":false,\"width\":263,\"height\":406,\"afterrender\":\"SbflTreeBComponent_afterrender\",\"autoHeight\":true}}]}","vmdevents":"var thisComponent;\nvar page = this;\n\n\n\nfunction SbflTreeBComponent_afterrender(sender){\n    //获取参数并处理\n    thisComponent = new hw.comps.busi.SbflTreeBComponent({\n        options:{\n            skin: page.skin || 'maintainableTree-default',//皮肤\n            //树组件\n            treeStore: page.treeStore,//树数据集\n            classSystem: page.classSystem,//分类系统ID\n            servicePath: page.servicePath,//服务接口地址\n            showMenu: page.showMenu,//是否展示右键菜单\n            parentField: page.parentField,//父节点字段\n            valueField: page.valueField,//值字段\n            displayField: page.displayField,//显示字段\n            folderIcon: page.folderIcon,//文件夹图标\n            leafIcon: page.leafIcon,//叶子节点图标\n            allowCheckbox: page.allowCheckbox,//是否展示复选框\n            showRoot: page.showRoot,//是否展示根节点\n            rootText: page.rootText,//根节点名称\n            rootValue: page.rootValue,//根节点值\n            openAllItems: page.openAllItems,//展开所有节点\n            enableDragAndDrop: page.enableDragAndDrop//允许树节点拖动\n            \n        },\n        events:{\n            \n            onTreeSelect: function(param1){\n                page.fireEvent('onTreeSelect', page, param1);\n            },\n            onTreeChecked: function(param1){\n                page.fireEvent('onTreeChecked', page, param1);\n            },\n            onTreeDbClick: function(param1){\n                page.fireEvent('onTreeDbClick', page, param1);\n            },\n            onTreeRightClick: function(param1){\n                page.fireEvent('onTreeRightClick', page, param1);\n            }\n        }\n    }, sender);\n    \n    //数据绑定 \n    if(page.treeStore) {\n\t\t//var store = Ext.getCmp(page.treeStore);\n\t\tvar store = page.treeStore;\n\t\tif(store) {\n\n\t\t\tstore = Ext.StoreMgr.lookup(store);\n\t\t\tstore.on({\n\t\t\t\tscope: this,\n\t\t\t\tdatachanged: function(){\n        \t\t\tvar records = page.treeStore.getRange();\n        \t\t\tvar dhxdata = [];\n        \t\t\tif(records.length < 1) {\n            \t\t} else {\n            \t\t\t//返回dhx组件数据的格式，将dhxcombostore的源码放到此处\n            \t\t\tfor(var i = 0; i < records.length; i++) {\n            \t\t\t\tvar item = Ext.apply(records[i].data, {\n            \t\t\t\t    id: records[i].data[page.valueField],\n            \t\t\t\t    value: records[i].data[page.valueField],\n            \t\t\t\t    text: records[i].data[page.displayField]\n            \t\t\t\t})\n            \t\t\t\tdhxdata.push(item);\n            \t\t\t}\n            \t\t\t\n            \t\t}\n            \t\tthisComponent._setTreeData(dhxdata);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\t\n}","vmdcss":".layui-layer-imgbar,.layui-layer-imgtit a,.layui-layer-tab .layui-layer-title span,.layui-layer-title{text-overflow:ellipsis;white-space:nowrap}html #layuicss-layer{display:none;position:absolute;width:1989px}.layui-layer,.layui-layer-shade{position:fixed;_position:absolute;pointer-events:auto}.layui-layer-shade{top:0;left:0;width:100%;height:100%;_height:expression(document.body.offsetHeight+\"px\")}.layui-layer{-webkit-overflow-scrolling:touch;top:150px;left:0;margin:0;padding:0;background-color:#fff;-webkit-background-clip:content;border-radius:2px;box-shadow:1px 1px 50px rgba(0,0,0,.3)}.layui-layer-close{position:absolute}.layui-layer-content{position:relative}.layui-layer-border{border:1px solid #B2B2B2;border:1px solid rgba(0,0,0,.1);box-shadow:1px 1px 5px rgba(0,0,0,.2)}.layui-layer-load{background:url(loading-1.gif) center center no-repeat #eee}.layui-layer-ico{background:url(icon.png) no-repeat}.layui-layer-btn a,.layui-layer-dialog .layui-layer-ico,.layui-layer-setwin a{display:inline-block;*display:inline;*zoom:1;vertical-align:top}.layui-layer-move{display:none;position:fixed;*position:absolute;left:0;top:0;width:100%;height:100%;cursor:move;opacity:0;filter:alpha(opacity=0);background-color:#fff;z-index:2147483647}.layui-layer-resize{position:absolute;width:15px;height:15px;right:0;bottom:0;cursor:se-resize}.layer-anim{-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-duration:.3s;animation-duration:.3s}@-webkit-keyframes layer-bounceIn{0%{opacity:0;-webkit-transform:scale(.5);transform:scale(.5)}100%{opacity:1;-webkit-transform:scale(1);transform:scale(1)}}@keyframes layer-bounceIn{0%{opacity:0;-webkit-transform:scale(.5);-ms-transform:scale(.5);transform:scale(.5)}100%{opacity:1;-webkit-transform:scale(1);-ms-transform:scale(1);transform:scale(1)}}.layer-anim-00{-webkit-animation-name:layer-bounceIn;animation-name:layer-bounceIn}@-webkit-keyframes layer-zoomInDown{0%{opacity:0;-webkit-transform:scale(.1) translateY(-2000px);transform:scale(.1) translateY(-2000px);-webkit-animation-timing-function:ease-in-out;animation-timing-function:ease-in-out}60%{opacity:1;-webkit-transform:scale(.475) translateY(60px);transform:scale(.475) translateY(60px);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}}@keyframes layer-zoomInDown{0%{opacity:0;-webkit-transform:scale(.1) translateY(-2000px);-ms-transform:scale(.1) translateY(-2000px);transform:scale(.1) translateY(-2000px);-webkit-animation-timing-function:ease-in-out;animation-timing-function:ease-in-out}60%{opacity:1;-webkit-transform:scale(.475) translateY(60px);-ms-transform:scale(.475) translateY(60px);transform:scale(.475) translateY(60px);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}}.layer-anim-01{-webkit-animation-name:layer-zoomInDown;animation-name:layer-zoomInDown}@-webkit-keyframes layer-fadeInUpBig{0%{opacity:0;-webkit-transform:translateY(2000px);transform:translateY(2000px)}100%{opacity:1;-webkit-transform:translateY(0);transform:translateY(0)}}@keyframes layer-fadeInUpBig{0%{opacity:0;-webkit-transform:translateY(2000px);-ms-transform:translateY(2000px);transform:translateY(2000px)}100%{opacity:1;-webkit-transform:translateY(0);-ms-transform:translateY(0);transform:translateY(0)}}.layer-anim-02{-webkit-animation-name:layer-fadeInUpBig;animation-name:layer-fadeInUpBig}@-webkit-keyframes layer-zoomInLeft{0%{opacity:0;-webkit-transform:scale(.1) translateX(-2000px);transform:scale(.1) translateX(-2000px);-webkit-animation-timing-function:ease-in-out;animation-timing-function:ease-in-out}60%{opacity:1;-webkit-transform:scale(.475) translateX(48px);transform:scale(.475) translateX(48px);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}}@keyframes layer-zoomInLeft{0%{opacity:0;-webkit-transform:scale(.1) translateX(-2000px);-ms-transform:scale(.1) translateX(-2000px);transform:scale(.1) translateX(-2000px);-webkit-animation-timing-function:ease-in-out;animation-timing-function:ease-in-out}60%{opacity:1;-webkit-transform:scale(.475) translateX(48px);-ms-transform:scale(.475) translateX(48px);transform:scale(.475) translateX(48px);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}}.layer-anim-03{-webkit-animation-name:layer-zoomInLeft;animation-name:layer-zoomInLeft}@-webkit-keyframes layer-rollIn{0%{opacity:0;-webkit-transform:translateX(-100%) rotate(-120deg);transform:translateX(-100%) rotate(-120deg)}100%{opacity:1;-webkit-transform:translateX(0) rotate(0);transform:translateX(0) rotate(0)}}@keyframes layer-rollIn{0%{opacity:0;-webkit-transform:translateX(-100%) rotate(-120deg);-ms-transform:translateX(-100%) rotate(-120deg);transform:translateX(-100%) rotate(-120deg)}100%{opacity:1;-webkit-transform:translateX(0) rotate(0);-ms-transform:translateX(0) rotate(0);transform:translateX(0) rotate(0)}}.layer-anim-04{-webkit-animation-name:layer-rollIn;animation-name:layer-rollIn}@keyframes layer-fadeIn{0%{opacity:0}100%{opacity:1}}.layer-anim-05{-webkit-animation-name:layer-fadeIn;animation-name:layer-fadeIn}@-webkit-keyframes layer-shake{0%,100%{-webkit-transform:translateX(0);transform:translateX(0)}10%,30%,50%,70%,90%{-webkit-transform:translateX(-10px);transform:translateX(-10px)}20%,40%,60%,80%{-webkit-transform:translateX(10px);transform:translateX(10px)}}@keyframes layer-shake{0%,100%{-webkit-transform:translateX(0);-ms-transform:translateX(0);transform:translateX(0)}10%,30%,50%,70%,90%{-webkit-transform:translateX(-10px);-ms-transform:translateX(-10px);transform:translateX(-10px)}20%,40%,60%,80%{-webkit-transform:translateX(10px);-ms-transform:translateX(10px);transform:translateX(10px)}}.layer-anim-06{-webkit-animation-name:layer-shake;animation-name:layer-shake}@-webkit-keyframes fadeIn{0%{opacity:0}100%{opacity:1}}.layui-layer-title{padding:0 80px 0 20px;height:42px;line-height:42px;border-bottom:1px solid #eee;font-size:14px;color:#333;overflow:hidden;background-color:#F8F8F8;border-radius:2px 2px 0 0}.layui-layer-setwin{position:absolute;right:15px;*right:0;top:15px;font-size:0;line-height:initial}.layui-layer-setwin a{position:relative;width:16px;height:16px;margin-left:10px;font-size:12px;_overflow:hidden}.layui-layer-setwin .layui-layer-min cite{position:absolute;width:14px;height:2px;left:0;top:50%;margin-top:-1px;background-color:#2E2D3C;cursor:pointer;_overflow:hidden}.layui-layer-setwin .layui-layer-min:hover cite{background-color:#2D93CA}.layui-layer-setwin .layui-layer-max{background-position:-32px -40px}.layui-layer-setwin .layui-layer-max:hover{background-position:-16px -40px}.layui-layer-setwin .layui-layer-maxmin{background-position:-65px -40px}.layui-layer-setwin .layui-layer-maxmin:hover{background-position:-49px -40px}.layui-layer-setwin .layui-layer-close1{background-position:1px -40px;cursor:pointer}.layui-layer-setwin .layui-layer-close1:hover{opacity:.7}.layui-layer-setwin .layui-layer-close2{position:absolute;right:-28px;top:-28px;width:30px;height:30px;margin-left:0;background-position:-149px -31px;*right:-18px;_display:none}.layui-layer-setwin .layui-layer-close2:hover{background-position:-180px -31px}.layui-layer-btn{text-align:right;padding:0 15px 12px;pointer-events:auto;user-select:none;-webkit-user-select:none}.layui-layer-btn a{height:28px;line-height:28px;margin:5px 5px 0;padding:0 15px;border:1px solid #dedede;background-color:#fff;color:#333;border-radius:2px;font-weight:400;cursor:pointer;text-decoration:none}.layui-layer-btn a:hover{opacity:.9;text-decoration:none}.layui-layer-btn a:active{opacity:.8}.layui-layer-btn .layui-layer-btn0{border-color:#1E9FFF;background-color:#1E9FFF;color:#fff}.layui-layer-btn-l{text-align:left}.layui-layer-btn-c{text-align:center}.layui-layer-dialog{min-width:260px}.layui-layer-dialog .layui-layer-content{position:relative;padding:20px;line-height:24px;word-break:break-all;overflow:hidden;font-size:14px;overflow-x:hidden;overflow-y:auto}.layui-layer-dialog .layui-layer-content .layui-layer-ico{position:absolute;top:16px;left:15px;_left:-40px;width:30px;height:30px}.layui-layer-ico1{background-position:-30px 0}.layui-layer-ico2{background-position:-60px 0}.layui-layer-ico3{background-position:-90px 0}.layui-layer-ico4{background-position:-120px 0}.layui-layer-ico5{background-position:-150px 0}.layui-layer-ico6{background-position:-180px 0}.layui-layer-rim{border:6px solid #8D8D8D;border:6px solid rgba(0,0,0,.3);border-radius:5px;box-shadow:none}.layui-layer-msg{min-width:180px;border:1px solid #D3D4D3;box-shadow:none}.layui-layer-hui{min-width:100px;background-color:#000;filter:alpha(opacity=60);background-color:rgba(0,0,0,.6);color:#fff;border:none}.layui-layer-hui .layui-layer-content{padding:12px 25px;text-align:center}.layui-layer-dialog .layui-layer-padding{padding:20px 20px 20px 55px;text-align:left}.layui-layer-page .layui-layer-content{position:relative;overflow:auto}.layui-layer-iframe .layui-layer-btn,.layui-layer-page .layui-layer-btn{padding-top:10px}.layui-layer-nobg{background:0 0}.layui-layer-iframe iframe{display:block;width:100%}.layui-layer-loading{border-radius:100%;background:0 0;box-shadow:none;border:none}.layui-layer-loading .layui-layer-content{width:60px;height:24px;background:url(loading-0.gif) no-repeat}.layui-layer-loading .layui-layer-loading1{width:37px;height:37px;background:url(loading-1.gif) no-repeat}.layui-layer-ico16,.layui-layer-loading .layui-layer-loading2{width:32px;height:32px;background:url(loading-2.gif) no-repeat}.layui-layer-tips{background:0 0;box-shadow:none;border:none}.layui-layer-tips .layui-layer-content{position:relative;line-height:22px;min-width:12px;padding:8px 15px;font-size:12px;_float:left;border-radius:2px;box-shadow:1px 1px 3px rgba(0,0,0,.2);background-color:#000;color:#fff}.layui-layer-tips .layui-layer-close{right:-2px;top:-1px}.layui-layer-tips i.layui-layer-TipsG{position:absolute;width:0;height:0;border-width:8px;border-color:transparent;border-style:dashed;*overflow:hidden}.layui-layer-tips i.layui-layer-TipsB,.layui-layer-tips i.layui-layer-TipsT{left:5px;border-right-style:solid;border-right-color:#000}.layui-layer-tips i.layui-layer-TipsT{bottom:-8px}.layui-layer-tips i.layui-layer-TipsB{top:-8px}.layui-layer-tips i.layui-layer-TipsL,.layui-layer-tips i.layui-layer-TipsR{top:5px;border-bottom-style:solid;border-bottom-color:#000}.layui-layer-tips i.layui-layer-TipsR{left:-8px}.layui-layer-tips i.layui-layer-TipsL{right:-8px}.layui-layer-lan[type=dialog]{min-width:280px}.layui-layer-lan .layui-layer-title{background:#4476A7;color:#fff;border:none}.layui-layer-lan .layui-layer-btn{padding:5px 10px 10px;text-align:right;border-top:1px solid #E9E7E7}.layui-layer-lan .layui-layer-btn a{background:#fff;border-color:#E9E7E7;color:#333}.layui-layer-lan .layui-layer-btn .layui-layer-btn1{background:#C9C5C5}.layui-layer-molv .layui-layer-title{background:#009f95;color:#fff;border:none}.layui-layer-molv .layui-layer-btn a{background:#009f95;border-color:#009f95}.layui-layer-molv .layui-layer-btn .layui-layer-btn1{background:#92B8B1}.layui-layer-iconext{background:url(icon-ext.png) no-repeat}.layui-layer-prompt .layui-layer-input{display:block;width:230px;height:36px;margin:0 auto;line-height:30px;padding-left:10px;border:1px solid #e6e6e6;color:#333}.layui-layer-prompt textarea.layui-layer-input{width:300px;height:100px;line-height:20px;padding:6px 10px}.layui-layer-prompt .layui-layer-content{padding:20px}.layui-layer-prompt .layui-layer-btn{padding-top:0}.layui-layer-tab{box-shadow:1px 1px 50px rgba(0,0,0,.4)}.layui-layer-tab .layui-layer-title{padding-left:0;overflow:visible}.layui-layer-tab .layui-layer-title span{position:relative;float:left;min-width:80px;max-width:260px;padding:0 20px;text-align:center;overflow:hidden;cursor:pointer}.layui-layer-tab .layui-layer-title span.layui-this{height:43px;border-left:1px solid #eee;border-right:1px solid #eee;background-color:#fff;z-index:10}.layui-layer-tab .layui-layer-title span:first-child{border-left:none}.layui-layer-tabmain{line-height:24px;clear:both}.layui-layer-tabmain .layui-layer-tabli{display:none}.layui-layer-tabmain .layui-layer-tabli.layui-this{display:block}.layui-layer-photos{-webkit-animation-duration:.8s;animation-duration:.8s}.layui-layer-photos .layui-layer-content{overflow:hidden;text-align:center}.layui-layer-photos .layui-layer-phimg img{position:relative;width:100%;display:inline-block;*display:inline;*zoom:1;vertical-align:top}.layui-layer-imgbar,.layui-layer-imguide{display:none}.layui-layer-imgnext,.layui-layer-imgprev{position:absolute;top:50%;width:27px;_width:44px;height:44px;margin-top:-22px;outline:0;blr:expression(this.onFocus=this.blur())}.layui-layer-imgprev{left:10px;background-position:-5px -5px;_background-position:-70px -5px}.layui-layer-imgprev:hover{background-position:-33px -5px;_background-position:-120px -5px}.layui-layer-imgnext{right:10px;_right:8px;background-position:-5px -50px;_background-position:-70px -50px}.layui-layer-imgnext:hover{background-position:-33px -50px;_background-position:-120px -50px}.layui-layer-imgbar{position:absolute;left:0;bottom:0;width:100%;height:32px;line-height:32px;background-color:rgba(0,0,0,.8);background-color:#000\\9;filter:Alpha(opacity=80);color:#fff;overflow:hidden;font-size:0}.layui-layer-imgtit *{display:inline-block;*display:inline;*zoom:1;vertical-align:top;font-size:12px}.layui-layer-imgtit a{max-width:65%;overflow:hidden;color:#fff}.layui-layer-imgtit a:hover{color:#fff;text-decoration:underline}.layui-layer-imgtit em{padding-left:10px;font-style:normal}@-webkit-keyframes layer-bounceOut{100%{opacity:0;-webkit-transform:scale(.7);transform:scale(.7)}30%{-webkit-transform:scale(1.05);transform:scale(1.05)}0%{-webkit-transform:scale(1);transform:scale(1)}}@keyframes layer-bounceOut{100%{opacity:0;-webkit-transform:scale(.7);-ms-transform:scale(.7);transform:scale(.7)}30%{-webkit-transform:scale(1.05);-ms-transform:scale(1.05);transform:scale(1.05)}0%{-webkit-transform:scale(1);-ms-transform:scale(1);transform:scale(1)}}.layer-anim-close{-webkit-animation-name:layer-bounceOut;animation-name:layer-bounceOut;-webkit-animation-fill-mode:both;animation-fill-mode:both;-webkit-animation-duration:.2s;animation-duration:.2s}@media screen and (max-width:1100px){.layui-layer-iframe{overflow-y:auto;-webkit-overflow-scrolling:touch}}\n.maintainableTree-default{\n    background-color: #FFF;\n}\n.inputform {\n    table-layout: fixed;\n    width: 500px;\n    border-collapse: separate;\n    border-spacing: 0px 10px;\n    font-family: \"microsoft yahei ui\", \"microsoft yahei\", simsun, sans-serif;\n    font-size: 14px;\n}\n.lbltd {\n    width: 20%;\n    height: 35px;\n    color: #000;\n    text-align: left;\n    padding: 0 0;\n    padding-right: 16px;\n    text-align: right;\n    border: 0px;\n    font-family: \"microsoft yahei ui\", \"microsoft yahei\", simsun, sans-serif;\n}\n.in {\n    width: 70%;\n    /*border: 1px solid #e4e4e4;*/\n    /*border-radius: 4px;*/\n    font-family: \"microsoft yahei ui\", \"microsoft yahei\", simsun, sans-serif;\n}\n.hiddentd {\n    width: 10%;\n}\ninput[type=text], input[type=password], input[type=password] {\n    width:95%;\n    height: 27px;\n    font-size: 14px;\n    line-height: 27px;\n    padding-left: 8px;\n    background-color: #fff;\n    font-family: \"microsoft yahei ui\", \"microsoft yahei\", simsun, sans-serif;\n    /*border: 1px solid #b2bdc5;*/\n    /*border-radius: 4px;*/\n}\ntextarea{\n    padding-left: 8px;\n    line-height: 27px;\n    font-size: 14px;\n    font-family: \"microsoft yahei ui\", \"microsoft yahei\", simsun, sans-serif;\n}\n/*保存按钮*/\n.footer {\n    width: 300px;\n    height: 40px;\n    margin: 0 auto;\n    line-height: 40px;\n    margin-bottom: 10px;\n    margin-top: 2px;\n    text-align: center;\n}\n\n.btn {\n    display: inline-block;\n    margin: 0;\n    color: #fff;\n    border: 0px solid #b2d2fc;\n    font-weight: 300;\n    font-size: 14px;\n    font-family: PingFangSC, \"helvetica neue\", \"hiragino sans gb\", arial, \"microsoft yahei ui\", \"microsoft yahei\", simsun, sans-serif;\n    text-decoration: none;\n    text-align: center;\n    line-height: 30px;\n    height: 30px;\n    width: 80px;\n    border-radius: 5px;\n    cursor: pointer;\n    -webkit-box-sizing: border-box;\n    -moz-box-sizing: border-box;\n    box-sizing: border-box;\n    -webkit-transition-property: all;\n    transition-property: all;\n    -webkit-transition-duration: .3s;\n    transition-duration: .3s;\n}\n\n\n.btn {\n    text-align: center;\n    height: 30px;\n    line-height: 27px;\n    color: #fff;\n    border-width: 0px;\n    background-color: #599fff;\n    border-radius: 4px;\n}\n.btn_font_2 {\n    width: 80px;\n}\n.padd8 {\n    padding-right: 4px;\n    padding-left: 4px;\n}\n/*必填项字体颜色*/\n.rg6{\n    color:#F00;\n}\n.btn_cancle {\n    text-align: center;\n    height: 29px;\n    line-height: 27px;\n    color: #2E2E2E;\n    border: 1px solid #e4e4e4;\n    background-color: #fff;\n    border-radius: 4px;\n    cursor:pointer;\n}","vmdprops":"\"\"","type":"ux","vmdevents_controller":"Ext.define('hw.comps.busi.SbflTreeBComponent', {\n    xtype: 'hw.comps.busi.SbflTreeBComponent',\n    tmpl: '<div class=\"{{compClass}}\" style=\"{{compStyle}}\" id=\"{{compId}}\">' +\n        '<div class=\"tree-container\"></div>' +\n        '<div class=\"formDiv\" style=\"display:none;\">' +\n        '<table class=\"inputform\" cellspacing=\"0\" cellpadding=\"5\">' +\n        '<tbody>' +\n        '<tr class=\"typehid\">' +\n        '<td class=\"lbltd\"><span class=\"rg6\">*</span>分类名称</td>' +\n        '<td class=\"in\">' +\n        '<input id=\"flId\" type=\"hidden\" value=\"\">' +\n        '<input class=\"inputstyle\" style=\"width:98%\" id=\"flmc\" type=\"text\" placeholder=\"请输入分类名称\">' +\n        '</td>' +\n        '<td class=\"hiddentd\"></td>' +\n        '</tr>' +\n        '<tr class=\"typehid\">' +\n        '<td class=\"lbltd\">类型分类</td>' +\n        '<td class=\"in\">' +\n        '<input class=\"inputstyle\" style=\"width:98%\" type=\"text\"  id=\"lefl\"  list=\"optionList123\" class=\"form-control\"/><datalist id=\"optionList123\"><option value=\"A\">A</option><option value=\"B\">B</option><option value=\"C\">C</option></datalist>' +\n        '</td>' +\n        '<td class=\"hiddentd\"></td>' +\n        '</tr>' +\n        '</tbody></table>' +\n        '<div class=\"footer\">' +\n        '<input type=\"button\" class=\"btn btn_font_2\" value=\"保&nbsp;存\" id=\"saveClass\">' +\n        '<span class=\"padd8\"></span>' +\n        '<input type=\"button\" class=\"btn_cancle btn_font_2\" value=\"关&nbsp;闭\" id=\"cancel\"/>' +\n        '</div>' +\n        '</div>' +\n        '</div>',\n    defaultOpts: { //默认配置项\n        options: {\n            /*容器属性*/\n            container: '',\n            width: 300,\n            height: 300,\n            /*样式属性*/\n            componentCls: 'maintainableTree-default',\n            /*功能属性*/\n            //树组件\n            showMenu: false, //是否展示树菜单\n            parentField: '', //父节点字段\n            valueField: '', //值字段\n            displayField: '', //显示字段\n            folderIcon: '', //文件夹图标\n            leafIcon: '', //叶子节点图标\n            allowCheckbox: false, //是否展示复选框\n            showRoot: false, //展示根节点\n            rootText: '', //根节点名称\n            rootValue: '', //根节点值\n            servicePath: '', //服务接口地址\n            openAllItems: false, //展开所有节点\n            enableDragAndDrop: false //允许节点拖动\n\n        },\n        events: {\n\n        }\n\n    },\n    //构造函数，默认初始化组件\n    constructor: function(options, containerobj) {\n        this.context = {\n            tree: null, //树组件\n            menu: null //树右键菜单\n        }\n\n        this.context.opts = $.extend({}, this.defaultOpts.options, options.options);\n        this.context.events = $.extend({}, this.defaultOpts.options, options.events);\n        //编译模板\n        var htmldata = this._initTmpl();\n\n        //渲染到容器中\n        if (containerobj) {\n            this.context.env = 'vmd';\n            containerobj.update(htmldata);\n            this.context.container = $(\"#\" + this.context.compId);\n            this._init(containerobj);\n        } else if (this.context.opts.container) {\n            this.context.env = 'dev';\n            this.context.container.html(htmldata);\n            this.context.container = typeof(this.context.opts.container) == \"object\" ? $(this.context.opts.container) : $(\"#\" + this.context.opts.container);\n            var container = {};\n            container.lastSize = {\n                height: this.context.container.height(),\n                width: this.context.container.width()\n            };\n            this._init(container);\n        }\n    },\n    //初始化模板\n    _initTmpl: function() {\n        var tmplconf = {\n            // compClass: this.context.opts.componentCls,\n            compClass: this.context.opts.skin,\n            compStyle: '',\n            compId: this._guid(),\n            compLabelText: this.context.opts.labelText,\n            compSpace: this.context.opts.labelInputMargin ? 'width:' + this.context.opts.labelInputMargin + 'px' : '',\n            compPlaceholder: this.context.opts.inputPlaceholder,\n            compReadonly: this.context.opts.readonly ? 'readonly=\"true\"' : ''\n        };\n\n        if (this.context.opts.with) tmplconf.compstyle += ';width:' + this.context.opts.with + 'px';\n        if (this.context.opts.height) tmplconf.compstyle += ';height:' + this.context.opts.height + 'px';\n        if (this.context.opts.lineHeight) tmplconf.compstyle += ';line-height:' + this.context.opts.lineHeight + 'px';\n\n        var htmldata = template.compile(this.tmpl)(tmplconf);\n\n        this.context.compId = tmplconf.compId; //设置组件id\n\n        return htmldata;\n    },\n    _init: function(containerobj) {\n\n        this.context.container.find(\".tree-container\").width(containerobj.lastSize.width).height(containerobj.lastSize.height);\n        //渲染树\n        this._initTree();\n\n        //初始化事件绑定\n        this._initEvent();\n    },\n    //初始化树组件\n    _initTree: function() {\n        var that = this;\n        var tree = new dhtmlXTreeObject(this.context.container.find(\".tree-container\")[0], '100%', '100%', 0);\n        tree.setSkin('dhx_skyblue');\n        tree.setImagePath(\"/lib/dhtmlx/imgs/dhxtree_material/\");\n        //允许拖动\n        if (this.context.opts.enableDragAndDrop) {\n            tree.enableDragAndDrop(true);\n            tree.setDragBehavior(\"complex\");\n            //监听拖动\n            tree.attachEvent(\"onDrop\", function(sId, tId, id, sObject, tObject) {\n                //保存树节点打开状态\n                that.context.tree.saveOpenStates();\n                //调用服务保存节点位置\n                //修改数据\n                var data = {\n                    id: sId,\n                    pid: tId,\n                    xh: that.context.tree.getIndexById(sId) + 1,\n\n\n                };\n                index = layer.load(1, {\n                    shade: [0.1, '#fff'] //0.1透明度的白色背景\n                });\n                hwDas.edit({\n                        host: vmd.workspace.dataServiceIp,\n                        url: that.context.opts.servicePath\n                    }, {}, {}, [data],\n                    function(result) {\n                        //选中节点并触发节点选中事件\n                        layer.closeAll();\n                        if (vmd.tip) {\n                            vmd.tip('分类树修改成功！', 'waring');\n                        } else {\n                            layer.msg(\"分类树修改成功！\");\n                        }\n                        //重新加载数据\n                        that.context.opts.treeStore.toRefresh(function() {\n                            that.context.tree.loadOpenStates();\n                        });\n                    },\n                    function(msg) {\n                        layer.alert(\"分类树修改失败！\");\n                        return false;\n                    }\n                );\n            });\n        }\n        //是否展示复选框\n        if (this.context.opts.allowCheckbox) {\n            tree.enableCheckBoxes(true);\n            tree.enableThreeStateCheckboxes(true);\n            //选中文本自动选中复选框\n            var that = this;\n            tree.attachEvent(\"onClick\", function(id) {\n                if (that.context.tree.isItemChecked(id)) {\n                    that.context.tree.setCheck(id, 0);\n                } else {\n                    that.context.tree.setCheck(id, 1);\n                }\n\n            });\n        }\n        //是否展示根节点\n        if (this.context.opts.showRoot) {\n            tree.loadJSArray([\n                [this.context.opts.rootValue != '' ? this.context.opts.rootValue : 'root', 0, this.context.opts.rootText != '' ? this.context.opts.rootText : '根节点']\n            ]);\n        }\n        if (this.context.opts.showMenu) {\n            //添加右键菜单\n          var   menu = new dhtmlXMenuObject();\n            menu.relationTree = tree;\n            menu.renderAsContextMenu();\n            menu.renderAsContextMenu();\n            // menu.addNewChild(null, 0, \"addChildNode\", \"添加下级节点\", false, \"\");\n            // menu.addNewChild(null, 1, \"addNode\", \"添加同级节点\", false, \"\");\n            // menu.addNewChild(null, 2, \"editNode\", \"编辑\", false, \"\");\n            // menu.addNewChild(null, 3, \"delNode\", \"删除\", false, \"\");\n            // menu.addNewChild(null, 4, \"nodeup\", \"上移\", true, \"\");\n            // menu.addNewChild(null, 5, \"nodedown\", \"下移\", true, \"\");\n            //右击前事件\n            tree.attachEvent(\"onBeforeContextMenu\", function(itemId) {\n                if (itemId) {\n                    //设置选中树节点\n                    that.context.tree.treeSelectedId = itemId;\n                    var pid = tree.getParentId(itemId);\n                    if (pid == '0') {\n                        //删除节点\n                        menu.removeItem(\"addType\");\n                        menu.removeItem(\"editType\");\n                        menu.removeItem(\"delNode\");\n                        menu.removeItem(\"addChildNode\");\n                        menu.removeItem(\"addNode\");\n                        menu.removeItem(\"editNode\");\n                        menu.removeItem(\"nodeup\");\n                        menu.removeItem(\"nodedown\");\n                        menu.addNewChild(null, 6, \"addType\", \"添加同级分类\", false, \"\");\n                        menu.addNewChild(null, 0, \"addChildNode\", \"添加下级节点\", false, \"\");\n\n                        var arrayChildrenNode = tree.getSubItems(itemId);\n                        //判断是否有下级分类，如果有则不允许删除\n                        if (arrayChildrenNode.length > 0 || itemId == (getUrlParam && getUrlParam(\"jcdid\")) || itemId == \"root\") {\n                            menu.addNewChild(null, 2, \"editType\", \"编辑\", true, \"\");\n                            menu.addNewChild(null, 3, \"delNode\", \"删除\", true, \"\");\n                        } else {\n                            menu.addNewChild(null, 2, \"editType\", \"编辑\", false, \"\");\n                            menu.addNewChild(null, 3, \"delNode\", \"删除\", false, \"\");\n                        }\n\n\n                    } else {\n                        //删除节点\n                        menu.removeItem(\"addType\");\n                        menu.removeItem(\"addChildNode\");\n                        menu.removeItem(\"addNode\");\n                        menu.removeItem(\"editType\");\n                        menu.removeItem(\"editNode\");\n                        menu.removeItem(\"delNode\");\n                        menu.removeItem(\"nodeup\");\n                        menu.removeItem(\"nodedown\");\n\n                        menu.addNewChild(null, 1, \"addNode\", \"添加同级节点\", false, \"\");\n                        menu.addNewChild(null, 0, \"addChildNode\", \"添加下级节点\", false, \"\");\n                        menu.addNewChild(null, 2, \"editNode\", \"编辑\", false, \"\");\n                        var arrayChildrenNode = tree.getSubItems(itemId);\n                        //实现上移下移功能，只有在分类系统中需要\n\n                        menu.addNewChild(null, 4, \"nodeup\", \"上移\", false, \"\");\n                        menu.addNewChild(null, 5, \"nodedown\", \"下移\", false, \"\");\n\n                        //判断是否有下级分类，如果有则不允许删除\n                        if (arrayChildrenNode.length > 0) {\n                            menu.addNewChild(null, 3, \"delNode\", \"删除\", true, \"\");\n                        } else {\n                            menu.addNewChild(null, 3, \"delNode\", \"删除\", false, \"\");\n                        }\n                    }\n                } else {\n                    //设置不可用\n                    menu.setItemDisabled(\"addChildNode\");\n                    menu.setItemDisabled(\"addNode\");\n                    menu.setItemDisabled(\"editNode\");\n                    menu.setItemDisabled(\"delNode\");\n                    menu.setItemDisabled(\"nodeup\");\n                    menu.setItemDisabled(\"nodedown\");\n                }\n                return true;\n            });\n            //添加，编辑点击事件\n            menu.attachEvent(\"onClick\", function(menuitemId) {\n                if (!tree.contextID) {\n                    tree.contextID = tree.getSelectedId();\n                }\n                if (menuitemId == \"addChildNode\") {\n                    that.addChildNode(tree, tree.contextID, tree.getItemText(tree.contextID));\n                } else if (menuitemId == \"editNode\") {\n                    that.editNode(tree, tree.contextID, tree.getItemText(tree.contextID));\n                } else if (menuitemId == \"delNode\") {\n                    that.delNode(tree, tree.contextID, tree.getItemText(tree.contextID));\n                } else if (menuitemId == \"nodeup\") {\n                    that.nodeUp(tree, tree.contextID, tree.getParentId(tree.contextID));\n                } else if (menuitemId == \"nodedown\") {\n                    that.nodeDown(tree, tree.contextID, tree.getParentId(tree.contextID));\n                } else if (menuitemId == \"addNode\") {\n                    that.addNode(tree, tree.getParentId(tree.contextID), tree.getParentId(tree.contextID));\n                } else if (menuitemId == \"addType\") {\n                    that.addNode(tree, tree.getParentId(tree.contextID), tree.getParentId(tree.contextID), 'addType');\n                } else if (menuitemId == \"editType\") {\n                    that.editNode(tree, tree.contextID, tree.getItemText(tree.contextID), 'editType');\n                }\n            });\n            this.context.menu = menu;\n            tree.enableContextMenu(menu);\n        }\n\n        //取消按钮\n        $(\"#cancel\").on(\"click\", function() {\n            layer.closeAll();\n        });\n        //确定按钮\n        $(\"#saveClass\").on(\"click\", function() {\n            index = layer.load(1, {\n                shade: [0.1, '#fff'] //0.1透明度的白色背景\n            });\n            //保存树节点打开状态\n            that.context.tree.saveOpenStates();\n            switch (that.context.tree.operation) {\n                case \"add\":\n                    {\n                        var guid = new Date().getTime();\n                        var pid = that.context.tree.isSubNode ? that.context.tree.treeSelectedId : that.context.tree.getParentId(that.context.tree.treeSelectedId);\n                        if (pid == \"root\") {\n                            pid = 0;\n                        }\n                        //校验\n                        if (($(\"#flmc\").val() + \"\").length == 0) {\n                            layer.alert(\"请输入分类名称！\");\n                            layer.close(index);\n                            return;\n                        }\n                        var data = {\n                            class_system: that.context.opts.classSystem,\n                            name: $(\"#flmc\").val(),\n                            description: $(\"#lefl\").val(),\n                            pid: pid,\n\n                        };\n\n                        hwDas.add({\n                                host: vmd.workspace.dataServiceIp,\n                                url: that.context.opts.servicePath\n                            }, {}, {}, [data],\n                            function(result) {\n                                debugger;\n                                layer.closeAll();\n                                layer.alert('分类添加成功!');\n                                //重新加载数据\n                                that.context.opts.treeStore.toRefresh(function() {\n                                    that.context.tree.loadOpenStates();\n                                    //获取新添加的节点ID\n                                    // var nodeId = \"\";\n                                    // that.context.tree.preserved(nodeId, true, false);\n                                });\n\n                            },\n                            function(msg) {\n                                debugger;\n                                layer.alert('分类添加失败！');\n                            });\n                    };\n                    break;\n                case \"edit\":\n                    {\n                        //修改数据\n                        var data = {\n                            id: $(\"#flId\").val(),\n                            name: $(\"#flmc\").val(),\n                            description: $(\"#lefl\").val(),\n                            form_id: getUrlParam && getUrlParam(\"jcdid\") //考核系统用\n                        };\n                        //校验\n                        if (($(\"#flmc\").val() + \"\").length == 0) {\n                            layer.alert(\"请输入分类名称！\");\n                            layer.close(index);\n                            return\n                        }\n                        hwDas.edit({\n                                host: vmd.workspace.dataServiceIp,\n                                url: that.context.opts.servicePath\n                            }, {}, {}, [data],\n                            function(result) {\n                                //选中节点并触发节点选中事件\n                                layer.closeAll();\n                                layer.alert(\"分类修改成功！\");\n                                //重新加载数据\n                                that.context.opts.treeStore.toRefresh(function() {\n                                    that.context.tree.loadOpenStates();\n                                    var nodeId = $(\"#flId\").val();\n                                    that.context.tree.preserved(nodeId, true, false);\n\n                                });\n                            },\n                            function(msg) {\n                                layer.alert(\"分类修改失败！\");\n                                layer.close(index);\n                                return false;\n                            }\n                        );\n                    };\n                    break;\n\n            }\n\n        });\n        this.context.tree = tree;\n    },\n    //加载树组件数据\n    _setTreeData: function(data) {\n        //数据转换 二维表转数组\n        var treeData = [];\n        var that = this;\n        //是否展示根节点\n        //先清空为设计模式添加的父节点，防止重复\n        this.context.tree.deleteChildItems(0);\n        if (that.context.opts.showRoot) {\n            treeData.push([this.context.opts.rootValue != '' ? this.context.opts.rootValue : 'root', 0, this.context.opts.rootText != '' ? this.context.opts.rootText : '根节点']);\n            $.each(data, function(index, item) {\n                if (item[that.context.opts.parentField] == 0) {\n                    item[that.context.opts.parentField] = that.context.opts.rootValue != '' ? that.context.opts.rootValue : 'root';\n                }\n                treeData.push([item[that.context.opts.valueField], item[that.context.opts.parentField], item[that.context.opts.displayField]]);\n            })\n        } else {\n\n            $.each(data, function(index, item) {\n                treeData.push([item[that.context.opts.valueField], item[that.context.opts.parentField], item[that.context.opts.displayField]]);\n            })\n        }\n\n        this.context.tree.loadJSArray(treeData);\n        this.context.tree.openAllItems(\"0\");\n    },\n    //绑定事件\n    _initEvent: function() {\n        var that = this;\n\n        //树组件\n        //选中事件\n        if (this.context.opts.allowCheckbox) {\n            //选中文本自动选中复选框\n            var that = this;\n            this.context.tree.attachEvent(\"onClick\", function(id) {\n                if (Object.prototype.toString.call(that.context.events.onTreeSelect) === '[object Function]') {\n                    that.context.events.onTreeSelect(id);\n                }\n                if (Object.prototype.toString.call(that.context.events.onTreeChecked) === '[object Function]') {\n                    that.context.events.onTreeChecked(that.context.tree.getAllChecked());\n                }\n            });\n            this.context.tree.attachEvent(\"onCheck\", function(id) {\n                if (Object.prototype.toString.call(that.context.events.onTreeChecked) === '[object Function]') {\n                    that.context.events.onTreeChecked(that.context.tree.getAllChecked());\n                }\n            });\n        } else {\n            //选中文本自动选中复选框\n            var that = this;\n            this.context.tree.attachEvent(\"onClick\", function(id) {\n                if (Object.prototype.toString.call(that.context.events.onTreeSelect) === '[object Function]') {\n                    that.context.events.onTreeSelect(id);\n                }\n            });\n        }\n        //树节点右击\n        this.context.tree.attachEvent(\"onRightClick\", function(id, ev) {\n            if (Object.prototype.toString.call(that.context.events.onTreeRightClick) === '[object Function]') {\n                that.context.events.onTreeRightClick(id);\n            }\n        });\n\n        //树节点双击\n        this.context.tree.attachEvent(\"onDblClick\", function(id) {\n            if (Object.prototype.toString.call(that.context.events.onTreeDbClick) === '[object Function]') {\n                that.context.events.onTreeDbClick(id);\n            }\n        });\n    },\n    _guid: function() {\n\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n            var r = Math.random() * 16 | 0,\n                v = c == 'x' ? r : (r & 0x3 | 0x8);\n            return v.toString(16);\n        });\n\n    },\n\n    //设置树数据\n    getSelectedItemId: function(data) {\n        return this.context.tree.getSelectedItemId();\n    },\n\n    //设置树数据\n    setTreeData: function(data) {\n        this._setTreeData(data);\n    },\n\n    //设置组件皮肤\n    setSkin: function(skin) {\n        if (skin && skin.length > 0) {\n            this.context.container.removeClass(this.context.opts.skin).addClass(skin);\n            this.context.opts.skin = skin;\n        }\n    },\n    //添加下级节点\n    addChildNode: function(tree, treeId, treeText) {\n        this.adds(treeId, true);\n    },\n\n    //添加同级节点\n    addNode: function(tree, treeParentId, treeText, type) {\n        this.adds(treeParentId, false);\n    },\n\n    //编辑\n    editNode: function(tree, treeId, treeText, type) {\n        this.updates(treeId, type);\n    },\n\n    //删除\n    delNode: function(tree, treeId, treeText) {\n        this.del(treeId);\n    },\n    //上移\n    nodeUp: function(tree, treeId, pid) {\n        var that = this;\n        //保存树节点打开状态\n        that.context.tree.saveOpenStates();\n        //调用服务保存节点位置\n        //修改数据\n        var data = {\n            id: treeId,\n            pid: pid,\n            xh: that.context.tree.getIndexById(treeId) + 1,\n\n            move: \"UP\"\n        };\n        index = layer.load(1, {\n            shade: [0.1, '#fff'] //0.1透明度的白色背景\n        });\n        hwDas.edit({\n                host: vmd.workspace.dataServiceIp,\n                url: that.context.opts.servicePath\n            }, {}, {}, [data],\n            function(result) {\n                //选中节点并触发节点选中事件\n                layer.closeAll();\n                if (vmd.tip) {\n                    vmd.tip('分类上移成功！', 'waring');\n                } else {\n                    layer.msg(\"分类上移成功！\");\n                }\n                //重新加载数据\n                that.context.opts.treeStore.toRefresh(function() {\n                    that.context.tree.loadOpenStates();\n                });\n            },\n            function(msg) {\n                layer.alert(\"分类树修改失败！\");\n                layer.close(index);\n                return false;\n            }\n        );\n    },\n    //下移\n    nodeDown: function(tree, treeId, pid) {\n        var that = this;\n        //保存树节点打开状态\n        that.context.tree.saveOpenStates();\n        //调用服务保存节点位置\n        //修改数据\n        var data = {\n            id: treeId,\n            pid: pid,\n            xh: that.context.tree.getIndexById(treeId) + 1,\n\n            move: \"DOWN\"\n        };\n        index = layer.load(1, {\n            shade: [0.1, '#fff'] //0.1透明度的白色背景\n        });\n        hwDas.edit({\n                host: vmd.workspace.dataServiceIp,\n                url: that.context.opts.servicePath\n            }, {}, {}, [data],\n            function(result) {\n                //选中节点并触发节点选中事件\n                layer.closeAll();\n                if (vmd.tip) {\n                    vmd.tip('分类下移成功！', 'waring');\n                } else {\n                    layer.msg(\"分类下移成功！\");\n                }\n                //重新加载数据\n                that.context.opts.treeStore.toRefresh(function() {\n                    that.context.tree.loadOpenStates();\n                });\n            },\n            function(msg) {\n                layer.alert(\"分类树修改失败！\");\n                layer.close(index);\n                return false;\n            }\n        );\n    },\n    //弹出一个iframe层（新增）\n    adds: function(prentId, isSubNode) {\n        var that = this;\n        that.context.tree.operation = \"add\";\n        var sjdwmc = this.context.tree.getItemText(prentId);\n        sjdwmc = escape(sjdwmc);\n        //清空表单\n        $(\"#flId\").val(\"\");\n        $(\"#flmc\").val(\"\");\n        $(\"#lefl\").val(\"\");\n        //添加分类表单\n        if (isSubNode) {\n            that.context.tree.isSubNode = true;\n            layer.open({\n                title: '添加下级分类',\n                type: 1,\n                skin: 'layui-layer-rim', //加上边框\n                area: ['500px', '300px'], //宽高\n                content: $('.formDiv')\n            });\n        } else {\n            that.context.tree.isSubNode = false;\n            layer.open({\n                title: '添加同级分类',\n                type: 1,\n                skin: 'layui-layer-rim', //加上边框\n                area: ['500px', '300px'], //宽高\n                content: $('.formDiv')\n            });\n        }\n    },\n    //弹出一个iframe层（编辑）\n    updates: function(selid, type) {\n        var that = this;\n        //清空表单\n        $(\"#flId\").val(\"\");\n        $(\"#flmc\").val(\"\");\n        $(\"#lefl\").val(\"\");\n        that.context.tree.operation = \"edit\";\n        if (selid) {\n             debugger;\n            hwDas.get({\n                    host: vmd.workspace.dataServiceIp,\n                    url: that.context.opts.servicePath\n                }, {}, {\n                    class_system: that.context.opts.classSystem,\n                    class_id: selid,\n                    form_id: getUrlParam && getUrlParam(\"jcdid\") //考核系统用\n                },\n               \n                function(result) {\n                    //编辑统计分类\n                    layer.open({\n                        title: '编辑分类',\n                        type: 1,\n                        skin: 'layui-layer-rim', //加上边框\n                        area: ['500px', '300px'], //宽高\n                        content: $('.formDiv')\n                    });\n                    $(\"#flId\").val(result.data[0].datas[0].id);\n                    $(\"#flmc\").val(result.data[0].datas[0].name);\n                    $(\"#lefl\").val(result.data[0].datas[0].description);\n\n                },\n                function(msg) {\n                    layer.alert(\"获取分类信息失败，请重试或联系管理员！\");\n                    layer.close(index);\n                    return;\n                }\n            );\n\n        } else {\n            layer.alert(\"请选择一个分类！\");\n\n        }\n    },\n    //询问框(删除)\n    del: function(seldId) {\n        var that = this;\n        that.context.tree.operation = \"del\";\n        var seld = this.context.tree.getItemText(seldId);\n        // var baid = this.context.tree.getUserData(seldId, 'baid');\n        // var bano = this.context.tree.getUserData(seldId, 'dwxh');\n        if (!seldId) {\n            msgutil.Prompt(msgutil.msgType.noParams, \"请选择一个分类！\", function() {\n\n            }, function() {})\n        } else {\n            if (seldId == 0) {\n                layer.alert(\"不能删除顶级节点！\");\n                return;\n            }\n            var arrayChildrenNode = this.context.tree.getSubItems(seldId);\n            //判断是否有下级分类，如果有则不允许删除\n            if (arrayChildrenNode.length > 0) {\n                layer.Prompt(msgutil.msgType.noParams, \"请先删除其子分类！\", function() {}, function() {\n\n                })\n            } else {\n                layer.confirm(\"您确定要删除“\" + seld + \"”吗？删除后将无法恢复\", {\n                    btn: ['删除', '取消'] //按钮\n                }, function() {\n                    //执行删除操作\n                    index = layer.load(1, {\n                        shade: [0.1, '#fff'] //0.1透明度的白色背景\n                    });\n                    //保存树节点打开状态\n                    that.context.tree.saveOpenStates();\n                    hwDas.del({\n                            host: vmd.workspace.dataServiceIp,\n                            url: that.context.opts.servicePath\n                        }, {}, {\n                            id: seldId,\n                            form_id: getUrlParam && getUrlParam(\"jcdid\") //考核系统用\n                        },\n                        function(result) {\n                            layer.alert(\"删除分类 \" + seld + \" 成功\");\n                            layer.closeAll();\n                            //重新加载数据\n                            that.context.opts.treeStore.toRefresh(function() {\n                                that.context.tree.loadOpenStates();\n                                // var nodeId = $(\"#flId\").val();\n                                // that.context.tree.preserved(nodeId, true, false);\n\n                            });\n                        },\n                        function(msg) {\n                            layer.alert(\"删除分类 \" + seld + \" 失败！\");\n                            layer.close(index);\n                            return;\n                        }\n                    );\n\n                }, function() {\n\n                });\n\n            }\n        }\n    }\n})","vmdinterface":"{\"components\":[{\"cid\":\"vmduxprops\",\"layoutConfig\":{},\"userConfig\":{},\"cn\":[{\"cid\":\"uxprop\",\"id\":\"skin\",\"layoutConfig\":{},\"userConfig\":{\"id\":\"skin\",\"zhname\":\"皮肤\",\"bindCmp\":\"\",\"bindValue\":\"\",\"isPublic\":\"on\",\"desc\":\"\",\"uxcid\":\"\",\"group\":\"\",\"cmptype\":\"combo\",\"cmpsettings\":\"{\\\"isMulti\\\":false,\\\"data\\\":\\\"[\\\\n    {text:'默认',value:'maintainableTree-default'},\\\\n]\\\"}\",\"storesource\":\"\",\"storefield_multi\":false}},{\"cid\":\"uxprop\",\"id\":\"showMenu\",\"layoutConfig\":{},\"userConfig\":{\"id\":\"showMenu\",\"zhname\":\"显示右键菜单\",\"bindCmp\":\"\",\"bindValue\":\"\",\"isPublic\":\"on\",\"desc\":\"\",\"uxcid\":\"\",\"group\":\"\",\"cmptype\":\"boolean\",\"cmpsettings\":\"{\\\"isMulti\\\":false,\\\"data\\\":\\\"[\\\\n    {text:'默认',value:'maintainableTree-default'},\\\\n]\\\"}\",\"storesource\":\"\",\"storefield_multi\":false}},{\"cid\":\"uxprop\",\"id\":\"treeStore\",\"layoutConfig\":{},\"userConfig\":{\"id\":\"treeStore\",\"zhname\":\"数据集\",\"bindCmp\":\"\",\"bindValue\":\"\",\"isPublic\":\"on\",\"desc\":\"\",\"uxcid\":\"\",\"group\":\"\",\"cmptype\":\"store\",\"cmpsettings\":\"{\\\"isMulti\\\":false,\\\"data\\\":\\\"[\\\\n    {text:'默认',value:'maintainableTree-default'},\\\\n]\\\"}\",\"storesource\":\"\",\"storefield_multi\":false}},{\"cid\":\"uxprop\",\"id\":\"displayField\",\"layoutConfig\":{},\"userConfig\":{\"id\":\"displayField\",\"zhname\":\"展示值\",\"bindCmp\":\"\",\"bindValue\":\"\",\"isPublic\":\"on\",\"desc\":\"\",\"uxcid\":\"\",\"group\":\"\",\"cmptype\":\"storeField\",\"cmpsettings\":\"{\\\"isMulti\\\":false,\\\"data\\\":\\\"[\\\\n    {text:'默认',value:'maintainableTree-default'},\\\\n]\\\"}\",\"storesource\":\"treeStore\",\"storefield_multi\":false}},{\"cid\":\"uxprop\",\"id\":\"valueField\",\"layoutConfig\":{},\"userConfig\":{\"id\":\"valueField\",\"zhname\":\"实际值\",\"bindCmp\":\"\",\"bindValue\":\"\",\"isPublic\":\"on\",\"desc\":\"\",\"uxcid\":\"\",\"group\":\"\",\"cmptype\":\"storeField\",\"cmpsettings\":\"{\\\"isMulti\\\":false,\\\"data\\\":\\\"[\\\\n    {text:'默认',value:'maintainableTree-default'},\\\\n]\\\"}\",\"storesource\":\"treeStore\",\"storefield_multi\":false}},{\"cid\":\"uxprop\",\"id\":\"parentField\",\"layoutConfig\":{},\"userConfig\":{\"id\":\"parentField\",\"zhname\":\"父节点字段\",\"bindCmp\":\"\",\"bindValue\":\"\",\"isPublic\":\"on\",\"desc\":\"\",\"uxcid\":\"\",\"group\":\"\",\"cmptype\":\"storeField\",\"cmpsettings\":\"{\\\"isMulti\\\":false,\\\"data\\\":\\\"[\\\\n    {text:'默认',value:'maintainableTree-default'},\\\\n]\\\"}\",\"storesource\":\"treeStore\",\"storefield_multi\":false}},{\"cid\":\"uxprop\",\"id\":\"folderIcon\",\"layoutConfig\":{},\"userConfig\":{\"id\":\"folderIcon\",\"zhname\":\"文件夹图标\",\"bindCmp\":\"\",\"bindValue\":\"\",\"isPublic\":\"on\",\"desc\":\"\",\"uxcid\":\"\",\"group\":\"\",\"cmptype\":\"string\",\"cmpsettings\":\"{\\\"isMulti\\\":false,\\\"data\\\":\\\"[\\\\n    {text:'默认',value:'maintainableTree-default'},\\\\n]\\\"}\",\"storesource\":\"treeStore\",\"storefield_multi\":false}},{\"cid\":\"uxprop\",\"id\":\"leafIcon\",\"layoutConfig\":{},\"userConfig\":{\"id\":\"leafIcon\",\"zhname\":\"叶子节点图标\",\"bindCmp\":\"\",\"bindValue\":\"\",\"isPublic\":\"on\",\"desc\":\"\",\"uxcid\":\"\",\"group\":\"\",\"cmptype\":\"string\",\"cmpsettings\":\"{\\\"isMulti\\\":false,\\\"data\\\":\\\"[\\\\n    {text:'默认',value:'maintainableTree-default'},\\\\n]\\\"}\",\"storesource\":\"treeStore\",\"storefield_multi\":false}},{\"cid\":\"uxprop\",\"id\":\"allowCheckbox\",\"layoutConfig\":{},\"userConfig\":{\"id\":\"allowCheckbox\",\"zhname\":\"展示复选框\",\"bindCmp\":\"\",\"bindValue\":\"\",\"isPublic\":\"on\",\"desc\":\"\",\"uxcid\":\"\",\"group\":\"\",\"cmptype\":\"boolean\",\"cmpsettings\":\"{\\\"isMulti\\\":false,\\\"data\\\":\\\"[\\\\n    {text:'默认',value:'maintainableTree-default'},\\\\n]\\\"}\",\"storesource\":\"treeStore\",\"storefield_multi\":false}},{\"cid\":\"uxprop\",\"id\":\"showRoot\",\"layoutConfig\":{},\"userConfig\":{\"id\":\"showRoot\",\"zhname\":\"展示根节点\",\"bindCmp\":\"\",\"bindValue\":\"\",\"isPublic\":\"on\",\"desc\":\"\",\"uxcid\":\"\",\"group\":\"\",\"cmptype\":\"boolean\",\"cmpsettings\":\"{\\\"isMulti\\\":false,\\\"data\\\":\\\"\\\"}\",\"storesource\":\"\",\"storefield_multi\":false}},{\"cid\":\"uxprop\",\"id\":\"rootText\",\"layoutConfig\":{},\"userConfig\":{\"id\":\"rootText\",\"zhname\":\"根节点名称\",\"bindCmp\":\"\",\"bindValue\":\"\",\"isPublic\":\"on\",\"desc\":\"\",\"uxcid\":\"\",\"group\":\"\",\"cmptype\":\"string\",\"cmpsettings\":\"{\\\"isMulti\\\":false,\\\"data\\\":\\\"[\\\\n    {text:'默认',value:'maintainableTree-default'},\\\\n]\\\"}\",\"storesource\":\"treeStore\",\"storefield_multi\":false}},{\"cid\":\"uxprop\",\"id\":\"rootValue\",\"layoutConfig\":{},\"userConfig\":{\"id\":\"rootValue\",\"zhname\":\"根节点值\",\"bindCmp\":\"\",\"bindValue\":\"\",\"isPublic\":\"on\",\"desc\":\"\",\"uxcid\":\"\",\"group\":\"\",\"cmptype\":\"string\",\"cmpsettings\":\"{\\\"isMulti\\\":false,\\\"data\\\":\\\"[\\\\n    {text:'默认',value:'maintainableTree-default'},\\\\n]\\\"}\",\"storesource\":\"treeStore\",\"storefield_multi\":false}},{\"cid\":\"uxprop\",\"id\":\"classSystem\",\"layoutConfig\":{},\"userConfig\":{\"id\":\"classSystem\",\"zhname\":\"分类系统\",\"bindCmp\":\"\",\"bindValue\":\"\",\"isPublic\":\"on\",\"desc\":\"\",\"uxcid\":\"\",\"group\":\"\",\"cmptype\":\"combo\",\"cmpsettings\":\"{\\\"isMulti\\\":false,\\\"data\\\":\\\"[\\\\n    {text:'设备分类',value:'SBFL'},\\\\n   \\\\n]\\\"}\",\"storesource\":\"\",\"storefield_multi\":false,\"radio_4eJG\":\"combo\"}},{\"cid\":\"uxprop\",\"id\":\"servicePath\",\"layoutConfig\":{},\"userConfig\":{\"id\":\"servicePath\",\"zhname\":\"服务地址\",\"bindCmp\":\"\",\"bindValue\":\"\",\"isPublic\":\"on\",\"desc\":\"\",\"uxcid\":\"\",\"group\":\"\",\"cmptype\":\"string\",\"cmpsettings\":\"{\\\"isMulti\\\":false,\\\"data\\\":\\\"\\\"}\",\"storesource\":\"\",\"storefield_multi\":false}},{\"cid\":\"uxprop\",\"id\":\"openAllItems\",\"layoutConfig\":{},\"userConfig\":{\"id\":\"openAllItems\",\"zhname\":\"展开所有节点\",\"bindCmp\":\"\",\"bindValue\":\"\",\"isPublic\":\"on\",\"desc\":\"\",\"uxcid\":\"\",\"group\":\"\",\"cmptype\":\"boolean\",\"cmpsettings\":\"{\\\"isMulti\\\":false,\\\"data\\\":\\\"\\\"}\",\"storesource\":\"\",\"storefield_multi\":false}},{\"cid\":\"uxprop\",\"id\":\"enableDragAndDrop\",\"layoutConfig\":{},\"userConfig\":{\"id\":\"enableDragAndDrop\",\"zhname\":\"允许树节点拖动\",\"bindCmp\":\"\",\"bindValue\":\"\",\"isPublic\":\"on\",\"desc\":\"\",\"uxcid\":\"\",\"group\":\"\",\"cmptype\":\"boolean\",\"cmpsettings\":\"{\\\"isMulti\\\":false,\\\"data\\\":\\\"\\\"}\",\"storesource\":\"\",\"storefield_multi\":false}}]},{\"cid\":\"vmduxmethods\",\"id\":\"方法\",\"layoutConfig\":{},\"userConfig\":{},\"cn\":[{\"cid\":\"uxmethod\",\"id\":\"getSelectedItemId\",\"layoutConfig\":{},\"userConfig\":{\"id\":\"getSelectedItemId\",\"zhname\":\"\",\"bindCmp\":\"\",\"bindValue\":\"\",\"isPublic\":\"on\",\"desc\":\"获取树节点id\",\"uxcid\":\"\",\"params\":\"param1\",\"code\":\"//直接填写方法内容\\nreturn thisComponent.getSelectedItemId();\",\"returnType\":\"\"}}]},{\"cid\":\"vmduxevents\",\"id\":\"事件\",\"layoutConfig\":{},\"userConfig\":{},\"cn\":[{\"cid\":\"uxevent\",\"id\":\"onTreeSelect\",\"layoutConfig\":{},\"userConfig\":{\"id\":\"onTreeSelect\",\"params\":\"data\",\"desc\":\"树节点选中事件\"}},{\"cid\":\"uxevent\",\"id\":\"onTreeDbClick\",\"layoutConfig\":{},\"userConfig\":{\"id\":\"onTreeDbClick\",\"params\":\"data\",\"desc\":\"树节点双击事件\"}},{\"cid\":\"uxevent\",\"id\":\"onTreeRightClick\",\"layoutConfig\":{},\"userConfig\":{\"id\":\"onTreeRightClick\",\"params\":\"data\",\"desc\":\"树节点右击事件\"}},{\"cid\":\"uxevent\",\"id\":\"onTreeChecked\",\"layoutConfig\":{},\"userConfig\":{\"id\":\"onTreeChecked\",\"params\":\"data\",\"desc\":\"树节点复选事件\"}}]}]}","vmdresource":"{\"components\":[{\"cid\":\"vmdrescsss\",\"layoutConfig\":{},\"userConfig\":{}},{\"cid\":\"vmdresjss\",\"layoutConfig\":{},\"userConfig\":{},\"cn\":[{\"cid\":\"resjs\",\"id\":\"components/ux/maintainabletreebcomponent/1.0/js/template-web.js\",\"layoutConfig\":{},\"userConfig\":{\"id\":\"components/ux/maintainabletreebcomponent/1.0/js/template-web.js\",\"path\":\"components/ux/maintainabletreebcomponent/1.0/js/template-web.js\",\"absolutePath\":\"{{vmduxpath}}/components/ux/maintainabletreebcomponent/1.0/js/template-web.js\",\"ext\":\"js\"}},{\"cid\":\"resjs\",\"id\":\"components/ux/maintainabletreebcomponent/1.0/js/layer.js\",\"layoutConfig\":{},\"userConfig\":{\"id\":\"components/ux/maintainabletreebcomponent/1.0/js/layer.js\",\"path\":\"components/ux/maintainabletreebcomponent/1.0/js/layer.js\",\"absolutePath\":\"{{vmduxpath}}/components/ux/maintainabletreebcomponent/1.0/js/layer.js\",\"ext\":\"js\"}},{\"cid\":\"resjs\",\"id\":\"components/ux/maintainabletreebcomponent/1.0/js/dhtmlxtree_xw.js\",\"layoutConfig\":{},\"userConfig\":{\"id\":\"components/ux/maintainabletreebcomponent/1.0/js/dhtmlxtree_xw.js\",\"path\":\"components/ux/maintainabletreebcomponent/1.0/js/dhtmlxtree_xw.js\",\"absolutePath\":\"{{vmduxpath}}/components/ux/maintainabletreebcomponent/1.0/js/dhtmlxtree_xw.js\",\"ext\":\"js\"}},{\"cid\":\"resjs\",\"id\":\"controller.js\",\"layoutConfig\":{},\"userConfig\":{}}]},{\"cid\":\"vmdresimgs\",\"layoutConfig\":{},\"userConfig\":{}}]}"}