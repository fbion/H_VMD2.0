{"vmdversion":"2.0.4.20190331","vmdlayout":"{\"components\":[{\"cid\":\"uxpanel\",\"id\":\"GridType1\",\"layoutConfig\":{},\"userConfig\":{\"layout\":\"fit\",\"header\":false,\"width\":320,\"autoScroll\":true,\"autoHeight\":false,\"height\":700},\"cn\":[{\"cid\":\"tabpanel\",\"id\":\"MyTabs\",\"layoutConfig\":{},\"userConfig\":{\"activeTab\":0,\"height\":700,\"activeItem\":\"panel\",\"afterrender\":\"MyTabs_afterrender\",\"autoHeight\":false},\"cn\":[{\"cid\":\"panel\",\"id\":\"panel\",\"layoutConfig\":{},\"userConfig\":{\"title\":\"配置\",\"layout\":\"border\",\"autoScroll\":true},\"cn\":[{\"cid\":\"panel\",\"id\":\"panel5\",\"layoutConfig\":{},\"userConfig\":{\"region\":\"center\",\"layout\":\"border\",\"header\":false,\"autoScroll\":true},\"cn\":[{\"cid\":\"container\",\"id\":\"div\",\"layoutConfig\":{},\"userConfig\":{\"width\":482,\"height\":73,\"layout\":\"border\",\"border\":false,\"region\":\"north\"},\"cn\":[{\"cid\":\"panel\",\"id\":\"panel3\",\"layoutConfig\":{},\"userConfig\":{\"region\":\"center\",\"border\":false,\"header\":false,\"height\":28,\"layout\":\"hbox\"},\"cn\":[{\"cid\":\"vmdButton\",\"id\":\"button\",\"layoutConfig\":{},\"userConfig\":{\"text\":\"字段选择\",\"margins\":\"5 5 0 5\",\"click\":\"button_click\",\"type\":\"text\"}},{\"cid\":\"vmdButton\",\"id\":\"button1\",\"layoutConfig\":{},\"userConfig\":{\"margins\":\"5 0 0 45\",\"text\":\"\",\"width\":30,\"type\":\"text\",\"click\":\"button1_click\",\"iconcls\":\"icon-arrow-up\"}},{\"cid\":\"vmdButton\",\"id\":\"button2\",\"layoutConfig\":{},\"userConfig\":{\"margins\":\"5 0 0 5\",\"text\":\"\",\"height\":\"\",\"width\":30,\"type\":\"text\",\"click\":\"button2_click\",\"iconcls\":\"icon-arrow-down\"}},{\"cid\":\"vmdButton\",\"id\":\"button4\",\"layoutConfig\":{},\"userConfig\":{\"icon\":\"delete\",\"text\":\"\",\"type\":\"text\",\"margins\":\"5 0 0 5\",\"click\":\"button4_click\",\"style\":\"color: red\"}},{\"cid\":\"vmdButton\",\"id\":\"button3\",\"layoutConfig\":{},\"userConfig\":{\"type\":\"text\",\"margins\":\"5 0 5 5\",\"text\":\"应用到自由格式\",\"click\":\"button3_click\"}}]},{\"cid\":\"panel\",\"id\":\"panel4\",\"layoutConfig\":{\"align\":\"middle\",\"pack\":\"start\"},\"userConfig\":{\"region\":\"north\",\"height\":35,\"border\":false,\"header\":false,\"layout\":\"hbox\"},\"cn\":[{\"cid\":\"label\",\"id\":\"label\",\"layoutConfig\":{},\"userConfig\":{\"text\":\"锁定列数：\",\"margins\":\"0 0 0 5\"}},{\"cid\":\"numberfield\",\"id\":\"fixedCol\",\"layoutConfig\":{},\"userConfig\":{\"width\":178,\"id\":\"fixedCol\",\"allowDecimals\":false,\"allowNegative\":false,\"afterrender\":\"fixedCol_afterrender\"}}]}]},{\"cid\":\"panel\",\"id\":\"panel2\",\"layoutConfig\":{},\"userConfig\":{\"region\":\"center\",\"header\":false,\"layout\":\"fit\",\"border\":false,\"autoScroll\":false,\"autoHeight\":false},\"cn\":[{\"cid\":\"grid\",\"id\":\"MyGrid\",\"layoutConfig\":{},\"userConfig\":{\"region\":\"center\",\"beforerender\":\"MyGrid_beforerender\",\"celldblclick\":\"MyGrid_celldblclick\",\"hideHeaders\":true,\"disableHeaderClick\":true,\"title\":\"已选字段\",\"afterrender\":\"MyGrid_afterrender\"},\"cn\":[{\"cid\":\"gridcolumn\",\"layoutConfig\":{},\"userConfig\":{\"header\":\"Column 1\",\"dataIndex\":\"mixName\",\"width\":300},\"name\":\"mixName\"}]}]}]},{\"cid\":\"panel\",\"id\":\"panel6\",\"layoutConfig\":{\"align\":\"middle\",\"pack\":\"start\"},\"userConfig\":{\"region\":\"north\",\"header\":false,\"height\":35,\"layout\":\"hbox\",\"style\":\"padding-top: 5px\"},\"cn\":[{\"cid\":\"label\",\"id\":\"label3\",\"layoutConfig\":{},\"userConfig\":{\"margins\":\"0 0 0 5\",\"text\":\"展示方式：\"}},{\"cid\":\"radiogroup\",\"id\":\"grid_display\",\"layoutConfig\":{},\"userConfig\":{\"height\":30,\"margins\":\"0 0 0 5\",\"id\":\"grid_display\",\"change\":\"grid_display_change\"},\"cn\":[{\"cid\":\"radio\",\"id\":\"hwRadio\",\"layoutConfig\":{},\"userConfig\":{\"boxLabel\":\"实际宽度\",\"fieldLabel\":\"\",\"width\":81,\"checked\":true,\"inputValue\":\"0\"}},{\"cid\":\"radio\",\"id\":\"hwRadio1\",\"layoutConfig\":{},\"userConfig\":{\"fieldLabel\":\"\",\"boxLabel\":\"比例平铺\",\"inputValue\":\"1\"}}]}]}]},{\"cid\":\"panel\",\"id\":\"panel1\",\"layoutConfig\":{},\"userConfig\":{\"title\":\"事件\"},\"cn\":[{\"cid\":\"container\",\"id\":\"div19\",\"layoutConfig\":{\"align\":\"middle\",\"pack\":\"start\"},\"userConfig\":{\"height\":40,\"border\":false,\"layout\":\"hbox\",\"hidden\":false},\"cn\":[{\"cid\":\"label\",\"id\":\"label16\",\"layoutConfig\":{},\"userConfig\":{\"text\":\"行改变：\",\"margins\":\"0 0 0 10 \"}},{\"cid\":\"textfield\",\"id\":\"grid_rowChange\",\"layoutConfig\":{},\"userConfig\":{\"id\":\"grid_rowChange\",\"afterrender\":\"grid_rowChange_afterrender\"}},{\"cid\":\"vmdButton\",\"id\":\"rowChangeSet\",\"layoutConfig\":{},\"userConfig\":{\"text\":\"...\",\"margins\":\"0 0 0 5\",\"id\":\"rowChangeSet\"}}]},{\"cid\":\"container\",\"id\":\"div20\",\"layoutConfig\":{\"align\":\"middle\",\"pack\":\"start\"},\"userConfig\":{\"height\":40,\"border\":false,\"layout\":\"hbox\",\"hidden\":false},\"cn\":[{\"cid\":\"label\",\"id\":\"label17\",\"layoutConfig\":{},\"userConfig\":{\"text\":\"行选中：\",\"margins\":\"0 0 0 10\"}},{\"cid\":\"textfield\",\"id\":\"grid_rowSelected\",\"layoutConfig\":{},\"userConfig\":{\"id\":\"grid_rowSelected\",\"afterrender\":\"grid_rowSelected_afterrender\"}},{\"cid\":\"vmdButton\",\"id\":\"rowSelectedSet\",\"layoutConfig\":{},\"userConfig\":{\"text\":\"...\",\"margins\":\"0 0 0 5\",\"id\":\"rowSelectedSet\"}}]}]}]}]}]}","vmdevents":"var page = this;\n\npage.controller = new vmd.ux.gridType.Controller(this)\n\npage.selectedField = new Ext.data.JsonStore({\n    proxy: new Ext.data.MemoryProxy(),\n    fields: ['mixName']\n});\n\nfunction button_click(sender, e) {\n    var sValue = page.rootScope.controller.comp.layout.dataSet\n    //首先判断是否选择了数据集\n    if (sValue == '') {\n        vmd.tip('请首先选择数据集', 'error')\n    } else {\n        openSettingWin(page.controller);\n    }\n}\n\nfunction openSettingWin(controller, flag) {\n    var dbconfigs = JSON.parse(parent.xds.vmd.getStoreByDsName(page.rootScope.controller.comp.layout.dataSet, true).component.getConfig(\"storeConfig\").storeConfig)\n    if (dbconfigs) {\n        // 创建一个新窗口（有url指向） \n        window.newWin = new vmd.window({\n            url: '/system/modules/eQ9ULgcVb1/eQ9ULgcVb5/hwk9PgTMpg/hwp5jFKDnC.html',\n            title: '字段选择',\n            enableLoading: true, //启用进度加载\n            width: 610,\n            height: 500,\n            auto: false, //auto为true 自动适应窗口，配合offset使用\n            cache: false,\n            params: {\n                inst: controller\n            } //url中追加的编码的参数，json格式 \n        })\n\n        newWin.inputdbconfig = dbconfigs\n        newWin.show(); //窗口显示\n        newWin.getSelectedFields = function(selected) {\n            var newSelectFields = [];\n            var oldfields = page.controller.settings.fields;\n            var ischeckfields = function(name) {\n                var flag = false;\n                Ext.each(oldfields, function(info) {\n                    if (info.dictionary.name == name) {\n                        flag = info;\n                        return false;\n                    }\n                })\n                return flag;\n            }\n            var cmpStore = [];\n            for (var i = 0; i < selected.length; i++) {\n                var name = selected[i].name;\n\n                var matchFieldInfo = ischeckfields(name);\n                if (matchFieldInfo) {\n                    newSelectFields.push(Ext.copyTo(matchFieldInfo))\n                    continue;\n                }\n\n                selected[i].mixName = selected[i].cname + '(' + selected[i].name + ')'\n                var cmp = new vmd.ux.gridType.settings.fieldSettings();\n                cmp.dictionary = selected[i];\n                var type = cmp.dictionary.type;\n                //根据数据字典类型设置默认值\n\n                if (type == 'DATE') {\n                    cmp.fieldsConfig = {\n                        events: {\n                            change: \"\",\n                            click: \"\",\n                            dblclick: \"\"\n                        },\n                        settings: {\n                            allowEdit: true,\n                            allowEmpty: true,\n                            colHide: false,\n                            colWidth: \"100\",\n                            customFormat: false,\n                            customFormats: \"\",\n                            defaultNow: false,\n                            emptyAlert: \"\",\n                            format: \"\"\n                        },\n                        type: \"date\"\n                    }\n                } else if (type == 'CHAR' || type == 'VARCHAR2') {\n                    cmp.fieldsConfig = {\n                        events: {\n                            text_change: \"\",\n                            text_click: \"\"\n                        },\n                        settings: {\n                            colHide: false,\n                            colWidth: \"100\",\n                            text_common_allowEdit: true,\n                            text_common_allowEmpty: true,\n                            text_common_emptyAlert: \"\",\n                            text_common_fillRules: \"None\",\n                            text_common_mutilRow: false,\n                            text_common_phoneType: \"\",\n                            text_common_symbol: false,\n                            text_guid_allowEmpty: true,\n                            text_guid_emptyAlert: \"\",\n                            text_guid_length: \"\",\n                            text_no_allowEmpty: true,\n                            text_no_emptyAlert: \"\",\n                            text_password_allowEdit: true,\n                            text_password_allowEmpty: true,\n                            text_password_emptyAlert: true,\n                            text_rule_charExp: \"\",\n                            text_rule_maxLength: \"0\",\n                            text_rule_minLength: \"0\",\n                            text_typeSelect: \"common\"\n                        },\n                        type: \"text\"\n                    }\n                } else if (type == 'NUMBER') {\n                    cmp.fieldsConfig = {\n                        events: {\n                            number_change: \"\",\n                            number_click: \"\"\n                        },\n                        settings: {\n                            colHide: false,\n                            colWidth: \"100\",\n                            number_allowDecimal: true,\n                            number_allowEdit: true,\n                            number_allowEmpty: true,\n                            number_allowNegetive: false,\n                            number_decimalLength: cmp.dictionary.precision,\n                            number_emptyAlert: \"\",\n                            number_limit: false,\n                            number_limitValue: \"\",\n                            number_max: false,\n                            number_maxValue: \"\",\n                            number_min: false,\n                            number_minValue: \"\"\n                        },\n                        type: \"number\"\n                    }\n                }\n                newSelectFields.push(cmp);\n            }\n            for (var i = 0; i < newSelectFields.length; i++) {\n                page.controller.settings.fields.push(newSelectFields[i]);\n            }\n            page.selected = [];\n            for (var i = 0; i < page.controller.settings.fields.length; i++) {\n                page.selected.push(page.controller.settings.fields[i].dictionary)\n            }\n            page.selectedField.loadData(page.selected)\n\n\n\n            //设置数据库名称记录\n            page.controller.settings.storeName = page.rootScope.controller.comp.layout.dataSet;\n            //修改form表单设置\n            if (page.rootScope.controller.comp.form.settings.fields.length == 0) {\n                page.rootScope.controller.comp.form.settings.fields = newSelectFields;\n            }\n            page.fireEvent('settingChangeEvents')\n            newWin.close()\n        }\n    }\n}\n\nfunction MyGrid_beforerender(sender) {\n    this.ddGroup = 'griddd';\n    this.enableDragDrop = true;\n    sender.store = page.selectedField;\n\n    MyGrid.on('cellclick', function(sender, rowindex, cellindex) {\n        page.selNo = rowindex;\n        var gv = MyGrid.getView();\n        var row = gv.getRow(rowindex);\n        Ext.get(row).removeClass('x-grid3-row-selected')\n        currow = gv.getRow(rowindex);\n        Ext.get(currow).addClass('x-grid3-row-selected')\n    })\n}\n\nfunction MyGrid_celldblclick(sender, rowIndex, columnIndex, e) {\n    debugger\n    var backpack = JSON.stringify(page.controller.serialize());\n    // 创建一个新窗口（有url指向） \n    window.settingWin = new vmd.window({\n        url: '/system/modules/eQ9ULgcVb1/eQ9ULgcVb5/hwk9PgTMpg/hwbc029294.html',\n        title: '字段类型设置',\n        enableLoading: true, //启用进度加载\n        width: 540,\n        height: 640,\n        cache: false,\n        auto: false, //auto为true 自动适应窗口，配合offset使用\n        params: {\n            inst: page.controller,\n            selNum: MyGrid.getSelectionModel().last\n        } //url中追加的编码的参数，json格式 \n    })\n    settingWin.show(); //窗口显示\n    settingWin.setBack = function(controller, flag) {\n        flag ? page.controller = controller : page.controller.setValue(JSON.parse(backpack));\n        page.fireEvent('settingChangeEvents')\n        settingWin.close()\n    }\n    settingWin.toOther = function(info) {\n        var inst = page.rootScope.controller.comp.form.settings.fields;\n        for (var i = 0; i < inst.length; i++) {\n            if (inst[i].dictionary.name == info.dictionary.name) {\n                inst[i].fieldsConfig.settings = info.fieldsConfig;\n            }\n        }\n        page.fireEvent('settingChangeEvents')\n    }\n}\n\nfunction grid_display_change(sender, checked) {\n    page.controller.settings.displayMode = checked.inputValue\n    page.fireEvent('settingChangeEvents')\n}\n\nfunction button1_click(sender, e) {\n    //上移\n    var sel;\n    var selecModel = MyGrid.getSelectionModel()\n    var group = MyGrid.getSelectionModel().selections.items;\n    if (group.length == 0) return;\n    if (!page.selected) page.selected = Ext.pluck(MyGrid.store.data.items, 'json')\n    var name = group[0].data.mixName;\n    for (var i = 0; i < page.selected.length; i++) {\n        if (page.selected[i].mixName == name && i != 0) {\n            var temp = page.selected[i - 1];\n            page.selected[i - 1] = page.selected[i];\n            page.selected[i] = temp;\n            sel = i > 0 ? i - 1 : 0\n            break;\n        }\n    }\n    page.selectedField.loadData(page.selected)\n    selecModel.selectRow(sel)\n\n    try {\n        var list = page.controller.settings.fields;\n        var temp = JSON.stringify(list[i])\n        list[i] = JSON.parse(JSON.stringify(list[i - 1]))\n        list[i - 1] = JSON.parse(temp)\n        page.fireEvent('settingChangeEvents')\n    } catch (ex) {\n        debugger\n    }\n}\n\nfunction button2_click(sender, e) {\n    //下移\n    var sel;\n    var selecModel = MyGrid.getSelectionModel()\n    var group = MyGrid.getSelectionModel().selections.items;\n    if (group.length == 0) return;\n    if (!page.selected) page.selected = Ext.pluck(MyGrid.store.data.items, 'json')\n    var name = group[0].data.mixName;\n    for (var i = 0; i < page.selected.length; i++) {\n        if (page.selected[i].mixName == name && i != page.selected.length - 1) {\n            var temp = page.selected[i + 1];\n            page.selected[i + 1] = page.selected[i];\n            page.selected[i] = temp;\n            sel = i + 1;\n            break;\n        }\n    }\n    page.selectedField.loadData(page.selected)\n    selecModel.selectRow(sel)\n\n    try {\n        var list = page.controller.settings.fields;\n        var temp = JSON.stringify(list[i])\n        list[i] = JSON.parse(JSON.stringify(list[i + 1]))\n        list[i + 1] = JSON.parse(temp)\n        page.fireEvent('settingChangeEvents')\n    } catch (ex) {\n        debugger\n    }\n}\n\nfunction MyGrid_afterrender(sender) {\n    var store = this.store\n    var ddrow = new Ext.dd.DropTarget(MyGrid.container, {\n        ddGroup: 'griddd',\n        copy: false,\n        notifyEnter: function(ddSource, e, data) {},\n        notifyDrop: function(ddSource, e, data) {\n            // 选中了多少行\n            var rows = data.selections;\n            // 拖动到第几行\n            var index = ddSource.getDragData(e).rowIndex;\n            if (typeof(index) == \"undefined\") {\n                return;\n            }\n            // 修改store\n            for (i = 0; i < rows.length; i++) {\n                var rowData = rows[i];\n                if (!this.copy) store.remove(rowData);\n                store.insert(index, rowData);\n            }\n        }\n    });\n}\n\nfunction grid_rowChange_afterrender(sender) {\n    setEvent(sender, 'grid_rowChange', \"\")\n}\n\nfunction grid_rowSelected_afterrender(sender) {\n    setEvent(sender, 'grid_rowSelected', \"\")\n}\n\nfunction MyTabs_afterrender(sender) {\n    sender.header.setDisplayed(false)\n}\n\nfunction button3_click(sender, e) {\n    debugger\n    var temp = JSON.parse(JSON.stringify(page.controller.scope.rootScope.controller.comp.grid.settings.fields))\n    page.rootScope.controller.comp.form.settings.fields = temp;\n    page.fireEvent('settingChangeEvents')\n}\n\nfunction button4_click(sender, e) {\n    var f = page.controller.settings.fields;\n    var group = MyGrid.getSelectionModel().selections.items;\n    if (group) {\n        for (var i = 0; i < group.length; i++) {\n            for (var n = f.length - 1; n > -1; n--) {\n                if (group[i].json.name == page.controller.settings.fields[n].dictionary.name) {\n                    f.splice(n, 1);\n                    break;\n                }\n            }\n        }\n        page.selected = [];\n        for (var i = 0; i < f.length; i++) {\n            page.selected.push(f[i].dictionary)\n        }\n        page.selectedField.loadData(page.selected)\n        page.fireEvent('settingChangeEvents')\n    }\n}\n\nfunction fixedCol_afterrender(sender) {\n    sender.el.on('change', function() {\n        page.controller.settings.fc = sender.getValue()\n        page.fireEvent('settingChangeEvents')\n    })\n}\n","vmdcss":"","vmdprops":"\"\"","type":"ux","vmdevents_controller":"//grid\nExt.define('vmd.ux.gridType.Controller', {\n    xtype: 'vmd.ux.gridType.Controller',\n    constructor: function(options) {\n        this.scope = options;\n        this.settings = new vmd.ux.gridType.settings(options);\n        this.events = new vmd.ux.gridType.events(options);\n    },\n    setValue: function(jsonConfig) {\n        if (jsonConfig) {\n            //设置值和事件\n            this.settings.setValue(jsonConfig.settings);\n            this.events.setValue(jsonConfig.events);\n            //取得的已选字段\n            var temp = [];\n            for (var i = 0; i < jsonConfig.settings.fields.length; i++) {\n                temp.push(jsonConfig.settings.fields[i].dictionary)\n            }\n            this.scope.selectedField.loadData(temp)\n            //grid层需要展示赋值的\n            // this.scope.grid_dataSet.setValue(this.settings.storeName);\n\n        }\n    },\n    serialize: function() {\n        var json = {\n            settings: this.settings.serialize(),\n            events: this.events.serialize()\n        }\n        return json;\n    }\n})\n\n//grid-settings\nExt.define('vmd.ux.gridType.settings', {\n    xtype: 'vmd.ux.gridType.settings',\n    constructor: function(options) {\n        this.displayMode = '0'\n        this.fc = '0'\n        this.fields = [];\n        this.scope = options;\n    },\n    setValue: function(jsonConfig) {\n        if (jsonConfig) {\n            this.displayMode = jsonConfig.displayMode;\n            this.fc = jsonConfig.fc;\n            this.fields = jsonConfig.fields;\n            debugger\n            this.scope.grid_display.setValue(this.displayMode)\n            this.scope.fixedCol.setValue(this.fc)\n        }\n    },\n    serialize: function() {\n        var temp = [];\n        for (var i = 0; i < this.fields.length; i++) {\n            var tmp\n            if (this.fields[i] && this.fields[i].fieldsConfig && this.fields[i].fieldsConfig.hasOwnProperty('scope')) {\n                tmp = {\n                    fieldsConfig: this.fields[i].fieldsConfig.serialize(),\n                    dictionary: this.fields[i].dictionary\n                }\n                if (this.fields[i] && this.fields[i].selected) tmp.selected = this.fields[i].selected\n            } else {\n                tmp = this.fields[i]\n            }\n            //删除数据字典中的role规则\n\n            if (tmp.dictionary) {\n                delete tmp.dictionary.rule;\n                delete tmp.dictionary.rules;\n                delete tmp.dictionary.xml;\n                delete tmp.dictionary.defaultValue;\n            }\n            temp.push(tmp)\n        }\n        var json = {\n            displayMode: this.displayMode,\n            fc: this.fc,\n            fields: temp,\n            issave: true\n        }\n        return json;\n    }\n})\n\n//grid-events\nExt.define('vmd.ux.gridType.events', {\n    xtype: 'vmd.ux.gridType.events',\n    constructor: function(options) {\n        this.scope = options;\n        this.rowChange = '';\n        this.rowClick = '';\n    },\n    setValue: function(jsonConfig) {\n        this.rowChange = jsonConfig.rowChange;\n        this.rowClick = jsonConfig.rowClick;\n    },\n    serialize: function() {\n        var json = {\n            rowChange: this.rowChange,\n            rowClick: this.rowClick\n        }\n        return json;\n    }\n})\n\n//grid-settings\nExt.define('vmd.ux.gridType.settings.fieldSettings', {\n    xtype: 'vmd.ux.gridType.settings.fieldSettings',\n    constructor: function(options) {\n        this.scope = options;\n\n        this.dictionary;\n        this.fieldsConfig;\n    },\n    setValue: function(jsonConfig) {\n        if (jsonConfig) {\n            this.dictionary = jsonConfig.dictionary;\n            this.fieldsConfig = jsonConfig.fieldsConfig.serialize();\n        }\n    },\n    serialize: function() {\n\n        var temp = {};\n        if (this.fieldsConfig) {\n            temp = this.fieldsConfig.serialize();\n        }\n        var json = {\n            dictionary: this.dictionary,\n            fieldsConfig: temp\n        }\n        return json;\n    }\n})","vmdinterface":"{\"components\":[{\"cid\":\"vmduxprops\",\"layoutConfig\":{},\"userConfig\":{}},{\"cid\":\"vmduxmethods\",\"id\":\"方法\",\"layoutConfig\":{},\"userConfig\":{},\"cn\":[{\"cid\":\"uxmethod\",\"id\":\"serialize\",\"layoutConfig\":{},\"userConfig\":{\"id\":\"serialize\",\"zhname\":\"\",\"bindCmp\":\"\",\"bindValue\":\"\",\"isPublic\":\"on\",\"desc\":\"\",\"uxcid\":\"\",\"params\":\"info\",\"code\":\"page.controller.serialize();\",\"returnType\":\"\"}},{\"cid\":\"uxmethod\",\"id\":\"setInfo\",\"layoutConfig\":{},\"userConfig\":{\"id\":\"setInfo\",\"zhname\":\"\",\"bindCmp\":\"\",\"bindValue\":\"\",\"isPublic\":\"on\",\"desc\":\"\",\"uxcid\":\"\",\"params\":\"info\",\"code\":\"page.controller.setValue(info)\",\"returnType\":\"\"}},{\"cid\":\"uxmethod\",\"id\":\"initDefault\",\"layoutConfig\":{},\"userConfig\":{\"id\":\"initDefault\",\"zhname\":\"\",\"bindCmp\":\"\",\"bindValue\":\"\",\"isPublic\":\"on\",\"desc\":\"\",\"uxcid\":\"\",\"params\":\"\",\"code\":\"//直接填写方法内容\\ninit()\",\"returnType\":\"\"}}]},{\"cid\":\"vmduxevents\",\"id\":\"事件\",\"layoutConfig\":{},\"userConfig\":{},\"cn\":[{\"cid\":\"uxevent\",\"id\":\"copyGridToForm\",\"layoutConfig\":{},\"userConfig\":{\"id\":\"copyGridToForm\",\"zhname\":\"\",\"bindCmp\":\"\",\"bindValue\":\"\",\"isPublic\":\"\",\"desc\":\"\",\"uxcid\":\"\",\"params\":\"\",\"code\":\"\"}},{\"cid\":\"uxevent\",\"id\":\"compareDataSet\",\"layoutConfig\":{},\"userConfig\":{\"id\":\"compareDataSet\",\"zhname\":\"\",\"bindCmp\":\"\",\"bindValue\":\"\",\"isPublic\":\"\",\"desc\":\"\",\"uxcid\":\"\",\"params\":\"sender,value\",\"code\":\"\"}},{\"cid\":\"uxevent\",\"id\":\"settingChangeEvents\",\"layoutConfig\":{},\"userConfig\":{\"id\":\"settingChangeEvents\",\"params\":\"\",\"desc\":\"\"}}]}]}","vmdresource":"{\"components\":[{\"cid\":\"vmdrescsss\",\"layoutConfig\":{},\"userConfig\":{},\"cn\":[{\"cid\":\"rescss\",\"id\":\"components/ux/gridtype/1.0/css/icons.css\",\"layoutConfig\":{},\"userConfig\":{\"id\":\"components/ux/gridtype/1.0/css/icons.css\",\"path\":\"components/ux/gridtype/1.0/css/icons.css\",\"absolutePath\":\"{{vmduxpath}}/components/ux/gridtype/1.0/css/icons.css\",\"ext\":\"css\"}}]},{\"cid\":\"vmdresjss\",\"layoutConfig\":{},\"userConfig\":{},\"cn\":[{\"cid\":\"resjs\",\"id\":\"controller.js\",\"layoutConfig\":{},\"userConfig\":{}}]},{\"cid\":\"vmdresimgs\",\"layoutConfig\":{},\"userConfig\":{}}]}"}