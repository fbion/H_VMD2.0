{"vmdversion":"2.0.3.0920","vmdlayout":"{\"components\":[{\"cid\":\"uxpanel\",\"id\":\"ComboAndList\",\"layoutConfig\":{},\"userConfig\":{\"layout\":\"absolute\",\"header\":false,\"width\":785,\"height\":465,\"afterrender\":\"ComboAndList_afterrender\"},\"cn\":[{\"cid\":\"vmdCombo\",\"id\":\"combo\",\"layoutConfig\":{},\"userConfig\":{\"x\":170,\"y\":30,\"width\":288}},{\"cid\":\"container\",\"id\":\"div\",\"layoutConfig\":{},\"userConfig\":{\"x\":370,\"y\":80,\"height\":300,\"width\":350},\"cn\":[{\"cid\":\"vmdTreeEx\",\"id\":\"tree\",\"layoutConfig\":{},\"userConfig\":{\"x\":330,\"y\":150,\"width\":244,\"nodeclick\":\"tree_nodeclick\"}}]}]}]}","vmdevents":"\n\n\n/*\n    2018-11-9  \n    1.准备comboo和tree  tree用div包裹，tree的大小自己设置\n    2.调用addTreeView()传入combo的id和div的id\n    3.配置tree的单击事件\n*/\nfunction ComboAndList_afterrender(sender){\n    addTreeView(combo,div);//1.comb 2.tree的容器div\n    \n}\n\n//节点单击事件\nfunction tree_nodeclick(sender,node,e){\n//   if(node.firstChild) {//判断选择的是不是父节点\n//  \n//         Ext.alert('提示：','请选择子节点！');\n//         return;\n//     }\n // var value = node.nodeDataJson.business_associate_id;//保存value 存值使用\n//comboo.setValue('要保存到数据库的value');\n   combo.setText('设置的文本')//置文本\n    $(div.el.dom).hide();//隐藏树\n}\n\n//\n(function(window) {\n    function Intil(comDom, wrapDom) {\n        var jqObj =$(comDom.el.dom);\n        console.log(jqObj);\n        this.ele = jqObj;\n        this.vmd = comDom;\n        this.offset = jqObj.offset();\n        this.height = jqObj.innerHeight() + 1;\n        this.width = jqObj.innerWidth();\n        this.wrapper = $(wrapDom);\n        this.timer = null;\n        this.addCss();\n        this.blindEvent();\n    }\n    Intil.prototype.addCss = function() {\n        this.wrapper.css({\n            position: 'absolute',\n            display: 'none',\n            top: this.offset.top + this.height,\n            left: this.offset.left,\n            height: 200,\n            zIndex:9999,\n            width: this.width,\n        }).appendTo($('body'));\n    }\n    Intil.prototype.blindEvent = function() {\n        var self = this;\n        console.log(this.ele[0].nodeName.toLowerCase());\n        this.ele = this.ele[0].nodeName.toLowerCase() == 'input'?\n         this.ele:$(\"input[type='text']\",this.ele);//兼容组件开发环境\n        $( this.ele).focus(function(e) {\n            self.wrapper.show();\n        }).on('input', function() {\n          self.timer&&clearTimeout(self.timer);\n          self.timer = setTimeout(function(){\n                 tree.filterBy(self.vmd.getText());\n            },400)\n           \n        })\n    }\n      window.addTreeView = function(combo,treeWrapper) {\n            new Intil(combo, treeWrapper.el.dom);\n        }\n}(window))\n\n","vmdcss":"","vmdprops":"\"\"","type":"ux","vmdinterface":"{\"components\":[{\"cid\":\"vmduxprops\",\"layoutConfig\":{},\"userConfig\":{}},{\"cid\":\"vmduxmethods\",\"id\":\"方法\",\"layoutConfig\":{},\"userConfig\":{}},{\"cid\":\"vmduxevents\",\"id\":\"事件\",\"layoutConfig\":{},\"userConfig\":{}}]}"}