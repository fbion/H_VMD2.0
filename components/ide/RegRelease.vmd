{"vmdversion":"2.0.3.1108","vmdlayout":"{\"components\":[{\"cid\":\"uxpanel\",\"id\":\"RegRelease\",\"layoutConfig\":{},\"userConfig\":{\"layout\":\"border\",\"afterrender\":\"RegRelease_afterrender\",\"width\":600,\"height\":600,\"style\":\"font-size: 14px\"},\"cn\":[{\"cid\":\"panel\",\"id\":\"panel\",\"layoutConfig\":{},\"userConfig\":{\"region\":\"center\",\"layout\":\"border\",\"header\":false,\"border\":false},\"cn\":[{\"cid\":\"panel\",\"id\":\"panel3\",\"layoutConfig\":{},\"userConfig\":{\"border\":true,\"header\":false,\"region\":\"center\",\"height\":619,\"layout\":\"anchor\"},\"cn\":[{\"cid\":\"container\",\"id\":\"div1\",\"layoutConfig\":{},\"userConfig\":{\"anchor\":\"100% 45%\",\"layout\":\"border\",\"border\":false},\"cn\":[{\"cid\":\"container\",\"id\":\"div11\",\"layoutConfig\":{\"align\":\"middle\"},\"userConfig\":{\"region\":\"north\",\"height\":35,\"layout\":\"hbox\",\"border\":false},\"cn\":[{\"cid\":\"label\",\"id\":\"label8\",\"layoutConfig\":{},\"userConfig\":{\"text\":\"平台配置\",\"style\":\"font-size: 14px;font-weight: bold\",\"margins\":\"0 0 0 10\"}}]},{\"cid\":\"container\",\"id\":\"div12\",\"layoutConfig\":{},\"userConfig\":{\"region\":\"center\",\"border\":false,\"layout\":\"border\"},\"cn\":[{\"cid\":\"container\",\"id\":\"div6\",\"layoutConfig\":{\"align\":\"middle\"},\"userConfig\":{\"region\":\"north\",\"height\":42,\"layout\":\"hbox\",\"border\":false,\"style\":\"border-top: 1px solid;    border-top-color: rgb(223, 223, 223)\"},\"cn\":[{\"cid\":\"label\",\"id\":\"label5\",\"layoutConfig\":{},\"userConfig\":{\"x\":10,\"y\":5,\"text\":\"平台库：\",\"style\":\"font-size: 14px;    color: #5f5f5f;\",\"margins\":\"2 0 0 10\"}},{\"cid\":\"vmdCombo\",\"id\":\"combo\",\"layoutConfig\":{},\"userConfig\":{\"x\":60,\"y\":1,\"beforerender\":\"combo_beforerender\",\"style\":\"font-size: 10px;    height: 22px;\",\"afterrender\":\"combo_afterrender\",\"change\":\"combo_change\"}},{\"cid\":\"label\",\"id\":\"label4\",\"layoutConfig\":{},\"userConfig\":{\"x\":220,\"y\":5,\"text\":\"类型：\",\"height\":20}},{\"cid\":\"radio\",\"id\":\"r_pt4\",\"layoutConfig\":{},\"userConfig\":{\"boxLabel\":\"平台4\",\"fieldLabel\":\"\",\"width\":62,\"id\":\"r_pt4\",\"checked\":true,\"x\":260,\"y\":0,\"beforerender\":\"r_pt4_beforerender\",\"afterrender\":\"r_pt4_afterrender\"}},{\"cid\":\"radio\",\"id\":\"r_pt5\",\"layoutConfig\":{},\"userConfig\":{\"fieldLabel\":\"\",\"boxLabel\":\"平台5\",\"width\":69,\"id\":\"r_pt5\",\"x\":320,\"y\":0,\"beforerender\":\"r_pt5_beforerender\",\"afterrender\":\"r_pt5_afterrender\"}}]},{\"cid\":\"container\",\"id\":\"div7\",\"layoutConfig\":{},\"userConfig\":{\"region\":\"center\",\"layout\":\"border\",\"style\":\"border: 1px solid;    border-color: rgb(223, 223, 223);\",\"border\":false,\"margins\":\"0 10 0 10\"},\"cn\":[{\"cid\":\"container\",\"id\":\"div\",\"layoutConfig\":{\"align\":\"middle\"},\"userConfig\":{\"region\":\"north\",\"height\":32,\"border\":false,\"style\":\"font-size: 14px;    background-color: #f5f9fc\",\"layout\":\"hbox\"},\"cn\":[{\"cid\":\"label\",\"id\":\"label\",\"layoutConfig\":{},\"userConfig\":{\"text\":\"请选择要注册的子系统：\",\"x\":10,\"y\":35,\"margins\":\"0 0 0 5\"}}]},{\"cid\":\"container\",\"id\":\"div8\",\"layoutConfig\":{},\"userConfig\":{\"layout\":\"fit\",\"region\":\"center\",\"border\":false},\"cn\":[{\"cid\":\"vmdTreeEx\",\"id\":\"tree\",\"layoutConfig\":{},\"userConfig\":{\"x\":180,\"y\":10,\"parentField\":\"parentid\",\"valueField\":\"subsysid\",\"textField\":\"subsysname\",\"loadType\":\"全部加载\",\"rootValue\":\"0\",\"rootText\":\"子系统\",\"hideRoot\":true}}]}]}]}]},{\"cid\":\"container\",\"id\":\"div3\",\"layoutConfig\":{},\"userConfig\":{\"anchor\":\"100% 55%\",\"layout\":\"border\",\"border\":false},\"cn\":[{\"cid\":\"container\",\"id\":\"div4\",\"layoutConfig\":{},\"userConfig\":{\"region\":\"north\",\"border\":false,\"layout\":\"border\",\"height\":100},\"cn\":[{\"cid\":\"container\",\"id\":\"div9\",\"layoutConfig\":{\"align\":\"middle\"},\"userConfig\":{\"region\":\"north\",\"height\":35,\"border\":false,\"layout\":\"hbox\"},\"cn\":[{\"cid\":\"label\",\"id\":\"label7\",\"layoutConfig\":{},\"userConfig\":{\"text\":\"服务信息\",\"margins\":\"0 0 0 10\",\"style\":\"font-size: 14px;font-weight: bold\"}}]},{\"cid\":\"container\",\"id\":\"div10\",\"layoutConfig\":{},\"userConfig\":{\"layout\":\"absolute\",\"region\":\"center\",\"border\":false,\"style\":\"border-top: 1px solid;    border-top-color: rgb(223, 223, 223)\",\"height\":61},\"cn\":[{\"cid\":\"label\",\"id\":\"label2\",\"layoutConfig\":{},\"userConfig\":{\"x\":15,\"y\":5,\"text\":\"数据服务地址:\",\"style\":\"font-size: 14px;    color: #5f5f5f;\"}},{\"cid\":\"textfield\",\"id\":\"txt_dataserverip\",\"layoutConfig\":{},\"userConfig\":{\"x\":110,\"y\":0,\"width\":180,\"columnWidth\":0.5,\"id\":\"txt_dataserverip\",\"beforerender\":\"txt_dataserverip_beforerender\"}},{\"cid\":\"label\",\"id\":\"label3\",\"layoutConfig\":{},\"userConfig\":{\"x\":310,\"y\":5,\"text\":\"工作流地址：\",\"style\":\"font-size: 14px;    color: #5f5f5f;\"}},{\"cid\":\"textfield\",\"id\":\"txt_workflowip\",\"layoutConfig\":{},\"userConfig\":{\"x\":400,\"y\":0,\"width\":180,\"columnWidth\":0.5,\"id\":\"txt_workflowip\",\"beforerender\":\"txt_workflowip_beforerender\"}},{\"cid\":\"label\",\"id\":\"label6\",\"layoutConfig\":{},\"userConfig\":{\"x\":15,\"y\":35,\"text\":\"消息中心地址:\",\"style\":\"font-size: 14px;    color: #5f5f5f;\"}},{\"cid\":\"textfield\",\"id\":\"txt_msg\",\"layoutConfig\":{},\"userConfig\":{\"x\":110,\"y\":27,\"width\":180,\"columnWidth\":0.5,\"beforerender\":\"txt_msg_beforerender\",\"id\":\"txt_msg\"}}]}]},{\"cid\":\"container\",\"id\":\"div5\",\"layoutConfig\":{},\"userConfig\":{\"region\":\"center\",\"layout\":\"border\",\"border\":false},\"cn\":[{\"cid\":\"container\",\"id\":\"div2\",\"layoutConfig\":{\"align\":\"middle\"},\"userConfig\":{\"anchor\":\"100% 10%\",\"border\":false,\"layout\":\"hbox\",\"region\":\"north\",\"height\":35},\"cn\":[{\"cid\":\"label\",\"id\":\"title\",\"layoutConfig\":{},\"userConfig\":{\"anchor\":\"\",\"height\":20,\"id\":\"title\",\"text\":\" 资源中心\",\"autoHeight\":false,\"width\":100,\"y\":5,\"x\":10,\"autoWidth\":true,\"style\":\"font-size: 14px;font-weight: bold\",\"margins\":\"0 0 0 10\"}}]},{\"cid\":\"container\",\"id\":\"DivResource\",\"layoutConfig\":{},\"userConfig\":{\"anchor\":\"100% 30%\",\"id\":\"DivResource\",\"layout\":\"fit\",\"region\":\"center\",\"style\":\"border-top: 1px solid;    border-top-color: rgb(223, 223, 223)\",\"border\":false},\"cn\":[{\"cid\":\"panel\",\"id\":\"palResource\",\"layoutConfig\":{},\"userConfig\":{\"border\":false,\"header\":false,\"id\":\"palResource\",\"layout\":\"anchor\",\"autoScroll\":true},\"cn\":[{\"cid\":\"vmd.ux.PublishResource\",\"id\":\"PublishResource\",\"layoutConfig\":{},\"userConfig\":{\"anchor\":\"100% \"}}]}]}]}]}]},{\"cid\":\"panel\",\"id\":\"panel4\",\"layoutConfig\":{},\"userConfig\":{\"region\":\"south\",\"header\":false,\"border\":false,\"height\":32,\"layout\":\"absolute\",\"style\":\"border-top: 1px solid;    border-top-color: rgb(223, 223, 223)\"},\"cn\":[{\"cid\":\"label\",\"id\":\"label1\",\"layoutConfig\":{},\"userConfig\":{\"text\":\"虚拟目录：\",\"x\":10,\"y\":5,\"style\":\"font-size: 14px;\"}},{\"cid\":\"textfield\",\"id\":\"MyField\",\"layoutConfig\":{},\"userConfig\":{\"x\":80,\"y\":3,\"width\":220}}]}]}]},{\"cid\":\"vmddataset\",\"id\":\"数据集\",\"layoutConfig\":{},\"userConfig\":{}},{\"cid\":\"vmdvariable\",\"id\":\"变量\",\"layoutConfig\":{},\"userConfig\":{}}]}","vmdevents":"var workspaceid = getUrlParam(workspaceid)\nif(workspaceid) {\n    vmd.core.getWorkSpaceServer(workspaceid);\n}\n//定义校验规则表达式\nvar strRegex = '^(([0-9a-z_!~*().&=+$%-]+: )?[0-9a-z_!~*().&=+$%-]+@)?' //ftp的user@\n    +\n    '(([0-9]{1,3}.){3}[0-9]{1,3}' // IP形式的URL- 199.194.52.184\n    +\n    '|' // 允许IP和DOMAIN（域名）\n    +\n    '([0-9a-z_!~*()-]+.)*' // 域名- www.\n    +\n    '([0-9a-z][0-9a-z-]{0,61})?[0-9a-z].' // 二级域名\n    +\n    '[a-z]{2,6})' // first level domain- .com or .museum\n    +\n    '(:[0-9]{1,4})?' // 端口- :80\n    +\n    '((/?)|' // a slash isn't required if there is no file name\n    +\n    '(/[0-9a-z_!~*().;?:@&=+$,%#-]+)+/?)$';\n\nfunction loadSubSys(defaultId) {\n    if(c_r_pt5.checked) {\n        tree.leafImg = \"/modules/eQ9ULgcVb1/img/folderClosed.gif\";\n    } else {\n        tree.leafImg = \"/lib/dhtmlx/imgs/dhxtree_material/tree/model.png\";\n    }\n    tree.store.toRefresh(function() {\n        if(defaultId) {\n            var selNode = tree.getNodeById(defaultId);\n            if(selNode) {\n                tree.expandPath(selNode.getPath());\n                selNode.select();\n            }\n        }\n    });\n    return;\n}\n\nvar objlistResourceNameIP = {};\nfunction saveRegReleaseInfo(projectid, callback) {\n    var pttype = \"4\";\n    if(r_pt5checked)\n        pttype = \"5\";\n\n    var selSubSysID = \"\";\n    selSubSysID = tree.getSelNodeId();\n    if(!selSubSysID) {\n        Ext.Msg.alert('提示', '请选择要注册的子系统！')\n        return;\n    }\n\n    var listPublishResourceServers = [];\n    objlistResourceNameIP = {};\n    for(var i = 0; i < listPublishResourceComps.length; i++) {\n        var Serversinfo = listPublishResourceComps[i].getText();\n        listPublishResourceServers.push(Serversinfo);\n    }\n\n    for(var i = 0; i < listResourceNameIP.length; i++) {\n        for(var j = 0; j < listPublishResourceServers.length; j++) {\n            if(listResourceNameIP[i].oldip == listPublishResourceServers[j].oldIP) {\n                listResourceNameIP[i].newip = listPublishResourceServers[j].newIP || listPublishResourceServers[j].oldIP\n                objlistResourceNameIP[listResourceNameIP[i].name] = \"http://\" + listResourceNameIP[i].newip + \"/resource\";\n                break;\n            }\n        }\n    }\n    hwDas.save(\"DataServiceWorkSpace/projectInfo/projectreginfo\", {}, {}, [{\n        projectid: projectid,\n        pttype: pttype,\n        virtualdir: MyField.getValue(),\n        subsysid: selSubSysID, //hwTree.getSelectedItemId(),\n        dasserver: txt_dataserverip.getValue(),\n        wfserver: txt_workflowip.getValue(),\n        msgserver: txt_msg.getValue(),\n        resourceserver: Ext.encode(listResourceNameIP),\n        ptdb: combo.getValue()\n\n    }], function(result) {\n        if(callback)\n            callback(result)\n        saveReleaseConfig(projectid);\n    }, function(msg) {})\n}\n\nfunction saveReleaseConfig(project) {\n    // 保存配置信息\n    var saveVmdConfig = function(filename, bodyStr) {\n        Ext.Ajax.request({\n            url: vmd.vmdUploadPath + 'FileService',\n            timeout: 5000,\n            success: function(result) {},\n            failure: function(result) {\n                Ext.Msg.alert('错误', '网络超时，保存项目配置信息失败！')\n            },\n            headers: {\n                FileName: 'release/' + project + \"/\" + filename,\n            },\n            params: {\n                body: bodyStr\n            }\n        })\n    }\n\n    var bodyStr = 'vmd.workspace={\\n';\n    bodyStr += \"dataServiceIp: \\\"\" + (txt_dataserverip.getValue()) + \"\\\",\\n\";\n    bodyStr += \"workflowIp: \\\"\" + (txt_workflowip.getValue()) + \"\\\",\\n\";\n    bodyStr += \"msgIp: \\\"\" + (txt_msg.getValue()) + \"\\\"\\n\";\n    bodyStr += '}' + \"\\n\";\n    //objlistResourceNameIP\n    bodyStr += 'vmd.resourceSettings={\\n';\n    for(g in objlistResourceNameIP) {\n        bodyStr += \"\\\"\" + g + \"\\\":\\\"\" + objlistResourceNameIP[g] + \"\\\",\\n\";\n    }\n    bodyStr += '}' + \"\\n\";\n\n    if(txt_msg.getValue() != \"\") {\n        bodyStr += \"hwMSC.host=\\\"\" + (txt_msg.getValue()) + \"\\\"\\n\";\n    }\n\n    if(txt_dataserverip.getValue() != \"\") {\n        bodyStr += \"hwDas.hosts=[\\\"\" + (txt_dataserverip.getValue()) + \"\\\"]\\n\";\n    }\n    //处理项目的配置文件\n    saveVmdConfig(\"config.js\", bodyStr);\n}\n\nvar listPublishResourceComps = []; //记录动态添加的组件列表。\nvar listResourceIP = []; //记录当前模块所有的资源服务器地址\nvar listResourceNameIP = []; //记录资源的名称和ip信息\n\nvar r_pt5checked = false;\n\nfunction changept(snder, check) {\n    {\n        if(snder._id == \"r_pt5\" && check)\n            r_pt5checked = true;\n        else if(snder._id == \"r_pt4\" && !check)\n            r_pt5checked = true;\n        else\n            r_pt5checked = false;\n        loadSubSys()\n    }\n}\n\nfunction RegRelease_afterrender(sender) {}\n\nfunction getRegReleaseInfo(projectId, callback) {\n    hwDas.get(\"DataServiceWorkSpace/projectInfo/projectreginfo\", {}, {\n        projectid: projectId\n    }, function(result) {\n        var subsysid;\n        var resourceserver = [];\n        if(result.data && result.data.length > 0 && result.data[0].datas && result.data[0].datas.length > 0) {\n            if(result.data[0].datas[0].pttype == \"5\") {\n                r_pt5checked = true;\n                r_pt4.checked = false;\n                r_pt4.setValue(false)\n                r_pt5.checked = true;\n                r_pt5.setValue(true)\n            } else {\n                r_pt5checked = false;\n            }\n            if(result.data[0].datas[0].ptdb == \"\" && result.data[0].datas[0].pttype == \"5\")\n                combo.setValue(\"newpt\")\n            else if(result.data[0].datas[0].ptdb == \"\")\n                combo.setValue(\"pt\")\n            else\n                combo.setValue(result.data[0].datas[0].ptdb)\n\n            subsysid = result.data[0].datas[0].subsysid;\n            txt_dataserverip.setValue(result.data[0].datas[0].dasserver)\n            txt_workflowip.setValue(result.data[0].datas[0].wfserver)\n            txt_msg.setValue(result.data[0].datas[0].msgserver)\n            MyField.setValue(result.data[0].datas[0].virtualdir)\n            resourceserver = Ext.decode(result.data[0].datas[0].resourceserver);\n        }\n        loadSubSys(subsysid);\n        //添加radio的check事件，在此处添加的原因为防止初始化时，设置radio选中会触发事件，调用loadSubSys，导致加载两次树\n        addCheckEvent();\n        //递归添加地址对应组件，并设置内容\n        hwDas.get(\"DataServiceWorkSpace/projectInfo/getResSerByProjectId\", {}, {\n            projectid: projectId //\"hwfc1422a6\" //\n        }, function(result) {\n            if(result.data && result.data.length > 0 && result.data[0].datas && result.data[0].datas.length > 0) {\n                for(var i = 0; i < result.data[0].datas.length; i++) {\n                    if(listResourceIP.indexOf(result.data[0].datas[i].resource_server_ip) < 0) {\n                        listResourceIP.push(result.data[0].datas[i].resource_server_ip);\n                        var ipresource = new vmd.ux.PublishResource({\n                            id: \"PublishResource\" + i,\n                            anchor: \"100% \"\n                        });\n                        palResource.add(ipresource)\n                        var newip = \"\";\n                        for(var j = 0; j < resourceserver.length; j++) {\n                            if(resourceserver[j].oldip == result.data[0].datas[i].resource_server_ip)\n                                newip = resourceserver[j].newip;\n                        }\n                        ipresource.setText(result.data[0].datas[i].resource_server_ip, newip, result.data[0].datas[i].fullname.replace('&&', '/'));\n                        listPublishResourceComps.push(ipresource)\n                    }\n                    listResourceNameIP.push({\n                        name: result.data[0].datas[i].fullname,\n                        oldip: result.data[0].datas[i].resource_server_ip,\n                        newip: \"\"\n                    })\n                }\n                PublishResource.hide();\n                palResource.onBodyResize()\n            } else { //如果没有设置资源中新，则读取本地默认的资源中心地址，处理逻辑与上述处理一致\n                //调用获取资源中新的公共方法\n                vmd.core.getModuleResourceServices(parent.hwTree.getSelectedItemId(), function(serverlist) {\n                    //遍历 默认的资源地址  \n                    for(var i = 0; i < serverlist.length; i++) {\n                        if(serverlist[i].children && serverlist[i].children.length > 0) {\n                            for(var ii = 0; ii < serverlist[i].children.length; ii++) {\n                                var fullname = serverlist[i].name + '&&' + serverlist[i].children[ii].name;\n                                if(listResourceIP.indexOf(serverlist[i].children[ii].address) < 0) {\n                                    listResourceIP.push(serverlist[i].children[ii].address);\n                                    var ipresource = new vmd.ux.PublishResource({\n                                        id: \"PublishResource\" + i + ii,\n                                        anchor: \"100% \"\n                                    });\n                                    //动态添加地址替换组件，根据有多少不同的地址进行添加\n                                    palResource.add(ipresource)\n                                    var newip = \"\";\n                                    //获取替换的服务的新老地址\n                                    for(var j = 0; j < resourceserver.length; j++) {\n                                        if(resourceserver[j].oldip == serverlist[i].children[ii].address)\n                                            newip = resourceserver[j].newip;\n                                    }\n                                    //将新老地址赋给替换组件进行替换\n                                    ipresource.setText(serverlist[i].children[ii].address, newip, fullname.replace('&&', '/'));\n                                    listPublishResourceComps.push(ipresource)\n                                }\n                                listResourceNameIP.push({\n                                    name: fullname,\n                                    oldip: serverlist[i].children[ii].address,\n                                    newip: \"\"\n                                })\n                            }\n                        }\n                    }\n                    PublishResource.hide();\n                    palResource.onBodyResize()\n                }, function(msg) {})\n            }\n        }, function(msg) {});\n    }, function(msg) {})\n}\n\nfunction r_pt4_beforerender(sender) {\n    r_pt4.name = \"rgroup\"\n    r_pt4._id = \"r_pt4\";\n}\n\nfunction r_pt5_beforerender(sender) {\n    r_pt5.name = \"rgroup\"\n    r_pt5._id = \"r_pt5\";\n}\n\nvar c_r_pt4;\nvar c_r_pt5;\n\nfunction r_pt4_afterrender(sender) {\n    c_r_pt4 = sender;\n}\n\nfunction r_pt5_afterrender(sender) {\n    c_r_pt5 = sender;\n}\n\nfunction addCheckEvent() {\n    c_r_pt4.on('check', function(radio, checked) {\n        changept(radio, checked);\n    })\n    c_r_pt5.on('check', function(radio, checked) {\n        changept(radio, checked);\n    })\n}\n\nfunction combo_beforerender(sender) {\n    combo.displayField = \"name\";\n    combo.valueField = \"id\";\n}\n\nfunction combo_afterrender(sender) {\n\n}\n\nfunction combo_change(sender) {\n    loadSubSys();\n}\n\nfunction txt_dataserverip_beforerender(sender) {\n    txt_dataserverip.regex = new RegExp(strRegex)\n    txt_dataserverip.regexText = \"输入标准的服务器地址！无需输入‘http://’\";\n}\n\nfunction txt_workflowip_beforerender(sender) {\n    txt_workflowip.regex = new RegExp(strRegex)\n    txt_workflowip.regexText = \"输入标准的服务器地址！无需输入‘http://’\";\n}\n\nfunction txt_msg_beforerender(sender) {\n    txt_msg.regex = new RegExp(strRegex)\n    txt_msg.regexText = \"输入标准的服务器地址！无需输入‘http://’\";\n}","vmdcss":".div.dhxcombo_material input.dhxcombo_input {\n    font-size: 10px;\n}\n\n.div.dhxcombo_material {\n    height: 22px;\n}\n\ndiv.dhxcombo_material div.dhxcombo_select_button {\n    top: 1px;\n}\n\ndiv.dhxcombo_material {\n    border: 1px solid;\n    border-color: #dfdfdf\n}","vmdprops":"\"\"","type":"ux","vmdinterface":"{\"components\":[{\"cid\":\"vmduxprops\",\"layoutConfig\":{},\"userConfig\":{},\"cn\":[{\"cid\":\"uxprop\",\"id\":\"subSysTreeStore\",\"layoutConfig\":{},\"userConfig\":{\"id\":\"subSysTreeStore\",\"zhname\":\"\",\"bindCmp\":\"tree\",\"bindValue\":\"store\",\"isPublic\":\"on\",\"desc\":\"\",\"uxcid\":\"vmdTreeEx\",\"group\":\"\"}},{\"cid\":\"uxprop\",\"id\":\"datasource\",\"layoutConfig\":{},\"userConfig\":{\"id\":\"datasource\",\"desc\":\"\",\"zhname\":\"\",\"isPublic\":\"on\",\"bindCmp\":\"combo\",\"bindValue\":\"store\",\"uxcid\":\"vmdCombo\"}}]},{\"cid\":\"vmduxmethods\",\"id\":\"方法\",\"layoutConfig\":{},\"userConfig\":{},\"cn\":[{\"cid\":\"uxmethod\",\"id\":\"saveRegInfo\",\"layoutConfig\":{},\"userConfig\":{\"id\":\"saveRegInfo\",\"zhname\":\"\",\"bindCmp\":\"\",\"bindValue\":\"\",\"isPublic\":\"on\",\"desc\":\"\",\"uxcid\":\"\",\"params\":\"projectId,callback\",\"code\":\"//直接填写方法内容\\nsaveRegReleaseInfo(projectId,callback)\",\"returnType\":\"\"}},{\"cid\":\"uxmethod\",\"id\":\"getRegInfo\",\"layoutConfig\":{},\"userConfig\":{\"id\":\"getRegInfo\",\"zhname\":\"\",\"bindCmp\":\"\",\"bindValue\":\"\",\"isPublic\":\"on\",\"desc\":\"\",\"uxcid\":\"\",\"params\":\"projectId,callback\",\"code\":\"//直接填写方法内容\\ngetRegReleaseInfo(projectId,callback)\",\"returnType\":\"\"}},{\"cid\":\"uxmethod\",\"id\":\"getPtType\",\"layoutConfig\":{},\"userConfig\":{\"id\":\"getPtType\",\"zhname\":\"\",\"bindCmp\":\"\",\"bindValue\":\"\",\"isPublic\":\"on\",\"desc\":\"\",\"uxcid\":\"\",\"params\":\"\",\"code\":\"//直接填写方法内容\\nif(c_r_pt4.checked)\\n    return \\\"\\\";\\nelse if(c_r_pt5.checked)\\n    return \\\"5\\\";\",\"returnType\":\"\"}},{\"cid\":\"uxmethod\",\"id\":\"getptdb\",\"layoutConfig\":{},\"userConfig\":{\"id\":\"getptdb\",\"zhname\":\"\",\"bindCmp\":\"\",\"bindValue\":\"\",\"isPublic\":\"on\",\"desc\":\"设置平台库的默认值\",\"uxcid\":\"\",\"params\":\"\",\"code\":\"//直接填写方法内容\\nreturn combo.getValue();\",\"returnType\":\"\"}}]},{\"cid\":\"vmduxevents\",\"id\":\"事件\",\"layoutConfig\":{},\"userConfig\":{}}]}"}