{"vmdversion":"vmd2.0.6.200119","vmdlayout":"{\"components\":[{\"cid\":\"viewport\",\"id\":\"MyViewport\",\"layoutConfig\":{},\"userConfig\":{\"layout\":\"border\",\"afterrender\":\"MyViewport_afterrender\"},\"cn\":[{\"cid\":\"panel\",\"id\":\"MyP_info\",\"layoutConfig\":{},\"userConfig\":{\"x\":0,\"y\":60,\"height\":640,\"layout\":\"border\",\"region\":\"center\",\"id\":\"MyP_info\",\"header\":false},\"cn\":[{\"cid\":\"panel\",\"id\":\"MyP_ModelTree\",\"layoutConfig\":{},\"userConfig\":{\"width\":220,\"height\":639,\"layout\":\"border\",\"x\":0,\"y\":0,\"region\":\"west\",\"id\":\"MyP_ModelTree\",\"header\":false,\"style\":\"background-color: white;\",\"bodyStyle\":\" background-color: white;\",\"split\":true,\"floatable\":false,\"collapseMode\":\"mini\",\"collapsible\":true},\"cn\":[{\"cid\":\"panel\",\"id\":\"panel1\",\"layoutConfig\":{},\"userConfig\":{\"region\":\"north\",\"border\":false,\"header\":false,\"height\":33,\"layout\":\"fit\",\"margins\":\"5 0 0 0\"},\"cn\":[{\"cid\":\"vmdComlist\",\"id\":\"comlist\",\"layoutConfig\":{},\"userConfig\":{\"beforerender\":\"comlist_beforerender\",\"selectChanged\":\"comlist_selectChanged\",\"afterrender\":\"comlist_afterrender\"}}]},{\"cid\":\"panel\",\"id\":\"MyPanel1\",\"layoutConfig\":{},\"userConfig\":{\"x\":70,\"y\":130,\"height\":300,\"border\":false,\"header\":false,\"region\":\"center\",\"layout\":\"fit\",\"style\":\"margin-left: 5px;    margin-top: 10px;    padding-right: 5px;    padding-bottom:  10px;\"},\"cn\":[{\"cid\":\"vmdTree\",\"id\":\"hwTree\",\"layoutConfig\":{},\"userConfig\":{\"x\":0,\"y\":0,\"afterrender\":\"hwTree_afterrender\",\"height\":580,\"width\":220,\"onOpenEnd\":\"hwTree_onOpenEnd\",\"nodeClick\":\"hwTree_nodeClick\",\"region\":\"center\",\"onOpenStart\":\"hwTree_onOpenStart\",\"onDblClick\":\"hwTree_onDblClick\",\"doubleClick\":\"\",\"nodeSelected\":\"\",\"CheckBox\":true,\"anchor\":\"100% 50%\",\"Check\":\"hwTree_Check\"}}]}]},{\"cid\":\"panel\",\"id\":\"MyP_jcxx\",\"layoutConfig\":{},\"userConfig\":{\"width\":900,\"x\":220,\"y\":0,\"height\":640,\"layout\":\"absolute\",\"region\":\"center\",\"id\":\"MyP_jcxx\",\"header\":false,\"autoScroll\":true},\"cn\":[{\"cid\":\"vmd.ux.UserControlInfo\",\"id\":\"UserControlInfo\",\"layoutConfig\":{},\"userConfig\":{\"x\":0,\"y\":0,\"hidden\":false,\"afterrender\":\"UserControlInfo_afterrender\",\"height\":510,\"disabled\":false}}]}]},{\"cid\":\"container\",\"id\":\"div1\",\"layoutConfig\":{},\"userConfig\":{\"region\":\"south\",\"layout\":\"fit\"},\"cn\":[{\"cid\":\"panel\",\"id\":\"panel\",\"layoutConfig\":{\"align\":\"middle\",\"pack\":\"center\"},\"userConfig\":{\"region\":\"south\",\"height\":50,\"border\":true,\"header\":false,\"layout\":\"hbox\"},\"cn\":[{\"cid\":\"vmdButton\",\"id\":\"button\",\"layoutConfig\":{},\"userConfig\":{\"x\":500,\"y\":490,\"size\":\"small\",\"type\":\"info\",\"text\":\"确定\",\"click\":\"button_click\",\"margins\":\"0 10 0 0\"}},{\"cid\":\"vmdButton\",\"id\":\"button1\",\"layoutConfig\":{},\"userConfig\":{\"type\":\"info\",\"text\":\"取消\",\"margins\":\"0 0 0 10\",\"click\":\"button1_click\"}}]}]}]},{\"cid\":\"vmddataset\",\"id\":\"数据\",\"layoutConfig\":{},\"userConfig\":{}},{\"cid\":\"vmdvariable\",\"id\":\"变量\",\"layoutConfig\":{},\"userConfig\":{}},{\"cid\":\"vmdsubviewport\",\"id\":\"SubView_Window\",\"layoutConfig\":{},\"userConfig\":{}}]}","vmdevents":"var proIns = vmd.getUrlParam(\"proIns\") || false\nvar uxType = '4'\nif (proIns)\n    uxType = '5'\n//\nvar projectId = getUrlParam(\"projectid\");\n//是否单选\nvar onlySelOne = getUrlParam(\"selType\");\n//上次点击的节点\nvar bselNodeId = \"\";\n//获取传递的设计模式\nvar allowedDesigner = false;\n// 检索组件\nvar selectData = [],\n    cateData = [];\nvar store = new Ext.data.JsonStore({\n    proxy: new Ext.data.MemoryProxy(),\n    fields: ['id', 'text']\n});\n\nvar selUXcomps = [];\n\nvar d_selUXcomps = [];\n\nif (projectId) {\n    hwDas.get(\"CDEServcie/resource/getProjectComps\", {}, {\n        project_id: projectId\n    }, function(result) {\n        var datajson = result.data[0].datas;\n        for (var i = 0; i < datajson.length; i++) {\n            selUXcomps.push(datajson[i].cde_resource_id)\n        }\n    }, function(emsg) {\n\n    })\n} else {}\n\n\n//进度提示\nvar myMask = new Ext.LoadMask(Ext.getBody(), {\n    msg: \"数据加载中,请稍后...\",\n    msgCls: 'z-index:10000;'\n});\n\n//初始化数据\nfunction hwTree_afterrender(sender) {\n    myMask = new Ext.LoadMask(Ext.getCmp(\"hwTree\").el, {\n        msg: \"数据加载中,请稍后...\",\n        msgCls: 'z-index:10000;'\n    });\n    myMask.show();\n    var mytree = hwTree;\n    var firstNode = \"\";\n    mytree.deleteChildItems(0);\n    mytree.loadJSONObject({\n        id: 0,\n        text: \"我的复合组件\",\n        item: []\n    });\n    if (proIns) {\n        mytree.enableRadioButtons(true)\n        mytree.enableSingleRadioMode(true)\n    }\n    mytree.itemObj = {};\n    mytree.newnode = false;\n    var publish = false\n    var loadTree = function() {\n        hwDas.ajax({\n            das: {\n                idedas: true\n            },\n            url: \"CDEServcie/resource/category\",\n            type: 'get',\n            timeout: 5000,\n            params: {\n                parent_id: \"0\",\n                type: uxType\n            },\n            success: function(result) {\n                var datajson = result.data[0].datas;\n                var treeDataJson = [];\n                for (var i = 0; i < datajson.length; i++) {\n                    if(publish&&datajson[i].name==\"vmd框架\")\n                        continue;\n                    mytree.insertNewChild(\"0\", datajson[i].id, datajson[i].name);\n                    mytree.setItemImage2(datajson[i].id, \"tree/folderClosed.gif\", \"tree/folderOpen.gif\", \"tree/folderClosed.gif\")\n                    mytree.insertNewChild(datajson[i].id, datajson[i].id + \"-0\", \"\");\n                    mytree.closeItem(datajson[i].id);\n                    var treenode = mytree.item(datajson[i].id);\n                    mytree.showItemCheckbox(datajson[i].id, false)\n                    if (treenode) {\n                        treenode.isFord = true;\n                        treenode.loadChild = false;\n                    }\n                    mytree.itemObj[datajson[i].id] = treenode;\n                }\n                myMask.hide();\n            },\n            error: function(msg) {\n                myMask.hide();\n                Ext.Msg.alert(\"提示\", \"获取模块信息失败\", function() {})\n            }\n        })\n    }\n    //获取当前是否为开发环境，通过版本 publish  来判断，隐藏vmd的组件节点\n    var hwFao1 = new HwFao(vmd.MicService.getReportIp(), \"vmd\");\n    hwFao1.read(\"vmdVersion.json\", function(result) {\n        try {\n            var vers = JSON.parse(result.data)\n            publish = vers.publish\n        } catch (q) {}\n        loadTree()\n    }, function() {\n        loadTree()\n    })\n}\n\nfunction hwTree_onOpenEnd(sender, id) {\n    myMask.show();\n    var proId = id;\n    var mytree = hwTree;\n    mytree.newnode = false;\n    var hasChild = mytree.hasChildren(proId);\n    var selnode = mytree.itemObj[proId];\n    var selnodepath = selnode.path;\n    var projectId = \"\";\n    var childParentId = \"0\";\n    childParentId = proId\n    if (!selnode.loadChild && !selnode.isModel) {\n        //绑定项目下的资源目录\n        hwDas.ajax({\n            das: {\n                idedas: true\n            },\n            url: \"CDEServcie/resource/category\",\n            type: 'get',\n            timeout: 5000,\n            params: {\n                //project_id: projectId,\n                parent_id: childParentId,\n                type: uxType\n            },\n            success: function(result) {\n                var datajson = result.data[0].datas;\n                var treeDataJson = [];\n                for (var i = 0; i < datajson.length; i++) {\n                    mytree.insertNewChild(proId, datajson[i].id, datajson[i].name);\n                    mytree.setItemImage2(datajson[i].id, \"tree/folderClosed.gif\", \"tree/folderOpen.gif\", \"tree/folderClosed.gif\")\n                    mytree.insertNewChild(datajson[i].id, datajson[i].id + \"-0\", \"\");\n                    mytree.closeItem(datajson[i].id);\n                    var treenode = mytree.item(datajson[i].id);\n                    treenode.path = selnodepath + \"/\" + datajson[i].id;\n                    //treenode.projectId = projectId;\n                    if (treenode) {\n                        treenode.isFord = true;\n                        treenode.loadChild = false;\n                    }\n                    mytree.itemObj[datajson[i].id] = treenode;\n                }\n                myMask.hide();\n            },\n            error: function(msg) {\n                myMask.hide();\n                Ext.Msg.alert(\"提示\", \"获取模块信息失败\", function() {})\n            }\n        })\n        if (!selnode.loadChild) {\n            mytree.deleteItem(id + \"-0\", false);\n        }\n        selnode.loadChild = true;\n        //获取项目下的资源\n        hwDas.ajax({\n            das: {\n                idedas: true\n            },\n            url: \"CDEServcie/resource/zygl\",\n            type: 'get',\n            timeout: 5000,\n            params: {\n                category_id: childParentId,\n                //project_id: projectId,\n                type: uxType\n            },\n            success: function(result) {\n                var datajson = result.data[0].datas;\n                var treeDataJson = [];\n                for (var i = 0; i < datajson.length; i++) {\n                    mytree.insertNewChild(proId, datajson[i].id, datajson[i].name);\n                    mytree.setItemImage2(datajson[i].id, \"tree/model.png\", \"tree/model.png\", \"tree/model.png\")\n                    var treenode = mytree.item(datajson[i].id);\n                    treenode.path = selnodepath + \"/\" + datajson[i].id;\n                    //treenode.projectId = projectId;\n                    if (selUXcomps.indexOf(datajson[i].id) >= 0)\n                        mytree.setCheck(datajson[i].id, 1);\n                    if (treenode) {\n                        treenode.isModel = true;\n                        treenode.createuser = datajson[i].row_created_by;\n                        treenode.createtime = datajson[i].row_created_date;\n                        treenode.changetime = datajson[i].row_changed_date;\n                        treenode.changeuser = datajson[i].row_changed_by;\n                        treenode.uxname = datajson[i].uxname;\n                        treenode.code = datajson[i].code;\n                        treenode.version = datajson[i].version;\n                        treenode.type = datajson[i].type;\n                        treenode.shared = datajson[i].shared;\n                        treenode.remark = datajson[i].remark;\n                    }\n                    mytree.itemObj[datajson[i].id] = treenode;\n                }\n                //数据操作  \n                myMask.hide();\n            },\n            error: function(msg) {\n                myMask.hide();\n                Ext.Msg.alert(\"提示\", \"获取复合组件信息失败\")\n            }\n        })\n    } else {\n        myMask.hide();\n    }\n}\n//////////////////////////////////////////点击树节点操作\nfunction hwTree_nodeClick(sender, id) {\n    myMask.show();\n    var proId = id;\n    var mytree = hwTree;\n    mytree.newnode = false;\n    var hasChild = mytree.hasChildren(proId);\n    var selnode = mytree.itemObj[proId];\n    var selnodepath = selnode.path;\n    var projectId = \"\";\n    var childParentId = \"0\";\n    if (bselNodeId != id) {\n        if (selnode.isModel) {\n            UserControlInfo.show();\n            UserControlInfo.refresh(hwTree);\n            //document.getElementById(\"iframe_page\").src = '/modules/eQ9ULgcVb1/hw61499a5d/hw6000f88a.html';\n        } else {\n            UserControlInfo.show();\n            UserControlInfo.refresh(hwTree);\n            // document.getElementById(\"iframe_page\").src = '/modules/eQ9ULgcVb1/eQ9ULgcVb5/hw03cb4931.html';\n        }\n    }\n    bselNodeId = id;\n    myMask.hide();\n}\n\n//页面加载完后事件\nfunction MyViewport_afterrender(sender) {\n    UserControlInfo.show();\n    UserControlInfo.setReadOnly(true);\n    getZJData();\n}\n\nfunction UserControlInfo_afterrender(sender) {\n    UserControlInfo.setReadOnly();\n}\n\nfunction button_click(sender, e) {\n    if (projectId) {\n        hwDas.del(\"CDEServcie/resource/getProjectComps\", {}, {\n            project_id: projectId\n        }, function() {\n            var p_selUXcomps = [];\n            for (var i = 0; i < selUXcomps.length; i++) {\n                p_selUXcomps.push({\n                    project_id: projectId,\n                    cde_resource_id: selUXcomps[i]\n                })\n            }\n            hwDas.save(\"CDEServcie/resource/getProjectComps\", {}, {}, p_selUXcomps, function() {}, function() {})\n        }, function() {})\n    } else {\n        var mytree = hwTree;\n        for (var i = 0; i < selUXcomps.length; i++) {\n            var tnode = mytree.itemObj[selUXcomps[i]];\n            d_selUXcomps.push({\n                id: tnode.id,\n                cls: tnode.text,\n                name: tnode.uxname,\n                version: tnode.version,\n                uxType: proIns ? \"1\" : \"0\"\n            })\n        }\n\n        if (parent && parent.xds.uxSelectWin && parent.xds.uxSelectWin.addUx)\n            parent.xds.uxSelectWin.addUx(d_selUXcomps)\n        if (proIns&&d_selUXcomps.length>0)\n        {\n            //send(d_selUXcomps[0])\n            parent.edclose && parent.edclose(d_selUXcomps[0]);\n        }\n    }\n}\n\nfunction send(d_selUXcomps) {\n    data = Ext.encode(d_selUXcomps);\n    parent.postMessage && parent.postMessage(data, '*'); // 触发父页面的message事件\n}\n\nfunction hwTree_Check(sender, id, state) {\n    var mytree = hwTree;\n    mytree.selectItem(id);\n    UserControlInfo.refresh(hwTree);\n    if (onlySelOne)\n        selUXcomps = []\n    if (state == \"1\") {\n        selUXcomps.push(id)\n\n    } else {\n        Ext.Array.remove(selUXcomps, id)\n    }\n}\n\nfunction button1_click(sender, e) {\n    if (parent && parent.xds.uxSelectWin)\n        parent.xds.uxSelectWin.close();\n}\n\n// 获取组建信息\nfunction getZJData() {\n    hwDas.ajax({\n        das: {\n            idedas: true\n        },\n        url: \"CDEServcie/resource/zygl\",\n        type: 'get',\n        timeout: 5000,\n        params: {\n            type: uxType\n        },\n        success: function(result) {\n            var datajson = result.data[0].datas;\n            for (var i = 0; i < datajson.length; i++) {\n                if (datajson[i].uxname && datajson[i].uxname != '') {\n                    datajson[i].text = datajson[i].name + '(' + datajson[i].uxname + ')'\n                } else {\n                    datajson[i].text = datajson[i].name\n                }\n            }\n            selectData = datajson\n            store.loadData(selectData);\n            comlist.bindStore(store)\n            comlist.setValue('');\n        },\n        error: function(msg) {\n            myMask.hide();\n            Ext.Msg.alert(\"提示\", \"获取复合组件信息失败\")\n        }\n    })\n    hwDas.ajax({\n        das: {\n            idedas: true\n        },\n        url: \"CDEServcie/resource/category\",\n        type: 'get',\n        timeout: 5000,\n        params: {\n            type: uxType\n        },\n        success: function(result) {\n            var datajson = result.data[0].datas;\n            cateData = datajson\n            console.log(cateData)\n        },\n        error: function(msg) {\n            myMask.hide();\n            Ext.Msg.alert(\"提示\", \"获取复合组件信息失败\")\n        }\n    })\n}\n\nfunction comlist_beforerender(sender) {\n\n}\n\nfunction comlist_selectChanged(sender, combo, record, index) {\n    var id = record.data.id;\n    if (id == '' || id == null) {\n        return\n    }\n    hwTree.closeAllItems()\n    var cataId, pidArr = [],\n        k = 0;\n    for (var i = 0; i < selectData.length; i++) {\n        if (selectData[i].id == id) {\n            cataId = selectData[i].category_id;\n            break\n        }\n    }\n    if (cataId == '0') {\n        hwTree.selectItem(id, true, false);\n        return\n    }\n    pidArr.push(cataId);\n    queryParen(pidArr, cataId)\n    diGuiopen(pidArr, k, id)\n}\n// 查找被检索界面的所有父级分类，并按顺序放到数组中\nfunction queryParen(arr, cId) {\n    var pid;\n    for (var i = 0; i < cateData.length; i++) {\n        if (cateData[i].id == cId) {\n            pid = cateData[i].parent_id;\n        }\n    }\n    if (pid != '0') {\n        arr.unshift(pid);\n        queryParen(arr, pid)\n    }\n}\n// 递归函数从祖父级开始逐层展开节点\nfunction diGuiopen(arr, m, seleId) {\n    if (m >= arr.length) {\n        return\n    }\n    if (m == arr.length - 1) {\n        // var isLoad = hwTree.itemObj[arr[m]].loadChild;\n        if (hwTree.itemObj[arr[m]] && hwTree.itemObj[arr[m]].loadChild == true) {\n            hwTree.openItem(arr[m])\n            hwTree.selectItem(seleId, true, false);\n        } else {\n            OpenNOde(arr[m], function() {\n                hwTree.selectItem(seleId, true, false);\n            })\n        }\n    } else {\n        // var isLoad = hwTree.itemObj[arr[m]].loadChild;\n        if (hwTree.itemObj[arr[m]] && hwTree.itemObj[arr[m]].loadChild == true) {\n            hwTree.openItem(arr[m])\n            m++;\n            diGuiopen(arr, m, seleId)\n        } else {\n            OpenNOde(arr[m], function() {\n                m++;\n                diGuiopen(arr, m, seleId)\n            })\n        }\n    }\n}\n\nfunction comlist_afterrender(sender) {\n    // 组建检索\n    store.loadData(selectData);\n    comlist.displayField = 'text';\n    comlist.valueField = 'id';\n}\n\nfunction OpenNOde(id, callback) {\n    var proId = id;\n    var mytree = hwTree;\n    mytree.newnode = false;\n    var hasChild = mytree.hasChildren(proId);\n    var selnode = mytree.itemObj[proId];\n    var selnodepath = selnode.path;\n    var projectId = \"\";\n    var childParentId = \"0\";\n    childParentId = proId\n    if (!selnode.loadChild && !selnode.isModel) {\n        //绑定项目下的资源目录\n        hwDas.ajax({\n            das: {\n                idedas: true\n            },\n            url: \"CDEServcie/resource/category\",\n            type: 'get',\n            timeout: 5000,\n            params: {\n                //project_id: projectId,\n                parent_id: childParentId,\n                type: uxType\n            },\n            success: function(result) {\n                var datajson = result.data[0].datas;\n                var treeDataJson = [];\n                for (var i = 0; i < datajson.length; i++) {\n                    mytree.insertNewChild(proId, datajson[i].id, datajson[i].name);\n                    mytree.setItemImage2(datajson[i].id, \"tree/folderClosed.gif\", \"tree/folderOpen.gif\", \"tree/folderClosed.gif\")\n                    mytree.insertNewChild(datajson[i].id, datajson[i].id + \"-0\", \"\");\n                    mytree.closeItem(datajson[i].id);\n                    var treenode = mytree.item(datajson[i].id);\n                    treenode.path = selnodepath + \"/\" + datajson[i].id;\n                    //treenode.projectId = projectId;\n                    if (treenode) {\n                        treenode.isFord = true;\n                        treenode.loadChild = false;\n                    }\n                    mytree.itemObj[datajson[i].id] = treenode;\n                }\n                if (callback) {\n                    callback();\n                }\n            },\n            error: function(msg) {\n                Ext.Msg.alert(\"提示\", \"获取模块信息失败\", function() {})\n            }\n        })\n        if (!selnode.loadChild) {\n            mytree.deleteItem(id + \"-0\", false);\n        }\n        selnode.loadChild = true;\n        //获取项目下的资源\n        hwDas.ajax({\n            das: {\n                idedas: true\n            },\n            url: \"CDEServcie/resource/zygl\",\n            type: 'get',\n            timeout: 5000,\n            params: {\n                category_id: childParentId,\n                //project_id: projectId,\n                type: uxType\n            },\n            success: function(result) {\n                var datajson = result.data[0].datas;\n                var treeDataJson = [];\n                for (var i = 0; i < datajson.length; i++) {\n                    mytree.insertNewChild(proId, datajson[i].id, datajson[i].name);\n                    mytree.setItemImage2(datajson[i].id, \"tree/model.png\", \"tree/model.png\", \"tree/model.png\")\n                    var treenode = mytree.item(datajson[i].id);\n                    treenode.path = selnodepath + \"/\" + datajson[i].id;\n                    //treenode.projectId = projectId;\n                    if (treenode) {\n                        treenode.isModel = true;\n                        treenode.createuser = datajson[i].row_created_by;\n                        treenode.createtime = datajson[i].row_created_date;\n                        treenode.changetime = datajson[i].row_changed_date;\n                        treenode.changeuser = datajson[i].row_changed_by;\n                        treenode.uxname = datajson[i].uxname;\n                        treenode.code = datajson[i].code;\n                        treenode.version = datajson[i].version;\n                        treenode.type = datajson[i].type;\n                        treenode.shared = datajson[i].shared;\n                        treenode.remark = datajson[i].remark;\n                    }\n                    mytree.itemObj[datajson[i].id] = treenode;\n                }\n                if (callback) {\n                    callback();\n                }\n            },\n            error: function(msg) {\n                Ext.Msg.alert(\"提示\", \"获取复合组件信息失败\")\n            }\n        })\n    } else {}\n}","vmdcss":"","vmdprops":"\"\"","type":"module","vmdresource":"{\"components\":[{\"cid\":\"vmdrescsss\",\"layoutConfig\":{},\"userConfig\":{}},{\"cid\":\"vmdresjss\",\"layoutConfig\":{},\"userConfig\":{},\"cn\":[{\"cid\":\"resjs\",\"id\":\"project.config.js\",\"layoutConfig\":{},\"userConfig\":{}}]},{\"cid\":\"vmdresimgs\",\"layoutConfig\":{},\"userConfig\":{}}]}"}