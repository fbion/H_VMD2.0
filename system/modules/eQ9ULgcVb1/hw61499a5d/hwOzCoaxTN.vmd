{"vmdversion":"vmd2.0.5.200306","vmdlayout":"{\"components\":[{\"cid\":\"viewport\",\"id\":\"MainViewport\",\"layoutConfig\":{},\"userConfig\":{\"layout\":\"border\",\"beforerender\":\"MainViewport_beforerender\"},\"cn\":[{\"cid\":\"container\",\"id\":\"div1\",\"layoutConfig\":{},\"userConfig\":{\"region\":\"north\",\"height\":31,\"layout\":\"absolute\"},\"cn\":[{\"cid\":\"checkbox\",\"id\":\"hwCheckbox\",\"layoutConfig\":{},\"userConfig\":{\"x\":20,\"y\":5,\"boxLabel\":\"全选\",\"style\":\"color: #5EA0FF;\",\"check\":\"hwCheckbox_check\"}},{\"cid\":\"vmdButton\",\"id\":\"button2\",\"layoutConfig\":{},\"userConfig\":{\"x\":80,\"y\":5,\"type\":\"text\",\"text\":\"只选分类\",\"click\":\"button2_click\",\"hidden\":true}}]},{\"cid\":\"container\",\"id\":\"div\",\"layoutConfig\":{},\"userConfig\":{\"region\":\"center\",\"layout\":\"fit\"},\"cn\":[{\"cid\":\"vmdTreeEx\",\"id\":\"tree\",\"layoutConfig\":{},\"userConfig\":{\"x\":20,\"y\":20,\"checkBox\":true,\"store\":\"treestore\",\"parentField\":\"pid\",\"valueField\":\"id\",\"textField\":\"name\",\"loadType\":\"全部加载\",\"rootValue\":\"0\",\"rootText\":\"复合组件\",\"cascading\":true,\"nodeMarkFiled\":\"type\",\"folderValue\":\"category\",\"leafValue\":\"module\",\"rootImg\":\"/system/modules/eQ9ULgcVb1/img/server5.png\",\"folderImg\":\"/system/modules/eQ9ULgcVb1/img/folderClosed.gif\",\"leafImg\":\"/system/modules/eQ9ULgcVb1/img/model.png\",\"afterBindData\":\"tree_afterBindData\"}}]},{\"cid\":\"container\",\"id\":\"div2\",\"layoutConfig\":{\"align\":\"middle\",\"pack\":\"center\"},\"userConfig\":{\"region\":\"south\",\"layout\":\"hbox\"},\"cn\":[{\"cid\":\"vmdButton\",\"id\":\"button\",\"layoutConfig\":{},\"userConfig\":{\"margins\":\"10\",\"text\":\"导出\",\"type\":\"info\",\"click\":\"button_click\"}},{\"cid\":\"vmdButton\",\"id\":\"button1\",\"layoutConfig\":{},\"userConfig\":{\"margins\":\"10\",\"text\":\"取消\",\"click\":\"button1_click\"}}]}]},{\"cid\":\"vmddataset\",\"id\":\"数据\",\"layoutConfig\":{},\"userConfig\":{},\"cn\":[{\"cid\":\"vmdJsonStore\",\"id\":\"treestore\",\"layoutConfig\":{},\"userConfig\":{\"cid\":\"vmdJsonStore\",\"id\":\"treestore\",\"storeConfig\":\"{\\\"id\\\":\\\"miVCLwqhO5\\\",\\\"callcode\\\":\\\"vmdCode\\\",\\\"url\\\":\\\"CDEServcie/resource/getuxtree\\\",\\\"host\\\":\\\"\\\",\\\"isHwRest\\\":true,\\\"name\\\":\\\"获取复合组件树\\\",\\\"getMethods\\\":[{\\\"id\\\":\\\"type\\\",\\\"name\\\":\\\"组件类型\\\",\\\"type\\\":\\\"String\\\",\\\"value1\\\":\\\"//返回值 \\\\r\\\\n return vmd.getUrlParam(\\\\\\\"uxType\\\\\\\")||\\\\\\\"4\\\\\\\"\\\",\\\"value2\\\":\\\"\\\",\\\"testValue\\\":\\\"4\\\"}],\\\"postMethods\\\":[],\\\"putMethods\\\":[],\\\"deleteMethods\\\":[],\\\"saveMethods\\\":[],\\\"fields\\\":[{\\\"name\\\":\\\"id\\\",\\\"cname\\\":\\\"\\\",\\\"type\\\":\\\"string\\\",\\\"primary\\\":false,\\\"nullable\\\":false,\\\"length\\\":\\\"\\\",\\\"precision\\\":\\\"\\\",\\\"unit\\\":\\\"\\\",\\\"rule\\\":{}},{\\\"name\\\":\\\"name\\\",\\\"cname\\\":\\\"\\\",\\\"type\\\":\\\"string\\\",\\\"primary\\\":false,\\\"nullable\\\":false,\\\"length\\\":\\\"\\\",\\\"precision\\\":\\\"\\\",\\\"unit\\\":\\\"\\\",\\\"rule\\\":{}},{\\\"name\\\":\\\"uxname\\\",\\\"cname\\\":\\\"\\\",\\\"type\\\":\\\"string\\\",\\\"primary\\\":false,\\\"nullable\\\":false,\\\"length\\\":\\\"\\\",\\\"precision\\\":\\\"\\\",\\\"unit\\\":\\\"\\\",\\\"rule\\\":{}},{\\\"name\\\":\\\"pid\\\",\\\"cname\\\":\\\"\\\",\\\"type\\\":\\\"string\\\",\\\"primary\\\":false,\\\"nullable\\\":false,\\\"length\\\":\\\"\\\",\\\"precision\\\":\\\"\\\",\\\"unit\\\":\\\"\\\",\\\"rule\\\":{}},{\\\"name\\\":\\\"path\\\",\\\"cname\\\":\\\"\\\",\\\"type\\\":\\\"string\\\",\\\"primary\\\":false,\\\"nullable\\\":false,\\\"length\\\":\\\"\\\",\\\"precision\\\":\\\"\\\",\\\"unit\\\":\\\"\\\",\\\"rule\\\":{}},{\\\"name\\\":\\\"ver\\\",\\\"cname\\\":\\\"\\\",\\\"type\\\":\\\"string\\\",\\\"primary\\\":false,\\\"nullable\\\":false,\\\"length\\\":\\\"\\\",\\\"precision\\\":\\\"\\\",\\\"unit\\\":\\\"\\\",\\\"rule\\\":{}}]}\",\"load\":\"treestore_load\"},\"cn\":[{\"cid\":\"datafield\",\"layoutConfig\":{},\"userConfig\":{\"cid\":\"datafield\",\"name\":\"id\"},\"name\":\"id\"},{\"cid\":\"datafield\",\"layoutConfig\":{},\"userConfig\":{\"cid\":\"datafield\",\"name\":\"name\"},\"name\":\"name\"},{\"cid\":\"datafield\",\"layoutConfig\":{},\"userConfig\":{\"cid\":\"datafield\",\"name\":\"uxname\"},\"name\":\"uxname\"},{\"cid\":\"datafield\",\"layoutConfig\":{},\"userConfig\":{\"cid\":\"datafield\",\"name\":\"pid\"},\"name\":\"pid\"},{\"cid\":\"datafield\",\"layoutConfig\":{},\"userConfig\":{\"cid\":\"datafield\",\"name\":\"path\"},\"name\":\"path\"},{\"cid\":\"datafield\",\"layoutConfig\":{},\"userConfig\":{\"cid\":\"datafield\",\"name\":\"ver\"},\"name\":\"ver\"}]}]},{\"cid\":\"vmdvariable\",\"id\":\"变量\",\"layoutConfig\":{},\"userConfig\":{}},{\"cid\":\"vmdsubviewport\",\"id\":\"SubView_Window\",\"layoutConfig\":{},\"userConfig\":{}}]}","vmdevents":"var hwproject_Id = \"0\"\nvar treeNodePath = vmd.getUrlParam('nodepath')\nvar uxType = vmd.getUrlParam(\"uxType\") || \"4\"\n\nfunction hwCheckbox_check(sender, checked) {\n    var rootnode = tree.getRootNode();\n    if (checked == true) {\n        tree.setNodeCheckById(0, true); //设置根节点 被勾中\n        for (var i = 0; i < rootnode.childNodes.length; i++) {\n            tree.setNodeCheckById(rootnode.childNodes[i].id, true);\n            if (rootnode.childNodes[i].childNodes.length > 0) {\n                findchildnode(rootnode.childNodes[i]);\n            }\n        }\n    } else {\n        tree.setNodeCheckById(0, false); //设置根节点 不被勾中\n        for (var i = 0; i < rootnode.childNodes.length; i++) {\n            tree.setNodeCheckById(rootnode.childNodes[i].id, false);\n            if (rootnode.childNodes[i].childNodes.length > 0) {\n                findchildnode(rootnode.childNodes[i]);\n            }\n        }\n    }\n}\n//遍历树形子节点\nfunction findchildnode(roonodes) { //树形全勾中\n    var childnodes = roonodes.childNodes;\n    for (var i = 0; i < childnodes.length; i++) { // 从节点中取出子节点依次遍历\n        tree.setNodeCheckById(childnodes[i].id, hwCheckbox.checked);\n        if (childnodes[i].childNodes.length > 0) {\n            findchildnode(childnodes[i]); // 如果存在子节点 递归\n        }\n    }\n}\n\nfunction button2_click(sender, e) {\n    hwCheckbox.setValue(false); // 全选不勾中\n    tree.setNodeCheckById(0, false); //设置根节点 不被勾中\n    var rootnode = tree.getRootNode();\n\n    category_findchildnode(rootnode);\n\n}\n//只选择分类按钮(遍历树形子节点)\nfunction category_findchildnode(roonodes) { //树形全勾中\n    var childnodes = roonodes.childNodes;\n    for (var i = 0; i < childnodes.length; i++) { // 从节点中取出子节点依次遍历\n        if (childnodes[i].childNodes.length > 0) {\n            tree.setNodeCheckById(childnodes[i].id, true);\n            category_findchildnode(childnodes[i]); // 如果存在子节点 递归\n        } else {\n            if (childnodes[i].nodeDataJson.type == 'category') {\n                tree.setNodeCheckById(childnodes[i].id, true);\n            } else\n                tree.setNodeCheckById(childnodes[i].id, false);\n        }\n    }\n}\n\nfunction tree_afterBindData(sender) {\n    //树形全选\n    var rootnode = tree.getRootNode();\n    if (hwCheckbox.checked == true) {\n        tree.setNodeCheckById(0, true); //设置根节点 被勾中\n        for (var i = 0; i < rootnode.childNodes.length; i++) {\n            tree.setNodeCheckById(rootnode.childNodes[i].id, true);\n            if (rootnode.childNodes[i].childNodes.length > 0) {\n                findchildnode(rootnode.childNodes[i]);\n            }\n        }\n    }\n    rootnode.expand();\n    if (treeNodePath) {\n        treeNodePath = treeNodePath.replace(hwproject_Id, 0);\n        delNodeIds = [];\n        delnode(rootnode)\n        for (var i = 0; i < delNodeIds.length; i++) {\n            tree.removeNodeById(delNodeIds[i])\n        }\n    } \n}\n//用户分类导出时，先加载所有的节点，treeNodePath\nfunction delnode(node) {\n    for (var i = 0; i < node.childNodes.length; i++) {\n        var cnode = node.childNodes[i]\n\n        if (cnode.getPath().indexOf(treeNodePath) >= 0 || treeNodePath.indexOf(cnode.getPath()) >= 0) {\n            if (cnode.childNodes.length > 0) {\n                delnode(cnode)\n            }\n        } else {\n            delNodeIds.push(cnode.id)\n        }\n    }\n}\nvar myMask;\n\nfunction button_click(sender, e) {\n    myMask = new Ext.LoadMask(document.body, {\n        msg: \"正在导出,请稍后...\",\n        msgCls: 'z-index:10000;'\n    });\n    myMask.show();\n    var ExpUxsInfo = getSelNodeIDs();\n    vmd.ajax({\n        url: \"/expandimp/api/uxexp\",\n        type: 'post',\n        timeout: 120000,\n        //dataType:\"text\",\n        //contentType: 'application/json;charset=UTF-8',\n        data: ExpUxsInfo, //jsonp: \"callbackparam\", \n        success: function(result) {\n            myMask.hide();\n            if (result.type == \"success\") {\n                var name= vmd.getUrlParam('nodename');\n                var s = new vmd.proxy.Log();\n                        s.save(\"导出复合组件\", \"导出复合组件\", Ext.util.Cookies.get('userName') + \"在\" + Ext.Date.dateFormat(new Date(), 'Y-m-d H:i:s') + \"导出了\" + ExpUxsInfo.UxsId.join('、') + \"复合组件\", \"复合组件\", function() {\n                            // alert(\"保存成功了！\")\n                        }, function() {\n                            console.log(\"日志报存失败了！\");\n                        })\n                window.open(\"/\" + result.zipPath, '_self')\n            } else\n                Ext.Msg.alert(\"提示\", result.msg)\n        },\n        error: function(msg) {\n            myMask.hide();\n            console.log(msg)\n        }\n    })\n}\n\nvar cnodeIds = []\nvar mnodeIds = []\nvar mnodeInfo = []\n\nfunction getNodeId(node) {\n    for (var i = 0; i < node.childNodes.length; i++) {\n        var cnode = node.childNodes[i]\n        if (cnode.attributes.checked) {\n            if (cnode.childNodes.length > 0) {\n                getNodeId(cnode)\n                cnodeIds.push(cnode.id)\n            } else {\n                if (cnode.nodeDataJson.type == 'category') {\n                    cnodeIds.push(cnode.id)\n                } else {\n                    mnodeInfo.push({\n                        id: cnode.id,\n                        name: cnode.text\n                    })\n                    mnodeIds.push(cnode.id)\n                }\n            }\n        }\n    }\n}\n\nfunction getSelNodeIDs() {\n    cnodeIds = []\n    mnodeIds = []\n    mnodeInfo = []\n    var rootnode = tree.getRootNode();\n    getNodeId(rootnode)\n    var ExpUxsInfo = {};\n    ExpUxsInfo.UxsId = mnodeIds;\n    ExpUxsInfo.CategorysId = cnodeIds;\n    ExpUxsInfo.UxsInfo = mnodeInfo;\n    return ExpUxsInfo\n}\n\nfunction button1_click(sender, e) {\n    if (parent && parent.expUxsWin)\n        parent.expUxsWin.close()\n}\n\nfunction treestore_load(sender, records, options) {}\n\nfunction MainViewport_beforerender(sender) {\n\n}","vmdcss":".x-form-cb-label{\n    color: #5EA0FF;\n}","vmdprops":"\"\"","type":"module","vmdcmpdeps":[],"vmdresource":"{\"components\":[{\"cid\":\"vmdrescsss\",\"layoutConfig\":{},\"userConfig\":{}},{\"cid\":\"vmdresjss\",\"layoutConfig\":{},\"userConfig\":{},\"cn\":[{\"cid\":\"resjs\",\"id\":\"project.config.js\",\"layoutConfig\":{},\"userConfig\":{}}]},{\"cid\":\"vmdresimgs\",\"layoutConfig\":{},\"userConfig\":{}}]}"}