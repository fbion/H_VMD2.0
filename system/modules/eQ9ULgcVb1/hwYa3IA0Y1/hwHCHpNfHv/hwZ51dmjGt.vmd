{"vmdversion":"2.0.4.190514","vmdlayout":"{\"components\":[{\"cid\":\"viewport\",\"id\":\"MyViewport\",\"layoutConfig\":{},\"userConfig\":{\"layout\":\"border\",\"afterrender\":\"MyViewport_afterrender\",\"beforerender\":\"MyViewport_beforerender\"},\"cn\":[{\"cid\":\"panel\",\"id\":\"MyPanel9\",\"layoutConfig\":{\"align\":\"middle\",\"pack\":\"center\"},\"userConfig\":{\"x\":0,\"y\":355,\"height\":50,\"header\":false,\"layout\":\"hbox\",\"padding\":\"5\",\"border\":false,\"bodyStyle\":\"border-top: 1px solid lightblue\",\"region\":\"south\",\"id\":\"MyPanel9\"},\"cn\":[{\"cid\":\"vmdButton\",\"id\":\"button\",\"layoutConfig\":{},\"userConfig\":{\"x\":50,\"y\":10,\"text\":\"确定\",\"click\":\"button_click\",\"type\":\"info\"}},{\"cid\":\"vmdButton\",\"id\":\"button1\",\"layoutConfig\":{},\"userConfig\":{\"x\":150,\"y\":10,\"text\":\"取消\",\"click\":\"button1_click\",\"type\":\"(none)\",\"margins\":\"0 0 0 30\"}}]},{\"cid\":\"tabpanel\",\"id\":\"MyTabs\",\"layoutConfig\":{},\"userConfig\":{\"region\":\"center\",\"activeTab\":0,\"tabchange\":\"MyTabs_tabchange\"},\"cn\":[{\"cid\":\"panel\",\"id\":\"panel\",\"layoutConfig\":{},\"userConfig\":{\"title\":\"服务选择\",\"layout\":\"fit\"},\"cn\":[{\"cid\":\"panel\",\"id\":\"MyPanel\",\"layoutConfig\":{},\"userConfig\":{\"region\":\"center\",\"layout\":\"border\",\"header\":false,\"border\":false,\"id\":\"MyPanel\"},\"cn\":[{\"cid\":\"vmdTree\",\"id\":\"hwTree\",\"layoutConfig\":{},\"userConfig\":{\"afterrender\":\"hwTree_afterrender\",\"nodeClick\":\"hwTree_nodeClick\",\"onOpenEnd\":\"hwTree_onOpenEnd\",\"Check\":\"hwTree_Check\",\"width\":822,\"height\":513,\"region\":\"center\"}},{\"cid\":\"container\",\"id\":\"div3\",\"layoutConfig\":{\"align\":\"middle\"},\"userConfig\":{\"region\":\"south\",\"border\":false,\"layout\":\"hbox\"},\"cn\":[{\"cid\":\"label\",\"id\":\"label\",\"layoutConfig\":{},\"userConfig\":{\"text\":\"规则名称：\",\"margins\":\"0 0 0 10\",\"region\":\"west\"}},{\"cid\":\"textfield\",\"id\":\"submit_ruleName\",\"layoutConfig\":{},\"userConfig\":{\"cls\":\"b\",\"id\":\"submit_ruleName\",\"region\":\"east\"}},{\"cid\":\"label\",\"id\":\"label2\",\"layoutConfig\":{},\"userConfig\":{\"text\":\"此处可修改显示的规则命名\",\"margins\":\"0 0 0 20\",\"style\":\"color:#ccc;\"}}]}]}]},{\"cid\":\"panel\",\"id\":\"panel1\",\"layoutConfig\":{},\"userConfig\":{\"title\":\"最近使用\",\"layout\":\"fit\"},\"cn\":[{\"cid\":\"panel\",\"id\":\"panel2\",\"layoutConfig\":{},\"userConfig\":{\"region\":\"center\",\"layout\":\"border\",\"header\":false,\"border\":false},\"cn\":[{\"cid\":\"container\",\"id\":\"div\",\"layoutConfig\":{\"align\":\"middle\"},\"userConfig\":{\"region\":\"south\",\"border\":false,\"layout\":\"hbox\"},\"cn\":[{\"cid\":\"label\",\"id\":\"label1\",\"layoutConfig\":{},\"userConfig\":{\"text\":\"规则名称：\",\"margins\":\"0 0 0 10\",\"region\":\"west\"}},{\"cid\":\"textfield\",\"id\":\"submit_ruleName2\",\"layoutConfig\":{},\"userConfig\":{\"cls\":\"b\",\"region\":\"east\",\"id\":\"submit_ruleName2\"}}]},{\"cid\":\"vmdDataView\",\"id\":\"hwDataView\",\"layoutConfig\":{},\"userConfig\":{\"region\":\"center\",\"tpl\":\"<ul>\\n   \\n</ul>\"}}]}]}]}]},{\"cid\":\"vmddataset\",\"id\":\"数据集\",\"layoutConfig\":{},\"userConfig\":{}},{\"cid\":\"vmdvariable\",\"id\":\"变量\",\"layoutConfig\":{},\"userConfig\":{}},{\"cid\":\"vmdsubviewport\",\"id\":\"SubView_Window\",\"layoutConfig\":{},\"userConfig\":{}}]}","vmdevents":"var page = this;\npage.dataList = [];\npage.saveInfo = [];\n//初始化处理ace的api\nif (parent.init_def_platformControlData) {\n    parent.init_def_platformControlData();\n    def_platformControl = parent.def_platformControl;\n}\nif (parent.allPublicMethods)\n    window.allPublicMethods = parent.allPublicMethods;\nelse\n    window.allPublicMethods = {};\nif (parent.publicMethodsType)\n    window.publicMethodsType = parent.publicMethodsType;\nelse\n    window.publicMethodsType = {};\nif (parent.init_def_platformFun) {\n    parent.init_def_platformFun({\n        vmd: allPublicMethods\n    });\n    parent.init_def_platformVmd();\n    def_platformWidget = parent.def_platformWidget;\n}\n//ext框架类自动识别\ndef_platformExtjs = parent.def_platformExtjs;\n//初始化获取工区等信息\nvar workspaceid;\nvar projectid;\nvar workspaceworkflowIp;\nvar workspacedataServiceIp;\nif (parent.vmd && parent.vmd.workspace) {\n    workspaceid = parent.vmd.workspace.workspaceid || \"\";\n    workspaceworkflowIp = parent.vmd.workspace.workflowIp || \"\";\n    workspacedataServiceIp = parent.vmd.workspace.dataServiceIp || \"\";\n    projectid = parent.vmd.workspace.projectid || \"\";\n}\nif (parent.init_def_platformControlData) {\n    parent.init_def_platformControlData();\n    def_platformControl = parent.def_platformControl;\n}\nmyobj = {};\nvar saveobj = {}\nvar treeloderover = false;\nvar myMask = new Ext.LoadMask(Ext.getBody(), {\n    msg: \"数据加载中,请稍后...\",\n    msgCls: 'z-index:10000;'\n});\n\nfunction hwTree_afterrender(sender) {\n    //进度提示\n    myMask = new Ext.LoadMask(Ext.getCmp(\"hwTree\").el, {\n        msg: \"数据加载中,请稍后...\",\n        msgCls: 'z-index:10000;'\n    });\n    myMask.show();\n    /*\n        myobj = Ext.decode(parent.edValue.storeConfig)\n        if(myobj.url)\n            list = myobj.url.split(\"/\"); //字符分割 \n        if(myobj.callcode)\n            MyField.setValue(myobj.callcode)\n    */\n    var mytree = hwTree;\n    mytree.deleteChildItems(0);\n    mytree.loadJSONObject({\n        id: 0,\n        text: \"我的服务\",\n        item: []\n    });\n    mytree.enableRadioButtons(true)\n    mytree.enableSingleRadioMode(true)\n    mytree.itemObj = {};\n    mytree.newnode = false;\n    hwDas.appinfo.callCode = \"vmdCode\";\n    var firstNode = \"\";\n    hwDas.get(\"DataServiceWorkSpace/projectInfo/ProjcetServiceCategory\", {}, {\n        projectid: projectid || \"\",\n        type: 1\n    }, function(selresult) {\n        var idarray = [];\n        if (selresult.data && selresult.data.length > 0 && selresult.data[0].datas && selresult.data[0].datas.length > 0) {\n            var datajson = selresult.data[0].datas;\n            var treeDataJson = [];\n            var toopenid = \"\"\n            for (var i = 0; i < datajson.length; i++) {\n                idarray.push(datajson[i].service_category_id)\n            }\n        }\n        var urlparam;\n        if (workspacedataServiceIp) {\n            urlparam = {\n                host: workspacedataServiceIp,\n                url: \"DataService/Service/Project\"\n            }\n        } else\n            urlparam = \"DataService/Service/Project\"\n        hwDas.get(urlparam, {\n                Ecylogin: Ext.util.Cookies.get('EcyLogin') || Ext.util.Cookies.get('ecyLogin')\n            }, {\n                develop: \"true\"\n            }, function(result) {\n                var datajson = result.data[0].datas;\n                var treeDataJson = [];\n                var toopenid = \"\"\n                for (var i = 0; i < datajson.length; i++) {\n                    if (list.indexOf(datajson[i].code) >= 0) {\n                        toopenid = datajson[i].id\n                    }\n                    if (idarray.indexOf(datajson[i].id) >= 0 || !projectid || !workspacedataServiceIp) {\n                        mytree.insertNewChild(0, datajson[i].id, datajson[i].name);\n                        mytree.setItemImage2(datajson[i].id, \"tree/projectclose.png\", \"tree/projectopen.png\", \"tree/projectclose.png\");\n                        mytree.showItemCheckbox(datajson[i].id, false)\n                        mytree.insertNewChild(datajson[i].id, datajson[i].id + \"-0\", \"\");\n                        mytree.closeItem(datajson[i].id);\n                        var treenode = mytree.item(datajson[i].id);\n                        treenode.path = datajson[i].code;\n                        if (treenode) {\n                            treenode.isProject = true;\n                            treenode.loadChild = false;\n                        }\n                        mytree.itemObj[datajson[i].id] = treenode;\n                        if (firstNode == \"\")\n                            firstNode = datajson[i].id;\n                    }\n                }\n                treeloderover = true;\n                //默认选中首项 \n                if (firstNode != \"\")\n                    mytree.selectItem(firstNode);\n                if (toopenid != \"\")\n                    hwTree.openItem(toopenid);\n                myMask.hide();\n            },\n            function(msg) {\n                myMask.hide();\n                Ext.Msg.alert(\"提示\", \"获取模块信息失败\", function() {})\n            })\n    }, function(msg) {\n        myMask.hide();\n        Ext.Msg.alert(\"提示\", \"获取模块信息失败\", function() {})\n    })\n    // hwDas.ajax({\n    //     das: {\n    //         idedas: true\n    //     },\n    //     url: \"DataService/Service/Project\",\n    //     type: 'get',\n    //     timeout: 5000,\n    //     headers: {\n    //         Ecylogin: Ext.util.Cookies.get('EcyLogin') || Ext.util.Cookies.get('ecyLogin')\n    //     },\n    //     params: {\n    //         develop: \"true\"\n    //     },\n    //     success: function(result) {\n    //         var datajson = result.data[0].datas;\n    //         var treeDataJson = [];\n    //         var toopenid = \"\"\n    //         for(var i = 0; i < datajson.length; i++) {\n    //             if(list.indexOf(datajson[i].code) >= 0) {\n    //                 toopenid = datajson[i].id\n    //             }\n    //             mytree.insertNewChild(0, datajson[i].id, datajson[i].name);\n    //             mytree.setItemImage2(datajson[i].id, \"tree/projectclose.png\", \"tree/projectopen.png\", \"tree/projectclose.png\");\n    //             mytree.showItemCheckbox(datajson[i].id, false)\n    //             mytree.insertNewChild(datajson[i].id, datajson[i].id + \"-0\", \"\");\n    //             mytree.closeItem(datajson[i].id);\n    //             var treenode = mytree.item(datajson[i].id);\n    //             treenode.path = datajson[i].code;\n    //             if(treenode) {\n    //                 treenode.isProject = true;\n    //                 treenode.loadChild = false;\n    //             }\n    //             mytree.itemObj[datajson[i].id] = treenode;\n    //             if(firstNode == \"\")\n    //                 firstNode = datajson[i].id;\n    //         }\n    //         treeloderover = true;\n    //         //默认选中首项 \n    //         if(firstNode != \"\")\n    //             mytree.selectItem(firstNode);\n    //         if(toopenid != \"\")\n    //             hwTree.openItem(toopenid);\n    //         myMask.hide();\n    //     },\n    //     error: function(msg) {\n    //         myMask.hide();\n    //         Ext.Msg.alert(\"提示\", \"获取模块信息失败\", function() {})\n    //     }\n    // })\n}\nvar selNodeId = \"\";\n\nfunction hwTree_nodeClick(sender, id) {\n    var proId = id;\n    var mytree = hwTree;\n    var selnode = mytree.itemObj[proId];\n    submit_ruleName.setValue(selnode.text)\n    if (selNodeId != id) {\n        if (selnode.isModel) {\n            if (!mytree.isItemChecked(id)) {\n                if (mytree.getAllChecked() != \"\")\n                    mytree.setSubChecked(mytree.getAllChecked(), false)\n                mytree.setSubChecked(id, true)\n            }\n            var urlparam;\n            if (workspacedataServiceIp) {\n                urlparam = {\n                    host: workspacedataServiceIp,\n                    url: \"DataService/Service/Method\"\n                }\n            } else {\n                urlparam = \"DataService/Service/Method\"\n            }\n            hwDas.get(urlparam, {}, {\n                    resourceid: proId\n                },\n                function(result) {\n                    var datajson = result.data[0].datas;\n                    var treeDataJson = [];\n                    for (var i = 0; i < datajson.length; i++) {\n                        if (datajson[i].name == \"save\") {\n                            debugger\n                            var id = datajson[i].id;\n                            if (workspacedataServiceIp) {\n                                urlparam = {\n                                    host: workspacedataServiceIp,\n                                    url: \"DataService/Service/Parameter\"\n                                }\n                            } else\n                                urlparam = \"DataService/Service/Parameter\";\n                            hwDas.get(urlparam, {}, {\n                                methodid: id\n                            }, function(result) {\n                                debugger\n                                page.dataList = [];\n                                for (var i = 0; i < result.data[0].datas.length; i++) {\n                                    page.dataList.push({\n                                        name: result.data[0].datas[i].code\n                                    })\n                                }\n                            })\n                        }\n                    }\n                    var bindover = false;\n                    while (!bindover) {\n                        bindover = true;\n                    }\n                },\n                function(msg) {\n                    Ext.Msg.alert(\"提示\", \"获取服务方法信息失败\", function() {})\n                })\n        } else {}\n    }\n    bselNodeId = id;\n    var thePath = selnode.path;\n    var pathArray = thePath.split('/');\n    var text = \"\";\n    var temp = \"\";\n    for (var i = 0; i < pathArray.length; i++) {\n        if (i == 0) {\n            temp = pathArray[i];\n            for (var n in hwTree.itemObj) {\n                if (temp == hwTree.itemObj[n].path) {\n                    text += hwTree.itemObj[n].text;\n                }\n            }\n        } else {\n            temp = temp + '/' + pathArray[i];\n            for (var n in hwTree.itemObj) {\n                if (temp == hwTree.itemObj[n].path) {\n                    text += \"-\" + hwTree.itemObj[n].text;\n                }\n            }\n        }\n    }\n    page.chooseId = bselNodeId;\n}\n\nfunction fillMethods() {}\n\nfunction GetSaveObj(fun) {\n    var mytree = hwTree;\n    var selId = mytree.getSelectedItemId();\n    var selnode = mytree.itemObj[selId];\n    saveobj = {};\n    saveobj.id = selId;\n    saveobj.callcode = \"vmdCode\";\n    saveobj.url = selnode.path;\n    saveobj.host = \"\";\n    saveobj.isHwRest = true;\n    saveobj.name = selnode.text;\n    getFields(function(fields) {\n        saveobj.fields = fields\n        fun(saveobj)\n    });\n}\n\nfunction getFields(fun) {\n    var mytree = hwTree;\n    var selId = mytree.getSelectedItemId();\n    var selnode = mytree.itemObj[selId];\n    var selnodepath = selnode.path;\n    hwDas.appinfo.callCode = \"vmdCode\"\n    var urlparam;\n    if (workspacedataServiceIp) {\n        urlparam = {\n            host: workspacedataServiceIp,\n            url: selnodepath\n        }\n    } else {\n        urlparam = selnodepath\n    }\n    page.saveInfo.push(urlparam)\n    hwDas.get(urlparam, {}, {}, function(result) {\n        if (fun) {\n            resultDataFields = result.data[0].fields\n            var dataFields = [];\n            for (var p in resultDataFields) {\n                // fields\n                if (typeof(resultDataFields[p]) == \"function\") {} else {\n                    var fields = {\n                        name: p,\n                        type: resultDataFields[p].toLowerCase()\n                    }\n                    dataFields.push(fields);\n                }\n            }\n            fun(dataFields)\n        }\n    }, function(msg) {\n        Ext.Msg.alert(\"提示\", \"获取字段信息失败!请检查数据服务是否正确,并查看参数处理是否准确！\", function() {})\n    })\n}\n\nfunction button_click(sender) {\n    debugger\n    if (MyTabs.getActiveTab().title == '服务选择') {\n        if (submit_ruleName.getValue() == \"\") {\n            vmd.alert('警告', '规则名称不许为空')\n            return;\n        }\n        var mytree = hwTree;\n        var selId = mytree.getSelectedItemId();\n        var selnode = mytree.itemObj[selId];\n        var obj = {}\n        obj.id = selId;\n        obj.callcode = \"vmdCode\";\n        obj.url = selnode.path;\n        obj.host = \"\";\n        obj.isHwRest = true;\n        obj.name = selnode.text;\n        // GetSaveObj(function(obj) {\n        //     window.vmdReturnValue = Ext.encode(obj);\n        // var data = [];\n        // for(var i = 0; i < obj.fields.length; i++) {\n        //     data.push({\n        //         cid: 'datafield',\n        //         name: obj.fields[i].name\n        //     })\n        // }\n        if (page.dataList.length > 0) {\n            parent.getSubmitData(page.dataList, submit_ruleName.getValue(), page.chooseId, obj, page.saveInfo);\n            parent.edClose(true);\n        } else {\n            vmd.alert('错误','查询结果不包含保存方法变量，请核对后重新选择')\n        }\n        // })\n    }\n    // else {\n    //     if (submit_ruleName2.getValue() == \"\") {\n    //         vmd.alert('警告', '规则名称不许为空')\n    //         return;\n    //     }\n    //     hwDas.appinfo.callCode = \"vmdCode\"\n    //     var urlparam;\n    //     if (workspacedataServiceIp) {\n    //         urlparam = {\n    //             host: workspacedataServiceIp,\n    //             url: page.chooseRecent\n    //         }\n    //     } else\n    //         urlparam = page.chooseRecent\n    //     hwDas.get(urlparam, {}, {}, function(result) {\n    //         resultDataFields = result.data[0].fields\n    //         var dataFields = [];\n    //         for (var p in resultDataFields) {\n    //             // fields\n    //             if (typeof(resultDataFields[p]) == \"function\") {} else {\n    //                 var fields = {\n    //                     name: p,\n    //                     type: resultDataFields[p].toLowerCase()\n    //                 }\n    //                 dataFields.push(fields);\n    //             }\n    //         }\n    //         parent.getSubmitData(dataFields, submit_ruleName.getValue(), page.chooseId);\n    //         parent.edClose(true);\n    //     }, function(msg) {\n    //         Ext.Msg.alert(\"提示\", \"获取字段信息失败!请检查数据服务是否正确,并查看参数处理是否准确！\", function() {})\n    //     })\n    // }\n}\n\nfunction button1_click(sender) {\n    window.vmdReturnValue = \"\"\n    parent.edClose();\n}\nvar list = [];\n\nfunction MyViewport_afterrender(sender) {\n    // myMask.hide();\n}\n\nfunction hwTree_onOpenEnd(sender, id, state) {\n    var proId = id;\n    var mytree = hwTree;\n    mytree.newnode = false;\n    var selnode = mytree.itemObj[proId];\n    if (!selnode.loadChild) {\n        if (selnode.isProject) {\n            fillFord(proId, {\n                projectid: proId,\n                parentid: \"0\"\n            });\n        } else {\n            fillFord(proId, {\n                parentid: proId\n            });\n            fillMode(proId, {\n                categoryid: proId\n            });\n        }\n        if (!selnode.loadChild) {\n            mytree.deleteItem(id + \"-0\", false);\n        }\n    }\n    selnode.loadChild = true;\n}\n\nfunction fillFord(id, params) {\n    myMask.show();\n    var proId = id;\n    var mytree = hwTree;\n    var selnode = mytree.itemObj[proId];\n    var selnodepath = selnode.path;\n    var urlparam;\n    if (workspacedataServiceIp) {\n        urlparam = {\n            host: workspacedataServiceIp,\n            url: \"DataService/Service/Category\"\n        }\n    } else\n        urlparam = \"DataService/Service/Category\"\n    hwDas.get(urlparam, {}, params, function(result) {\n        var mytree = hwTree;\n        var datajson = result.data[0].datas;\n        var treeDataJson = [];\n        var toopenid = \"\";\n        for (var i = 0; i < datajson.length; i++) {\n            if (list.indexOf(datajson[i].code) >= 0 && list.indexOf(datajson[i].code) < list.length - 1) {\n                toopenid = datajson[i].id\n            }\n            mytree.insertNewChild(proId, datajson[i].id, datajson[i].name);\n            mytree.setItemImage2(datajson[i].id, \"tree/folderClosed.gif\", \"tree/folderOpen.gif\", \"tree/folderClosed.gif\")\n            mytree.showItemCheckbox(datajson[i].id, false)\n            mytree.insertNewChild(datajson[i].id, datajson[i].id + \"-0\", \"\");\n            mytree.closeItem(datajson[i].id);\n            var treenode = mytree.item(datajson[i].id);\n            treenode.path = selnodepath + \"/\" + datajson[i].code;\n            if (treenode) {\n                treenode.isFord = true;\n                treenode.loadChild = false;\n            }\n            mytree.itemObj[datajson[i].id] = treenode;\n        }\n        if (toopenid != \"\") {\n            mytree.openItem(toopenid)\n        }\n        myMask.hide();\n    }, function(msg) {\n        myMask.hide();\n        Ext.Msg.alert(\"提示\", \"获取模块信息失败\", function() {})\n    })\n}\n\nfunction fillMode(id, params) {\n    myMask.show();\n    var proId = id;\n    var mytree = hwTree;\n    var selnode = mytree.itemObj[proId];\n    var selnodepath = selnode.path;\n    var urlparam;\n    if (workspacedataServiceIp) {\n        urlparam = {\n            host: workspacedataServiceIp,\n            url: \"DataService/Service/Resource\"\n        }\n    } else\n        urlparam = \"DataService/Service/Resource\"\n    hwDas.get(urlparam, {}, params, function(result) {\n        var datajson = result.data[0].datas;\n        var treeDataJson = [];\n        var toselectid = \"\";\n        for (var i = 0; i < datajson.length; i++) {\n            if (list.indexOf(datajson[i].code) >= 0 && myobj) {\n                if (myobj.id && datajson[i].id == myobj.id)\n                    toselectid = datajson[i].id\n                if (myobj.id == \"\")\n                    toselectid = datajson[i].id\n            }\n            var mytree = hwTree;\n            mytree.insertNewChild(proId, datajson[i].id, datajson[i].name);\n            mytree.setItemImage2(datajson[i].id, \"tree/model.png\", \"tree/model.png\", \"tree/model.png\")\n            var treenode = mytree.item(datajson[i].id);\n            treenode.path = selnodepath + \"/\" + datajson[i].code;\n            if (treenode) {\n                treenode.isModel = true;\n            }\n            mytree.itemObj[datajson[i].id] = treenode;\n        }\n        if (toselectid != \"\") {\n            mytree.selectItem(toselectid, true)\n        }\n        //数据操作   \n        myMask.hide();\n    }, function(msg) {\n        myMask.hide();\n        Ext.Msg.alert(\"提示\", \"获取模块信息失败\")\n    })\n}\n\nfunction MyViewport_beforerender(sender) {\n    // myMask.show();\n    // MyTabs.hideTabHeader = true;\n    if (!parent.edValue || !parent.edValue.storeConfig)\n        return\n    myobj = Ext.decode(parent.edValue.storeConfig)\n    if (myobj.url)\n        list = myobj.url.split(\"/\"); //字符分割 \n}\n\nfunction hwTree_Check(sender, id, state) {\n    var mytree = hwTree;\n    mytree.selectItem(id, true);\n    mytree.setSubChecked(id, true)\n}\n\nfunction MyTabs_tabchange(sender, tab) {\n    if (tab.title == '最近使用') {\n        // hwDataView.el.dom.childNodes\n        var path = Ext.decode(LocalData.get('path'))\n        // var data = Ext.decode(LocalData.get('data'))\n        // ThisIsStartHead\n        var ul = hwDataView.el.dom.childNodes[0];\n        for (var i = 0; i < path.length; i++) {\n            var li = document.createElement('li');\n            ul.appendChild(li);\n            li.innerText = path[i];\n            li.style.fontSize = '14px';\n            li.style.padding = '4px';\n            li.style.cursor = 'pointer';\n            li.style.display = 'list-item';\n            li.style.textAlign = '-webkit-match-parent';\n            li.setAttribute('id', i)\n            li.onclick = function() {\n                var temp = this.parentElement.childNodes;\n                for (var n = 1; n < temp.length; n++) {\n                    temp[n].style.backgroundColor = 'white'\n                    temp[n].style.color = \"#000\"\n                }\n                this.style.backgroundColor = '#50BFFF'\n                this.style.color = 'white'\n                submit_ruleName2.setValue(path[this.id].split(\"-\")[path[this.id].split(\"-\").length - 1])\n                page.chooseOne = this.id;\n            }\n            li.onmouseover = function() {\n                this.style.backgroundColor = '#50BFFF'\n            }\n            li.onmouseleave = function() {\n                if (this.id != page.chooseOne) {\n                    this.style.backgroundColor = \"white\"\n                    this.style.color = \"#000\"\n                }\n            }\n        }\n    }\n}","vmdcss":".b{\n    border: 1px solid #ccc\n}","vmdprops":"\"\"","type":"module","vmdresource":"{\"components\":[{\"cid\":\"vmdrescsss\",\"layoutConfig\":{},\"userConfig\":{}},{\"cid\":\"vmdresjss\",\"layoutConfig\":{},\"userConfig\":{}},{\"cid\":\"vmdresimgs\",\"layoutConfig\":{},\"userConfig\":{}}]}"}