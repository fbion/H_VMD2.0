{"vmdversion":"2.0.3.09152","vmdlayout":"{\"components\":[{\"cid\":\"viewport\",\"id\":\"MainViewport\",\"layoutConfig\":{},\"userConfig\":{\"layout\":\"absolute\",\"beforerender\":\"MainViewport_beforerender\",\"afterrender\":\"MainViewport_afterrender\"},\"cn\":[{\"cid\":\"vmdButton\",\"id\":\"button\",\"layoutConfig\":{},\"userConfig\":{\"x\":70,\"y\":90,\"text\":\"连接\",\"click\":\"button_click\"}},{\"cid\":\"vmdButton\",\"id\":\"button1\",\"layoutConfig\":{},\"userConfig\":{\"x\":70,\"y\":190,\"text\":\"订阅\",\"click\":\"button1_click\"}},{\"cid\":\"vmdButton\",\"id\":\"button2\",\"layoutConfig\":{},\"userConfig\":{\"x\":70,\"y\":240,\"text\":\"推送\",\"click\":\"button2_click\"}},{\"cid\":\"vmdButton\",\"id\":\"button3\",\"layoutConfig\":{},\"userConfig\":{\"x\":70,\"y\":140,\"text\":\"断开连接\",\"click\":\"button3_click\"}}]},{\"cid\":\"vmddataset\",\"id\":\"数据集\",\"layoutConfig\":{},\"userConfig\":{}},{\"cid\":\"vmdvariable\",\"id\":\"变量\",\"layoutConfig\":{},\"userConfig\":{}},{\"cid\":\"vmdsubviewport\",\"id\":\"SubView_Window\",\"layoutConfig\":{},\"userConfig\":{}}]}","vmdevents":"var isConnect = false;\nvar tt;\nvar client = 'mafei'; // 终端id\nvar destination = \"lsj\"; // 主题id\nvar isConnecting = false; \nvar hwMqttClient;\nvar num = 0;\n// 客户端初始化\nhwMqttClient = hwMSC.MQTTInit(client);\n\nfunction button_click(sender, e) {\n\n    hwMSC.MQTTConnect(hwMqttClient, 30, 10, onConnect, onFailure, onMessageArrived, onConnectionLost);\n\n}\n\n\nfunction button3_click(sender, e) {\n    \n    hwMSC.MQTTDisconnect(hwMqttClient)\n}\n\n\nfunction button1_click(sender, e) {\n\n    hwMSC.MQTTSubscribe(hwMqttClient, destination, 2, onSubSuccess, onSubError)\n\n}\n\nfunction button2_click(sender, e) {\n    num++;\n    hwMSC.MQTTSendMsg(hwMqttClient, destination, \"web send\" + num)\n}\n\n\n\n\n\n\nvar onSubSuccess = function(result) {\n    console.log(result);\n}\nvar onSubError = function(result) {\n    console.log('===sub error==')\n}\n// the client is notified when it is connected to the server.\nvar onConnect = function(frame) {\n    console.log(\"connected to MQTT\");\n    isConnect = true;\n};\n\nfunction onFailure(failure) {\n\n    //          isConnect = false;\n    //首先判断是否是连接状态   连接状态不作处理\n    if(!isConnect) {\n        //如果连接中 不提示\n        if(!isConnecting) {\n            //此处提醒用户是否重连 可以确认后 手动执行重连方法\n            console.log(failure.errorMessage);\n        } else {\n            console.log(\"重连中...\");\n        }\n\n    }\n}\n\nfunction onMessageArrived(message) {\n    alert(\"onMessageArrived:\" + message.payloadString);\n    \n\n}\n\nfunction onConnectionLost(responseObject) {\n    console.log(\"connectionLost\");\n    isConnect = false;\n    //判断断开状态码   0位正常断开   不做重连\n    if(responseObject.errorCode !== 0) {\n        console.log(client.clientId + \": \" + responseObject.errorCode + \"\\n\");\n        //断线重连\n        reconnect()\n\n    }\n}\n//封装重连事件\nfunction reconnect() {\n    //重连计数\n    var i = 0;\n    // 开启重连定时器    没连接上会一直重连，设置延迟避免请求过多\n    tt = setInterval(function() {\n        if(!isConnect) {\n            i++;\n            console.log(\"连接失败,正在第\" + i + \"次尝试\" + \"\\n\");\n            connect();\n            //连接中状态  方便连接失败提示\n            isConnecting = true;\n        } else {\n            //清除定时器\n            clearInterval(tt);\n            isConnecting = false;\n        }\n    }, 3000);\n}\n\nfunction MainViewport_beforerender(sender){\n\n}\n\nfunction MainViewport_afterrender(sender){\n\n}","vmdcss":"","vmdprops":"\"\"","type":"module","vmdresource":"{\"components\":[{\"cid\":\"vmdrescsss\",\"layoutConfig\":{},\"userConfig\":{}},{\"cid\":\"vmdresjss\",\"layoutConfig\":{},\"userConfig\":{}},{\"cid\":\"vmdresimgs\",\"layoutConfig\":{},\"userConfig\":{}}]}"}