{"vmdlayout":"{\"components\":[{\"cid\":\"viewport\",\"id\":\"MyViewport\",\"layoutConfig\":{},\"userConfig\":{\"layout\":\"auto\",\"afterrender\":\"MyViewport_afterrender\"},\"cn\":[{\"cid\":\"panel\",\"id\":\"MyPanel\",\"layoutConfig\":{},\"userConfig\":{\"x\":0,\"y\":0,\"height\":650,\"layout\":\"absolute\",\"width\":600,\"border\":false,\"header\":false,\"region\":\"west\"},\"cn\":[{\"cid\":\"label\",\"id\":\"MyLabel8\",\"layoutConfig\":{},\"userConfig\":{\"x\":40,\"y\":160,\"text\":\"版本：\"}},{\"cid\":\"vmdButton\",\"id\":\"button1\",\"layoutConfig\":{},\"userConfig\":{\"x\":230,\"y\":480,\"type\":\"info\",\"text\":\"组件设计\",\"size\":\"large\",\"click\":\"button1_click\"}},{\"cid\":\"vmdButton\",\"id\":\"button\",\"layoutConfig\":{},\"userConfig\":{\"x\":110,\"y\":480,\"size\":\"large\",\"type\":\"info\",\"text\":\"保存\",\"click\":\"button_click\"}},{\"cid\":\"textarea\",\"id\":\"MyField7\",\"layoutConfig\":{},\"userConfig\":{\"x\":110,\"y\":390,\"width\":460,\"id\":\"MyField7\",\"allowBlank\":true,\"beforerender\":\"MyField7_beforerender\"}},{\"cid\":\"textfield\",\"id\":\"MyField5\",\"layoutConfig\":{},\"userConfig\":{\"x\":110,\"y\":350,\"width\":460,\"disabled\":true}},{\"cid\":\"textfield\",\"id\":\"MyField4\",\"layoutConfig\":{},\"userConfig\":{\"x\":110,\"y\":310,\"width\":460,\"disabled\":true}},{\"cid\":\"textfield\",\"id\":\"MyField3\",\"layoutConfig\":{},\"userConfig\":{\"x\":110,\"y\":270,\"width\":460,\"disabled\":true}},{\"cid\":\"textfield\",\"id\":\"MyField2\",\"layoutConfig\":{},\"userConfig\":{\"x\":110,\"y\":230,\"width\":460,\"disabled\":true}},{\"cid\":\"textfield\",\"id\":\"MyField1\",\"layoutConfig\":{},\"userConfig\":{\"x\":110,\"y\":120,\"width\":460,\"invalidText\":\"\",\"allowBlank\":false,\"beforerender\":\"MyField1_beforerender\"}},{\"cid\":\"textfield\",\"id\":\"MyField\",\"layoutConfig\":{},\"userConfig\":{\"x\":110,\"y\":80,\"width\":460,\"disabled\":true}},{\"cid\":\"label\",\"id\":\"MyLabel7\",\"layoutConfig\":{},\"userConfig\":{\"x\":40,\"y\":390,\"text\":\"说明：\",\"height\":20}},{\"cid\":\"label\",\"id\":\"MyLabel6\",\"layoutConfig\":{},\"userConfig\":{\"x\":40,\"y\":350,\"text\":\"修改时间：\"}},{\"cid\":\"label\",\"id\":\"MyLabel5\",\"layoutConfig\":{},\"userConfig\":{\"x\":40,\"y\":310,\"text\":\"修改人：\"}},{\"cid\":\"label\",\"id\":\"MyLabel4\",\"layoutConfig\":{},\"userConfig\":{\"x\":40,\"y\":270,\"text\":\"创建时间：\"}},{\"cid\":\"label\",\"id\":\"MyLabel3\",\"layoutConfig\":{},\"userConfig\":{\"x\":40,\"y\":233,\"text\":\"创建人：\"}},{\"cid\":\"label\",\"id\":\"MyLabel2\",\"layoutConfig\":{},\"userConfig\":{\"x\":40,\"y\":120,\"text\":\"名称：\"}},{\"cid\":\"label\",\"id\":\"MyLabel1\",\"layoutConfig\":{},\"userConfig\":{\"x\":40,\"y\":80,\"text\":\"编码：\"}},{\"cid\":\"label\",\"id\":\"MyLabel\",\"layoutConfig\":{},\"userConfig\":{\"x\":40,\"y\":30,\"text\":\"基础信息\",\"style\":\"color: blue;    font-size: 20px;\"}},{\"cid\":\"checkbox\",\"id\":\"hwCheckbox\",\"layoutConfig\":{},\"userConfig\":{\"x\":110,\"y\":195,\"boxLabel\":\"\"}},{\"cid\":\"label\",\"id\":\"label1\",\"layoutConfig\":{},\"userConfig\":{\"x\":40,\"y\":200,\"text\":\"共享：\"}},{\"cid\":\"vmdButton\",\"id\":\"button2\",\"layoutConfig\":{},\"userConfig\":{\"x\":380,\"y\":480,\"size\":\"large\",\"type\":\"info\",\"text\":\"发布\",\"click\":\"button2_click\"}},{\"cid\":\"textfield\",\"id\":\"Text_Ver\",\"layoutConfig\":{},\"userConfig\":{\"x\":110,\"y\":160,\"width\":460,\"id\":\"Text_Ver\",\"disabled\":true}},{\"cid\":\"vmdButton\",\"id\":\"button3\",\"layoutConfig\":{},\"userConfig\":{\"x\":540,\"y\":158,\"icon\":\"icon-plus\",\"style\":\"color: blue;    border:0;\",\"text\":\"\",\"width\":30,\"click\":\"button3_click\"}}]}]},{\"cid\":\"vmddataset\",\"id\":\"数据集\",\"layoutConfig\":{},\"userConfig\":{}},{\"cid\":\"vmdvariable\",\"id\":\"变量\",\"layoutConfig\":{},\"userConfig\":{}}]}","vmdevents":"//设置初始化信息  初始化组件的基础信息\nfunction MyViewport_afterrender(sender) {\n    var tree = parent.hwTree;\n    var newnode = tree.newnode;\n    //根据是否时新节点来进行不同设置，新节点默认部分信息，已存在节点自动提取节点上的文件信息\n    if(newnode) {\n        MyField.setValue(newGuid(32));\n        MyField1.setValue(\"\");\n        MyField2.setValue(Ext.util.Cookies.get('userName'));\n        MyField3.setValue(Ext.Date.dateFormat(new Date(), 'Y-m-d H:i:s'));\n        MyField4.setValue(\"\");\n        MyField5.setValue(\"\");\n        Text_Ver.setValue(\"1.0\");\n        MyField7.setValue(\"\");\n    } else {\n        var selId = tree.getSelectedItemId();\n        var selnode = tree.itemObj[selId];\n        hwCheckbox.setValue(selnode.shared == \"1\" ? true : false);\n        MyField.setValue(selnode.code);\n        MyField1.setValue(selnode.text);\n        MyField1.setDisabled(true); //修改查看信息时，组件名不能修改，只能查看\n        MyField2.setValue(selnode.createuser);\n        MyField3.setValue(selnode.createtime);\n        MyField4.setValue(selnode.changeuser);\n        MyField5.setValue(selnode.changetime);\n        Text_Ver.setValue(selnode.version);\n        MyField7.setValue(selnode.remark);\n    }\n}\n//保存的事件\nfunction button_click(sender) {\n    editId = \"\";\n    //先检测下录入的信息是否全\n    if(!saveCheck()) {\n        return;\n    }\n    //保存模块的基础信息\n    saveModelInfo(\"\", \"\", function() {\n        Ext.Msg.alert(\"提示\", \"保存成功！\")\n    });\n}\neditId = newGuid(10);\n//模块保存按钮操作\n//ver   要保存的版本号\n//edit_reason   发布版本的修改信息\n//callback   回调\nfunction saveModelInfo(ver, edit_reason, callback) {\n    var mytree = parent.hwTree; //获取树\n    var newnode = mytree.newnode; //获取是否为新组件\n    var selId = mytree.getSelectedItemId(); //获取当前选中节点\n    var selnode = mytree.itemObj[selId]; ////获取当前选中节点\n    var selnodepath = selnode.path; //获取路径\n    var id = newGuid(10); //\n    var category_id = selId;\n    //var Project_id = selnode.projectId;\n    // if(selnode.isProject) {\n    //     category_id = \"0\";\n    //     Project_id = selId;\n    // }\n    var codeid = MyField.getValue();\n    var name = MyField1.getValue(); //组件名\n    var remark = MyField7.getValue(); //组件说明\n    var type = \"0\";\n    //判断是否为新节点，进行不同的服务操作\n    //非新节点\n    if(!newnode) {\n        MyField4.setValue(Ext.util.Cookies.get('userName'));\n        MyField5.setValue(Ext.Date.dateFormat(new Date(), 'Y-m-d H:i:s'))\n            //更新模块基础信息\n        hwDas.ajax({\n            das: {\n                idedas: true\n            },\n            url: \"CDEServcie/resource/zygl\",\n            type: 'put',\n            timeout: 5000,\n            params: {},\n            headers: {\n                Ecylogin: Ext.util.Cookies.get('EcyLogin') || Ext.util.Cookies.get('ecyLogin')\n            },\n            data: [{\n                editid: editId,\n                id: selId,\n                // code: selnode.code,\n                // type: '4',\n                // name: name,\n                remark: remark,\n                // project_id: Project_id,\n                version: ver || Text_Ver.getValue(),\n                shared: hwCheckbox.getValue() ? \"1\" : \"0\",\n                readdate: Ext.Date.dateFormat(new Date(), 'Y-m-d H:i:s'),\n                //filepath: '/components/vmd/' + name + '.vmd',\n                row_changed_by: MyField4.getValue(),\n                row_changed_date: MyField5.getValue(),\n                edit_reason: edit_reason || \"修改基础信息\"\n            }],\n            success: function(result) {\n                selnode.text = name;\n                selnode.changetime = MyField5.getValue();\n                selnode.changeuser = MyField4.getValue();\n                selnode.remark = MyField7.getValue();\n                selnode.isModel = true;\n                selnode.version = Text_Ver.getValue();\n                selnode.shared = hwCheckbox.getValue() ? \"1\" : \"0\";\n                mytree.setItemText(selId, name)\n                callback();\n            },\n            error: function(msg) {\n                Ext.Msg.alert(\"提示\", \"保存模块基础信息失败\")\n                return;\n            }\n        })\n    } else { //新节点\n        //新节点先检测是否重名\n        checkName(name, function() {\n            //保存模块基础信息\n            hwDas.ajax({\n                das: {\n                    idedas: true\n                },\n                url: \"CDEServcie/resource/zygl\",\n                type: 'post',\n                timeout: 5000,\n                params: {},\n                headers: {\n                    Ecylogin: Ext.util.Cookies.get('EcyLogin') || Ext.util.Cookies.get('ecyLogin')\n                },\n                data: [{ //要提交的数据\n                    editid: editId,\n                    id: id,\n                    code: codeid,\n                    type: '4',\n                    name: name,\n                    remark: remark,\n                    category_id: category_id,\n                    //project_id: Project_id,\n                    shared: hwCheckbox.getValue() ? \"1\" : \"0\",\n                    version: Text_Ver.getValue(),\n                    readdate: Ext.Date.dateFormat(new Date(), 'Y-m-d H:i:s'),\n                    filepath: '/components/vmd/' + name + '.vmd',\n                    row_created_by: MyField2.getValue(),\n                    row_created_date: MyField3.getValue()\n                }],\n                success: function(result) {\n                    //添加成功后需要将节点添加到树上，并设置节点的信息\n                    mytree.insertNewChild(selId, id, name);\n                    mytree.setItemImage2(id, \"tree/model.png\", \"tree/model.png\", \"tree/model.png\")\n                    var treenode = mytree.item(id);\n                    treenode.path = selnodepath + \"/\" + id;\n                    //treenode.projectId = Project_id;\n                    if(treenode) {\n                        treenode.isModel = true;\n                        treenode.text = name;\n                        treenode.createuser = MyField2.getValue();\n                        treenode.createtime = MyField3.getValue();\n                        treenode.changetime = MyField5.getValue();\n                        treenode.changeuser = MyField4.getValue();\n                        treenode.remark = remark;\n                        treenode.version = Text_Ver.getValue();\n                        treenode.code = codeid;\n                        treenode.type = '4';\n                        treenode.shared = hwCheckbox.getValue() ? \"1\" : \"0\";\n                        treenode.newnode = true;\n                    }\n                    mytree.itemObj[id] = treenode;\n                    //设置当前节点选中\n                    mytree.selectItem(id, false, false);\n                    mytree.newnode = false; //新节点状态置为false\n                    callback();\n                },\n                error: function(msg) {\n                    Ext.Msg.alert(\"提示\", \"保存模块基础信息失败\")\n                    return;\n                }\n            })\n        })\n    }\n}\n//检测组件是否重名\n//name  组件名\n//callback  回调\nfunction checkName(name, callback) {\n    hwDas.ajax({\n        das: {\n            idedas: true\n        },\n        url: \"CDEServcie/resource/info\",\n        type: 'get',\n        timeout: 5000,\n        params: {\n            name: name\n        },\n        success: function(result) {\n            if(result.data[0].datas.length <= 0) {\n                if(callback)\n                    callback()\n            } else {\n                Ext.Msg.alert(\"提示\", \"该组件已存在，请重新命名组件！\")\n                return;\n            }\n        },\n        error: function(msg) {\n            Ext.Msg.alert(\"提示\", \"保存信息失败(检测是否重名出错!)\")\n            return;\n        }\n    })\n}\n\n//组件设计事件\nfunction button1_click(sender) {\n    editId = newGuid(10);\n    var mytree = parent.hwTree;\n    var selId = mytree.getSelectedItemId();\n    var selnode = mytree.itemObj[selId];\n    //设计前先进行录入检测\n    if(!saveCheck()) {\n        return;\n    }\n    //保存组件信息  并打开设计界面\n    saveModelInfo(\"\", \"\", function() {\n        selId = mytree.getSelectedItemId();\n        selnode = mytree.itemObj[selId];\n        var params = {\n            type: \"ux\",\n            path: selnode.text + '.vmd',\n            uxid: editId,\n            name: selnode.text,\n            ver: selnode.version\n        }\n        window.open(vmd.virtualPath + '/design/default.html?' + Ext.urlEncode(params), selnode.text + \" 组件设计\")\n    })\n}\n\n//自定义自定义方法\n//返回guid \n//len 长度\nfunction newGuid(len) {\n    var length = 32;\n    if(len)\n        length = len - 2\n    var guid = \"\";\n    arr = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'];\n    for(var i = 0; i < length; i++) {\n        pos = Math.round(Math.random() * (arr.length - 1));\n        guid += arr[pos];\n    }\n    return \"hw\" + guid;\n}\n\nfunction openSelMode(id, name, path) {\n    parent.openSelMode(id, name, path)\n}\n//文本初始化  设置校验规则  正则表达式\nfunction MyField1_beforerender(sender) {\n    MyField1.regex = /^[A-Z][a-zA-Z0-9_]*$/;\n    MyField1.regexText = \"名称须以大写字母开头，且只能包含数字、字母、下划线\";\n}\n\nfunction MyField7_beforerender(sender) {}\n//发布事件处理\nfunction button2_click(sender) {\n    editId = newGuid(10);\n    //调用发布界面\n    publish(function(name, oldver, newver) {\n       //复制文件到发布目录下\n        hwDas.copy(\"vmd\", \"components/ux/\" + name + \"/\" + oldver + \"/\" + name + \".js\", \"components_release/ux/\" + name + \"/\" + newver + \"/\" + name + \".js\", function() {}, function() {\n            Ext.Msg.alert(\"提示\", \"发布组件失败(拷贝文件出错),请重新发布！\")\n        });\n    })\n}\n//发布界面信息填写\n//callback 回调\nfunction publish(callback) {\n    //创建一个form，填写name，备注 \n    //获取当前组件的版本，并生成对应的数据集  当前版本  版本+0.1\n    var mytree = parent.hwTree;\n    var selId = mytree.getSelectedItemId();\n    var selnode = mytree.itemObj[selId];\n    var ver = selnode.version;\n    //创建组件发布的发布信息表单\n    var form = new Ext.form.FormPanel({\n            labelAlign: \"top\",\n            bodyStyle: \"padding: 10px\",\n            border: false,\n            items: [{\n                xtype: \"textarea\", //发布组件的信息  记录修改的内容\n                allowBlank: true,\n                height: 135,\n                name: 'remark',\n                anchor: \"100%\",\n                fieldLabel: \"更新日志\",\n                emptyText: \"请输入组件修改内容或修改日志\"\n            }]\n        })\n        //将表单添加到页面中\n    var win = new Ext.Window({\n        width: 440,\n        height: 260,\n        title: '复合组件版本发布',\n        hidden: false,\n        layout: \"fit\",\n        border: false,\n        modal: true,\n        items: form,\n        fbar: [{\n            text: '确定',\n            handler: function() {\n                if(form.getForm().isValid()) {\n                    var values = form.form.getValues()\n                        /*保存前校验*/\n                    if(values.remark == \"\") {\n                        Ext.Msg.alert(\"提示\", \"升级日志不能为空\")\n                        return false;\n                    }\n                    //保存发布的信息\n                    saveModelInfo(\"\", values.remark, function() {\n                        callback(selnode.text, selnode.version, selnode.version)\n                        win.close()\n                    })\n                }\n            }\n        }, {\n            text: '取消',\n            handler: function() {\n                win.close()\n            }\n        }]\n    });\n    win.show()\n}\n/*\n保存前校验\n*/\nfunction saveCheck() {\n    if(MyField1.getValue() == \"\") {\n        Ext.Msg.alert(\"提示\", \"组件名不能为空\")\n        return false;\n    }\n    if(MyField1.getActiveError() != \"\") {\n        Ext.Msg.alert(\"提示\", MyField1.getActiveError())\n        return false;\n    }\n    return true;\n}\n//创建新版本\nfunction button3_click(sender) {\n    editId = newGuid(10);\n    var mytree = parent.hwTree;\n    var selId = mytree.getSelectedItemId();\n    var selnode = mytree.itemObj[selId];\n    var ver = selnode.version;\n    f_ver = parseFloat(ver);\n    newver = String((f_ver + 0.1).toFixed(1));\n    Ext.Msg.confirm(\"提示\", \"是否要升级版本号，版本将由\" + ver + \"升级为\" + newver + \",升级版本号之后，历史版本将不可维护，确定要升级么？\", function(type) {\n        if(type == \"yes\") {\n            saveModelInfo(newver, \"版本由\" + ver + \"升级为\" + newver, function() {\n                vmd.core.cmpVerUpdate(selnode.text, ver, newver, function() {\n                    selnode.version = newver;\n                    Text_Ver.setValue(newver);\n                })\n            })\n        } else\n            return;\n    })\n}","vmdcss":"","vmdprops":"\"\"","type":"module"}