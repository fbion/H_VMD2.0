{"vmdversion":"2.0.3","vmdlayout":"{\"components\":[{\"cid\":\"viewport\",\"id\":\"MyViewport\",\"layoutConfig\":{},\"userConfig\":{\"layout\":\"anchor\"},\"cn\":[{\"cid\":\"panel\",\"id\":\"panel\",\"layoutConfig\":{},\"userConfig\":{\"anchor\":\"100% -50\",\"header\":false,\"layout\":\"border\",\"border\":false},\"cn\":[{\"cid\":\"panel\",\"id\":\"panel3\",\"layoutConfig\":{},\"userConfig\":{\"region\":\"center\",\"width\":229,\"header\":false,\"border\":true,\"layout\":\"anchor\",\"collapseMode\":\"mini\",\"split\":true},\"cn\":[{\"cid\":\"panel\",\"id\":\"panel4\",\"layoutConfig\":{},\"userConfig\":{\"height\":40,\"border\":false,\"header\":false,\"layout\":\"fit\"},\"cn\":[{\"cid\":\"container\",\"id\":\"div\",\"layoutConfig\":{},\"userConfig\":{\"style\":\"padding-top: 8px;    padding-left: 5px;\",\"layout\":\"column\",\"border\":false},\"cn\":[{\"cid\":\"textfield\",\"id\":\"MyField\",\"layoutConfig\":{},\"userConfig\":{\"width\":194,\"columnWidth\":0.99}},{\"cid\":\"container\",\"id\":\"div4\",\"layoutConfig\":{},\"userConfig\":{\"height\":20,\"width\":20,\"layout\":\"fit\"},\"cn\":[{\"cid\":\"vmdButton\",\"id\":\"button\",\"layoutConfig\":{},\"userConfig\":{\"icon\":\"search\",\"text\":\"\",\"size\":\"mini\",\"height\":20,\"width\":22}}]}]}]},{\"cid\":\"panel\",\"id\":\"panel5\",\"layoutConfig\":{},\"userConfig\":{\"anchor\":\"100% -40\",\"border\":false,\"header\":false,\"layout\":\"fit\",\"style\":\"padding-left: 5px;    padding-right: 5px\"},\"cn\":[{\"cid\":\"vmdTree\",\"id\":\"hwTree\",\"layoutConfig\":{},\"userConfig\":{\"afterrender\":\"hwTree_afterrender\",\"onOpenEnd\":\"hwTree_onOpenEnd\",\"nodeClick\":\"hwTree_nodeClick\",\"Check\":\"hwTree_Check\"}}]}]}]},{\"cid\":\"panel\",\"id\":\"panel1\",\"layoutConfig\":{},\"userConfig\":{\"height\":50,\"anchor\":\"\",\"header\":false,\"layout\":\"column\",\"border\":false},\"cn\":[{\"cid\":\"container\",\"id\":\"div1\",\"layoutConfig\":{},\"userConfig\":{\"columnWidth\":0.5,\"border\":false}},{\"cid\":\"container\",\"id\":\"div2\",\"layoutConfig\":{},\"userConfig\":{\"width\":200,\"layout\":\"absolute\",\"border\":false},\"cn\":[{\"cid\":\"vmdButton\",\"id\":\"button1\",\"layoutConfig\":{},\"userConfig\":{\"x\":10,\"y\":10,\"type\":\"primary\",\"text\":\"确定\",\"click\":\"button1_click\"}},{\"cid\":\"vmdButton\",\"id\":\"button2\",\"layoutConfig\":{},\"userConfig\":{\"x\":110,\"y\":10,\"text\":\"取消\",\"click\":\"button2_click\"}}]},{\"cid\":\"container\",\"id\":\"div3\",\"layoutConfig\":{},\"userConfig\":{\"columnWidth\":0.5,\"border\":false}}]}]},{\"cid\":\"vmddataset\",\"id\":\"数据集\",\"layoutConfig\":{},\"userConfig\":{}},{\"cid\":\"vmdvariable\",\"id\":\"变量\",\"layoutConfig\":{},\"userConfig\":{}}]}","vmdevents":"var nodeInfo = {\n    modelId: '2501',\n    variantProcess: {\n        processKey: 'forLeave1',\n        taskNodeid: 'startevent1',\n        taskNodeName: 'Start',\n        formProperties: [{\n            id: \"startDate\",\n            name: \"请假开始日期\",\n            type: \"date\",\n            expression: null,\n            variable: null,\n            datePattern: \"yyyy-MM-dd\",\n            required: true,\n            readable: true,\n            writable: true\n        }, {\n            id: \"endDate\",\n            name: \"请假结束日期\",\n            type: \"date\",\n            expression: null,\n            variable: null,\n            datePattern: \"yyyy-MM-dd\",\n            required: true,\n            readable: true,\n            writable: true\n        }, {\n            id: \"reason\",\n            name: \"请假原因\",\n            type: \"string\",\n            expression: null,\n            variable: null,\n            required: true,\n            readable: true,\n            writable: true\n        }]\n    },\n    variantNode: {\n        processKey: 'forLeave1',\n        taskNodeid: 'deptLeaderAudit',\n        taskNodeName: '部门领导审批',\n        formProperties: [{\n            id: \"startDate\",\n            name: \"请假开始日期\",\n            type: \"date\",\n            expression: null,\n            variable: null,\n            datePattern: \"yyyy-MM-dd\",\n            required: false,\n            readable: true,\n            writable: false\n        }, {\n            id: \"endDate\",\n            name: \"请假结束时间\",\n            type: \"date\",\n            expression: null,\n            variable: null,\n            datePattern: \"yyyy-MM-dd\",\n            required: false,\n            readable: true,\n            writable: false\n        }, {\n            id: \"deptLeaderApproved\",\n            name: \"审批意见\",\n            type: \"enum\",\n            expression: null,\n            variable: null,\n            enumValues: [{\n                name: \"同意\",\n                id: \"1\"\n            }, {\n                name: \"不同意\",\n                id: \"2\"\n            }],\n            required: true,\n            readable: true,\n            writable: true\n        }]\n    }\n}\nif(parent.nodeInfo)\n    nodeInfo = parent.nodeInfo;\n\nvar workspaceid = \"\";\nif(parent.vmd.workspace && !vmd.workspace) {\n    vmd.workspace = parent.vmd.workspace;\n    workspaceid = vmd.workspace.workspaceid || \"\";\n}\n\n\n//进度提示\nvar myMask = new Ext.LoadMask(Ext.getBody(), {\n    msg: \"数据加载中,请稍后...\",\n    msgCls: 'z-index:10000;'\n});\n\n//初始化数据\nfunction hwTree_afterrender(sender) {\n    myMask = new Ext.LoadMask(Ext.getCmp(\"hwTree\").el, {\n        msg: \"数据加载中,请稍后...\",\n        msgCls: 'z-index:10000;'\n    });\n    myMask.show();\n    var mytree = hwTree;\n    var firstNode = \"\";\n    mytree.deleteChildItems(0);\n    mytree.loadJSONObject({\n        id: 0,\n        text: \"我的项目\",\n        item: []\n    });\n    mytree.enableRadioButtons(true)\n    mytree.enableSingleRadioMode(true)\n    mytree.itemObj = {};\n    mytree.newnode = false;\n    if(workspaceid)\n        hwDas.get(\"DataServiceWorkSpace/WorkSpaceInfo/WorkSpaceProject\", {}, {\n            workspaceid: workspaceid\n        }, function(selresult) {\n\n\n            var idarray = [];\n            if(selresult.data && selresult.data.length > 0 && selresult.data[0].datas && selresult.data[0].datas.length > 0) {\n                var datajson = selresult.data[0].datas;\n                var treeDataJson = [];\n                var toopenid = \"\"\n                for(var i = 0; i < datajson.length; i++) {\n                    idarray.push(datajson[i].service_category_id)\n                }\n            }\n\n            hwDas.ajax({\n                das: {\n                    idedas: true\n                },\n                url: \"CDEServcie/project/info\",\n                type: 'get',\n                timeout: 5000,\n                params: {},\n                success: function(result) {\n                    var datajson = result.data[0].datas;\n                    var treeDataJson = [];\n                    for(var i = 0; i < datajson.length; i++) {\n                        if(datajson[i].id == \"eQ9ULgcVb1\") {\n                            continue\n                        } else {\n\n                            if(idarray.indexOf(datajson[i].id) >= 0 || idarray.length <= 0  || !workspaceid) {\n\n                                mytree.insertNewChild(0, datajson[i].id, datajson[i].name);\n                                mytree.setItemImage2(datajson[i].id, \"tree/projectclose.png\", \"tree/projectopen.png\", \"tree/projectclose.png\");\n\n                                mytree.showItemCheckbox(datajson[i].id, false)\n                                mytree.insertNewChild(datajson[i].id, datajson[i].id + \"-0\", \"\");\n                                mytree.closeItem(datajson[i].id);\n                                var treenode = mytree.item(datajson[i].id);\n                                treenode.path = \"/\" + datajson[i].id;\n                                if(treenode) {\n                                    treenode.isProject = true;\n                                    treenode.createuser = datajson[i].row_created_by;\n                                    treenode.createtime = datajson[i].row_created_date;\n                                    treenode.changetime = datajson[i].row_changed_date;\n                                    treenode.changeuser = datajson[i].row_changed_by;\n                                    treenode.code = datajson[i].code;\n                                    treenode.loadChild = false;\n                                }\n                                mytree.itemObj[datajson[i].id] = treenode;\n                                if(firstNode == \"\")\n                                    firstNode = datajson[i].id;\n                            }\n                        }\n                    }\n                    //默认选中首项 \n                    if(firstNode != \"\")\n                        mytree.selectItem(firstNode);\n\n                    myMask.hide();\n                },\n                error: function(msg) {\n                    myMask.hide();\n                    Ext.Msg.alert(\"提示\", \"获取模块信息失败\", function() {})\n                }\n            })\n\n\n\n\n\n\n\n\n        }, function() {})\n\n\n\n}\n\nfunction hwTree_onOpenEnd(sender, id, state) {\n    myMask.show();\n    var proId = id;\n    var mytree = hwTree;\n    mytree.newnode = false;\n    var hasChild = mytree.hasChildren(proId);\n    var selnode = mytree.itemObj[proId];\n    var selnodepath = selnode.path;\n    var projectId = \"\";\n    var childParentId = \"0\";\n    if(selnode.isProject) {\n        projectId = proId;\n        childParentId = \"0\";\n    } else {\n        projectId = selnode.projectId;\n        childParentId = proId\n    }\n    if(!selnode.loadChild && !selnode.isModel) {\n        hwDas.ajax({\n            das: {\n                idedas: true\n            },\n            url: \"CDEServcie/module/category\",\n            type: 'get',\n            timeout: 5000,\n            params: {\n                project_id: projectId,\n                parent_id: childParentId\n            },\n            success: function(result) {\n                var datajson = result.data[0].datas;\n                var treeDataJson = [];\n                for(var i = 0; i < datajson.length; i++) {\n                    mytree.insertNewChild(proId, datajson[i].id, datajson[i].name);\n                    mytree.setItemImage2(datajson[i].id, \"tree/folderClosed.gif\", \"tree/folderOpen.gif\", \"tree/folderClosed.gif\")\n                    mytree.showItemCheckbox(datajson[i].id, false)\n                    mytree.insertNewChild(datajson[i].id, datajson[i].id + \"-0\", \"\");\n                    mytree.closeItem(datajson[i].id);\n                    var treenode = mytree.item(datajson[i].id);\n                    treenode.path = selnodepath + \"/\" + datajson[i].id;\n                    treenode.projectId = projectId;\n                    if(treenode) {\n                        treenode.isFord = true;\n                        treenode.loadChild = false;\n                    }\n                    mytree.itemObj[datajson[i].id] = treenode;\n                }\n                myMask.hide();\n            },\n            error: function(msg) {\n                myMask.hide();\n                Ext.Msg.alert(\"提示\", \"获取模块信息失败\", function() {})\n            }\n        })\n        if(!selnode.loadChild) {\n            mytree.deleteItem(id + \"-0\", false);\n        }\n        selnode.loadChild = true;\n        hwDas.ajax({\n            das: {\n                idedas: true\n            },\n            url: \"CDEServcie/module/info\",\n            type: 'get',\n            timeout: 5000,\n            params: {\n                category_id: childParentId,\n                project_id: projectId\n            },\n            success: function(result) {\n                var datajson = result.data[0].datas;\n                var treeDataJson = [];\n                for(var i = 0; i < datajson.length; i++) {\n                    mytree.insertNewChild(proId, datajson[i].id, datajson[i].name);\n                    mytree.setItemImage2(datajson[i].id, \"tree/model.png\", \"tree/model.png\", \"tree/model.png\")\n                        // mytree.showItemCheckbox(datajson[i].id);\n                    var treenode = mytree.item(datajson[i].id);\n                    treenode.path = selnodepath + \"/\" + datajson[i].id;\n                    treenode.projectId = projectId;\n                    if(treenode) {\n                        treenode.isModel = true;\n                        treenode.createuser = datajson[i].row_created_by;\n                        treenode.createtime = datajson[i].row_created_date;\n                        treenode.changetime = datajson[i].row_changed_date;\n                        treenode.changeuser = datajson[i].row_changed_by;\n                        treenode.remark = datajson[i].remark;\n                        treenode.code = datajson[i].code;\n                    }\n                    mytree.itemObj[datajson[i].id] = treenode;\n                }\n                //数据操作  \n                myMask.hide();\n            },\n            error: function(msg) {\n                myMask.hide();\n                Ext.Msg.alert(\"提示\", \"获取模块信息失败\")\n            }\n        })\n    } else {\n        myMask.hide();\n    }\n}\n\n\n\n\nfunction button2_click(sender) {\n    parent.openWinFrom.hide();\n}\n\nfunction button1_click(sender) {\n    var mytree = hwTree;\n    //将节点信息传递到设计页面\n    var selId = mytree.getSelectedItemId();\n    var selnode = mytree.itemObj[selId];\n    if(parent.bindNodeForm)\n        parent.bindNodeForm(nodeInfo.variantNode.taskNodeid, selnode.id, function() {\n            parent.openWinFrom.hide();\n        });\n    if(nodeInfo && nodeInfo.variantNode && nodeInfo.variantProcess) {\n\n        if(nodeInfo.variantNode.formProperties) {\n            var nodevar = [];\n            for(var ii = 0; ii < nodeInfo.variantNode.formProperties.length; ii++) {\n                nodevar.push({\n                    id: nodeInfo.variantNode.formProperties[ii].id,\n                    name: nodeInfo.variantNode.formProperties[ii].name,\n                    type: nodeInfo.variantNode.formProperties[ii].type\n                })\n            }\n            nodeInfo.variantNode.formProperties = nodevar;\n        }\n        if(nodeInfo.variantProcess.formProperties) {\n            var g_var = [];\n            for(var ii = 0; ii < nodeInfo.variantProcess.formProperties.length; ii++) {\n                g_var.push({\n                    id: nodeInfo.variantProcess.formProperties[ii].id,\n                    name: nodeInfo.variantProcess.formProperties[ii].name,\n                    type: nodeInfo.variantProcess.formProperties[ii].type\n                })\n            }\n            nodeInfo.variantProcess.formProperties = g_var;\n        }\n        var params = {\n            id: selId,\n            name: selnode.text,\n            path: 'modules' + selnode.path + '.vmd',\n            nodeInfo: escape(Ext.encode(nodeInfo)),\n            workspaceid: workspaceid\n        }\n        window.open(vmd.virtualPath + '/design/default.html?' + Ext.urlEncode(params), selnode.text + \" 模块设计\")\n    }\n}\n\nfunction hwTree_nodeClick(sender, id) {\n    var mytree = hwTree;\n    var selnode = mytree.itemObj[id];\n    if(selnode.isModel && !mytree.isItemChecked(id)) {\n        mytree.setSubChecked(id, true)\n    }\n}\n\nfunction hwTree_Check(sender, id, state) {\n    var mytree = hwTree;\n    mytree.selectItem(id, true);\n    mytree.setSubChecked(id, true)\n}","vmdcss":"","vmdprops":"\"\"","type":"module","vmdresource":"{\"components\":[{\"cid\":\"vmdrescsss\",\"layoutConfig\":{},\"userConfig\":{}},{\"cid\":\"vmdresjss\",\"layoutConfig\":{},\"userConfig\":{}},{\"cid\":\"vmdresimgs\",\"layoutConfig\":{},\"userConfig\":{}}]}"}