{"vmdversion":"2.0.3","vmdlayout":"{\"components\":[{\"cid\":\"viewport\",\"id\":\"MyViewport\",\"layoutConfig\":{},\"userConfig\":{\"layout\":\"anchor\"},\"cn\":[{\"cid\":\"panel\",\"id\":\"panel\",\"layoutConfig\":{},\"userConfig\":{\"x\":0,\"y\":10,\"anchor\":\"100% -40\",\"border\":false,\"header\":false,\"layout\":\"fit\",\"bodyStyle\":\"padding:10px\"},\"cn\":[{\"cid\":\"vmdTree\",\"id\":\"hwTree\",\"layoutConfig\":{},\"userConfig\":{\"afterrender\":\"hwTree_afterrender\",\"onOpenEnd\":\"hwTree_onOpenEnd\",\"Check\":\"hwTree_Check\",\"nodeClick\":\"hwTree_nodeClick\"}}]},{\"cid\":\"panel\",\"id\":\"panel1\",\"layoutConfig\":{\"align\":\"middle\",\"pack\":\"center\"},\"userConfig\":{\"x\":-2,\"y\":110,\"height\":40,\"anchor\":\"100%\",\"header\":false,\"layout\":\"hbox\"},\"cn\":[{\"cid\":\"vmdButton\",\"id\":\"button\",\"layoutConfig\":{},\"userConfig\":{\"text\":\"确定\",\"type\":\"info\",\"click\":\"button_click\"}},{\"cid\":\"container\",\"id\":\"div\",\"layoutConfig\":{},\"userConfig\":{\"width\":100,\"border\":false}},{\"cid\":\"vmdButton\",\"id\":\"button1\",\"layoutConfig\":{},\"userConfig\":{\"text\":\"取消\",\"click\":\"button1_click\"}}]}]},{\"cid\":\"vmddataset\",\"id\":\"数据集\",\"layoutConfig\":{},\"userConfig\":{}},{\"cid\":\"vmdvariable\",\"id\":\"变量\",\"layoutConfig\":{},\"userConfig\":{}}]}","vmdevents":"var myMask = new Ext.LoadMask(Ext.getBody(), {\n    msg: \"数据加载中,请稍后...\",\n    msgCls: 'z-index:10000;'\n});\n\nfunction hwTree_afterrender(sender) {\n    var mytree = hwTree;\n    var firstNode = \"\";\n    mytree.deleteChildItems(0);\n    mytree.loadJSONObject({\n        id: 0,\n        text: \"工作流\",\n        item: []\n    });\n    mytree.enableRadioButtons(true)\n    mytree.enableSingleRadioMode(true)\n    mytree.itemObj = {};\n    mytree.newnode = false;\n    var elogin = Ext.util.Cookies.get('ecyLogin');\n    myMask.show();\n    var workflowIp = vmdSettings.workflowIp;\n    if(parent.vmd.workspace) {\n        workflowIp = parent.vmd.workspace.workflowIp || vmdSettings.workflowIp\n    } else if(parent.parent.vmd.workspace) {\n        workflowIp = parent.parent.vmd.workspace.workflowIp || vmdSettings.workflowIp\n    }\n    // 获取根节点下的文件夹节点信息\n    hwDas.ajax({\n        // das: {\n        //     idedas: false\n        // },\n        url: \"http://\" + workflowIp + \"/activiti-rest/service/repository/categorys/root?info=kermit\",\n        type: 'get',\n        timeout: 5000,\n        params: {},\n        success: function(result) {\n            // 获取数据后解析形成树形节点；\n            for(var i = 0; i < result.data.length; i++) {\n\n                mytree.insertNewChild(0, result.data[i].id, result.data[i].name);\n                mytree.setItemImage2(result.data[i].id, \"tree/projectclose.png\", \"tree/projectopen.png\", \"tree/projectclose.png\");\n                mytree.setItemColor(result.data[i].id, '#000000', '#000000');\n\n                mytree.showItemCheckbox(result.data[i].id, false)\n                mytree.insertNewChild(result.data[i].id, result.data[i].id + \"-0000\", \"\");\n                mytree.closeItem(result.data[i].id);\n                var treenode = mytree.item(result.data[i].id);\n                if(treenode) {\n                    treenode.isTemplate = false; // 标识是否是目标文件\n                    treenode.childLoaded = false; // 标识是否加载了子节点\n                    treenode.url = result.data[i].url;\n                }\n                var objKey = \"hw\" + result.data[i].id;\n                mytree.itemObj[objKey] = treenode;\n            }\n            myMask.hide();\n        },\n        error: function(msg) {\n            myMask.hide();\n            Ext.Msg.alert(\"提示\", \"获取模块信息失败\", function() {})\n        }\n    })\n\n}\n\nfunction hwTree_onOpenEnd(sender, id, state) {\n\n    var nodeId = id;\n    var mytree = hwTree;\n    var objKey = \"hw\" + nodeId;\n    var selnode = mytree.itemObj[objKey];\n    if(!selnode) {\n        return;\n    }\n    if(selnode.childLoaded) {\n        return;\n    }\n    // 如果是文件夹节点\n    if(!selnode.isTemplate) {\n        // 获取文件夹下的分类节点和模板节点\n        // 分类节点\n        getChildCategoryNodes(nodeId);\n        // 模板节点\n        getChildTemplateNodes(nodeId);\n    }\n}\n\n// 获取子节点中的分类节点\nfunction getChildCategoryNodes(nodeParentId) {\n\n    myMask.show();\n    var nodeId = nodeParentId;\n    var mytree = hwTree;\n    var objKeyTmp = \"hw\" + nodeId;\n    var selnode = mytree.itemObj[objKeyTmp];\n    if(!selnode) {\n        return;\n    }\n\n    var nodeNullId = nodeId + \"-0000\";\n    var nIndex = mytree.getIndexById(nodeNullId);\n    if(null != nIndex) {\n        if(nIndex > -1) {\n            mytree.deleteItem(nodeNullId);\n        }\n    }\n\n    var elogin = Ext.util.Cookies.get('ecyLogin');\n    var workflowIp = vmdSettings.workflowIp;\n    if(parent.vmd.workspace) {\n        workflowIp = parent.vmd.workspace.workflowIp || vmdSettings.workflowIp\n    } else if(parent.parent.vmd.workspace) {\n        workflowIp = parent.parent.vmd.workspace.workflowIp || vmdSettings.workflowIp\n    }\n    // 获取根节点下的文件夹节点信息\n    hwDas.ajax({\n        url: \"http://\" + workflowIp + \"/activiti-rest/service/repository/categorys/\" + nodeParentId + \"/members?info=kermit\",\n        type: 'get',\n        timeout: 5000,\n        params: {},\n        success: function(result) {\n\n            // 获取分类节点数据后解析形成树形节点；\n            for(var i = 0; i < result.data.length; i++) {\n\n                mytree.insertNewChild(nodeId, result.data[i].id, result.data[i].name);\n                mytree.setItemColor(result.data[i].id, '#000000', '#000000');\n\n                mytree.showItemCheckbox(result.data[i].id, false)\n                mytree.setItemImage2(result.data[i].id, \"tree/folderClosed.png\", \"tree/folderOpen.gif\", \"tree/folderClosed.gif\");\n                mytree.insertNewChild(result.data[i].id, result.data[i].id + \"-0000\", \"\");\n                mytree.closeItem(result.data[i].id);\n                var treenode = mytree.item(result.data[i].id);\n                if(treenode) {\n                    treenode.isTemplate = false; // 标识是否是目标文件\n                    treenode.childLoaded = false; // 标识是否加载了子节点\n                    treenode.url = result.data[i].url;\n                }\n                var objKey = \"hw\" + result.data[i].id;\n                mytree.itemObj[objKey] = treenode;\n            }\n\n            selnode.childLoaded = true;\n            myMask.hide();\n        },\n        error: function(msg) {\n            myMask.hide();\n            Ext.Msg.alert(\"提示\", \"获取分类节点信息失败\", function() {})\n        }\n    })\n}\n\n// 获取子节点中的模板节点\nfunction getChildTemplateNodes(nodeParentId) {\n\n    myMask.show();\n    var nodeId = nodeParentId;\n    var mytree = hwTree;\n    var objKeyTmp = \"hw\" + nodeId;\n    var selnode = mytree.itemObj[objKeyTmp];\n    if(!selnode) {\n        return;\n    }\n\n    var nodeNullId = nodeId + \"-0000\";\n    var nIndex = mytree.getIndexById(nodeNullId);\n    if(null != nIndex) {\n        if(nIndex > -1) {\n            mytree.deleteItem(nodeNullId);\n        }\n    }\n\n    var elogin = Ext.util.Cookies.get('ecyLogin');\n    var workflowIp = vmdSettings.workflowIp;\n    if(parent.vmd.workspace) {\n        workflowIp = parent.vmd.workspace.workflowIp || vmdSettings.workflowIp\n    } else if(parent.parent.vmd.workspace) {\n        workflowIp = parent.parent.vmd.workspace.workflowIp || vmdSettings.workflowIp\n    }\n    // 获取根节点下的文件夹节点信息\n    hwDas.ajax({\n        url: \"http://\" + workflowIp + \"/activiti-rest/service/repository/hwmodels?categoryId=\" + nodeParentId + \"&info=kermit\",\n        type: 'get',\n        timeout: 5000,\n        params: {},\n        success: function(result) {\n\n            // 获取分类节点数据后解析形成树形节点；\n            for(var j = 0; j < result.data.length; j++) {\n\n                for(var i = 0; i < result.data[j].datas.length; i++) {\n                    mytree.insertNewChild(nodeId, result.data[j].datas[i].ID, result.data[j].datas[i].NAME);\n                    if(result.data[j].datas[i].ISDEPLOYMENT) {\n                        mytree.setItemColor(result.data[j].datas[i].ID, '#000000', '#000000');\n                    } else {\n                        mytree.setItemColor(result.data[j].datas[i].ID, '#808080', '#808080');\n                    }\n                    mytree.setItemImage2(result.data[j].datas[i].ID, \"tree/model.png\", \"tree/model.png\", \"tree/model.png\");\n                    mytree.closeItem(result.data[j].datas[i].ID);\n                    var treenode = mytree.item(result.data[j].datas[i].ID);\n                    if(treenode) {\n                        treenode.isTemplate = true; // 标识是否是目标文件\n                        treenode.childLoaded = true; // 标识是否加载了子节点\n                        treenode.url = result.data[j].datas[i].URL;\n                    }\n                    var objKey = \"hw\" + result.data[j].datas[i].ID;\n                    mytree.itemObj[objKey] = treenode;\n                }\n            }\n            selnode.childLoaded = true;\n            myMask.hide();\n        },\n        error: function(msg) {\n            myMask.hide();\n            Ext.Msg.alert(\"提示\", \"获取分类节点信息失败\", function() {})\n        }\n    })\n}\n\nfunction hwTree_nodeClick(sender, id) {\n    var mytree = hwTree;\n    var selnode = mytree.itemObj[\"hw\" + id];\n\n    if(selnode.isTemplate && !mytree.isItemChecked(id)) {\n        if(mytree.getAllChecked() != \"\")\n            mytree.setSubChecked(mytree.getAllChecked(), false)\n        mytree.setSubChecked(id, true)\n    }\n}\n\nfunction hwTree_Check(sender, id, state) {\n    var mytree = hwTree;\n    mytree.selectItem(id, true);\n    mytree.setSubChecked(id, true)\n}\n\nfunction button_click(sender) {\n    var mytree = hwTree;\n    var flowInfo = {\n            modelId: mytree.getSelectedItemId(),\n            modelName: mytree.getSelectedItemText()\n        }\n        //parent.xds.vmd.getTreeNodeById(parent.edValue.id).component.setConfig(\"modelName\",mytree.getSelectedItemText())\n    window.vmdReturnValue = Ext.encode(flowInfo);\n    parent.edClose(true);\n}\n\nfunction button1_click(sender) {\n    parent.edClose();\n}","vmdcss":"","vmdprops":"\"\"","type":"module","vmdresource":"{\"components\":[{\"cid\":\"vmdrescsss\",\"layoutConfig\":{},\"userConfig\":{}},{\"cid\":\"vmdresjss\",\"layoutConfig\":{},\"userConfig\":{}},{\"cid\":\"vmdresimgs\",\"layoutConfig\":{},\"userConfig\":{}}]}"}