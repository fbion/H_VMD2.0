{"vmdversion":"2.0.3","vmdlayout":"{\"components\":[{\"cid\":\"viewport\",\"id\":\"MyViewport\",\"layoutConfig\":{},\"userConfig\":{\"layout\":\"border\",\"afterrender\":\"MyViewport_afterrender\",\"beforerender\":\"MyViewport_beforerender\"},\"cn\":[{\"cid\":\"panel\",\"id\":\"MyPanel1\",\"layoutConfig\":{},\"userConfig\":{\"x\":0,\"y\":10,\"height\":350,\"layout\":\"border\",\"header\":false,\"border\":false,\"maskDisabled\":true,\"hideCollapseTool\":false,\"collapsible\":false,\"padding\":\"5\",\"bodyStyle\":\"padding: 5px;    background-color: white;\",\"style\":\"border:1px red;\",\"bodyBorder\":false,\"region\":\"center\",\"width\":800,\"id\":\"MyPanel1\"},\"cn\":[{\"cid\":\"panel\",\"id\":\"MyPanel2\",\"layoutConfig\":{},\"userConfig\":{\"region\":\"west\",\"width\":228,\"border\":true,\"header\":false,\"layout\":\"border\",\"split\":true,\"collapseMode\":\"mini\",\"padding\":\"\",\"margins\":\"\",\"bodyStyle\":\"\",\"style\":\"padding: 5px 0 5px 5px;\",\"id\":\"MyPanel2\"},\"cn\":[{\"cid\":\"panel\",\"id\":\"MyPanel\",\"layoutConfig\":{},\"userConfig\":{\"region\":\"center\",\"layout\":\"fit\",\"header\":false,\"border\":false,\"id\":\"MyPanel\"},\"cn\":[{\"cid\":\"vmdTree\",\"id\":\"hwTree\",\"layoutConfig\":{},\"userConfig\":{\"afterrender\":\"hwTree_afterrender\",\"nodeClick\":\"hwTree_nodeClick\",\"onOpenEnd\":\"hwTree_onOpenEnd\",\"Check\":\"hwTree_Check\"}}]},{\"cid\":\"panel\",\"id\":\"MyPanel10\",\"layoutConfig\":{},\"userConfig\":{\"region\":\"north\",\"height\":30,\"header\":false,\"border\":false,\"layout\":\"absolute\",\"style\":\"border-bottom: 1px red;\",\"id\":\"MyPanel10\"},\"cn\":[{\"cid\":\"label\",\"id\":\"MyLabel\",\"layoutConfig\":{},\"userConfig\":{\"text\":\"数据服务\",\"x\":5,\"y\":5,\"id\":\"MyLabel\"}}]}]},{\"cid\":\"panel\",\"id\":\"MyPanel3\",\"layoutConfig\":{},\"userConfig\":{\"region\":\"center\",\"layout\":\"border\",\"border\":false,\"header\":false,\"style\":\"padding: 5px 5px 5px 0;\",\"width\":800,\"id\":\"MyPanel3\"},\"cn\":[{\"cid\":\"panel\",\"id\":\"MyPanel11\",\"layoutConfig\":{},\"userConfig\":{\"region\":\"north\",\"height\":30,\"header\":false,\"layout\":\"absolute\",\"border\":true,\"style\":\"\",\"id\":\"MyPanel11\"},\"cn\":[{\"cid\":\"label\",\"id\":\"MyLabel1\",\"layoutConfig\":{},\"userConfig\":{\"x\":5,\"y\":5,\"text\":\"参数\",\"id\":\"MyLabel1\"}}]},{\"cid\":\"panel\",\"id\":\"MyPanel12\",\"layoutConfig\":{},\"userConfig\":{\"region\":\"center\",\"layout\":\"fit\",\"border\":false,\"header\":false,\"id\":\"MyPanel12\"},\"cn\":[{\"cid\":\"tabpanel\",\"id\":\"MyTabs\",\"layoutConfig\":{},\"userConfig\":{\"region\":\"center\",\"activeTab\":0,\"afterrender\":\"MyTabs_afterrender\",\"style\":\"background-color: #fff;    background-image: url()\",\"bodyStyle\":\"background-color: #fff;    background-image: url();\",\"hideBorders\":false,\"autoDestroy\":false},\"cn\":[{\"cid\":\"panel\",\"id\":\"MyPanel4\",\"layoutConfig\":{},\"userConfig\":{\"title\":\"查询\",\"layout\":\"fit\",\"border\":false,\"header\":false,\"id\":\"MyPanel4\"},\"cn\":[{\"cid\":\"vmdGrid\",\"id\":\"hwGrid\",\"layoutConfig\":{},\"userConfig\":{\"beforerender\":\"hwGrid_beforerender\",\"afterrender\":\"hwGrid_afterrender\",\"beforeSelect\":\"hwGrid_beforeSelect\"}}]},{\"cid\":\"panel\",\"id\":\"MyPanel5\",\"layoutConfig\":{},\"userConfig\":{\"title\":\"添加\",\"layout\":\"fit\",\"border\":false,\"header\":false,\"id\":\"MyPanel5\"},\"cn\":[{\"cid\":\"vmdGrid\",\"id\":\"hwGrid1\",\"layoutConfig\":{},\"userConfig\":{\"beforerender\":\"hwGrid1_beforerender\",\"afterrender\":\"hwGrid1_afterrender\",\"beforeSelect\":\"hwGrid1_beforeSelect\"}}]},{\"cid\":\"panel\",\"id\":\"MyPanel6\",\"layoutConfig\":{},\"userConfig\":{\"title\":\"修改\",\"layout\":\"fit\",\"border\":false,\"header\":false,\"id\":\"MyPanel6\"},\"cn\":[{\"cid\":\"vmdGrid\",\"id\":\"hwGrid2\",\"layoutConfig\":{},\"userConfig\":{\"beforerender\":\"hwGrid2_beforerender\",\"afterrender\":\"hwGrid2_afterrender\",\"beforeSelect\":\"hwGrid2_beforeSelect\"}}]},{\"cid\":\"panel\",\"id\":\"MyPanel7\",\"layoutConfig\":{},\"userConfig\":{\"title\":\"删除\",\"layout\":\"fit\",\"border\":false,\"header\":false,\"id\":\"MyPanel7\"},\"cn\":[{\"cid\":\"vmdGrid\",\"id\":\"hwGrid3\",\"layoutConfig\":{},\"userConfig\":{\"beforerender\":\"hwGrid3_beforerender\",\"afterrender\":\"hwGrid3_afterrender\",\"beforeSelect\":\"hwGrid3_beforeSelect\"}}]},{\"cid\":\"panel\",\"id\":\"MyPanel8\",\"layoutConfig\":{},\"userConfig\":{\"title\":\"保存\",\"layout\":\"fit\",\"border\":false,\"header\":false,\"id\":\"MyPanel8\"},\"cn\":[{\"cid\":\"vmdGrid\",\"id\":\"hwGrid4\",\"layoutConfig\":{},\"userConfig\":{\"beforerender\":\"hwGrid4_beforerender\",\"afterrender\":\"hwGrid4_afterrender\",\"beforeSelect\":\"hwGrid4_beforeSelect\"}}]}]}]}]}]},{\"cid\":\"panel\",\"id\":\"MyPanel9\",\"layoutConfig\":{},\"userConfig\":{\"x\":0,\"y\":355,\"height\":50,\"header\":false,\"layout\":\"column\",\"padding\":\"5\",\"border\":false,\"bodyStyle\":\"border-top: 1px solid lightblue\",\"region\":\"south\",\"id\":\"MyPanel9\"},\"cn\":[{\"cid\":\"container\",\"id\":\"div\",\"layoutConfig\":{},\"userConfig\":{\"columnWidth\":0.5,\"border\":false}},{\"cid\":\"container\",\"id\":\"div1\",\"layoutConfig\":{},\"userConfig\":{\"width\":200,\"layout\":\"absolute\",\"border\":false},\"cn\":[{\"cid\":\"vmdButton\",\"id\":\"button\",\"layoutConfig\":{},\"userConfig\":{\"x\":50,\"y\":10,\"text\":\"确定\",\"click\":\"button_click\",\"type\":\"info\"}},{\"cid\":\"vmdButton\",\"id\":\"button1\",\"layoutConfig\":{},\"userConfig\":{\"x\":150,\"y\":10,\"text\":\"取消\",\"click\":\"button1_click\",\"type\":\"(none)\"}}]},{\"cid\":\"container\",\"id\":\"div2\",\"layoutConfig\":{},\"userConfig\":{\"columnWidth\":0.5,\"border\":false}}]}]},{\"cid\":\"vmddataset\",\"id\":\"数据集\",\"layoutConfig\":{},\"userConfig\":{}},{\"cid\":\"vmdvariable\",\"id\":\"变量\",\"layoutConfig\":{},\"userConfig\":{}}]}","vmdevents":"var workspaceid;\nvar projectid;\nvar workspaceworkflowIp;\nvar workspacedataServiceIp;\nif(parent.vmd && parent.vmd.workspace) {\n    workspaceid = parent.vmd.workspace.workspaceid || \"\";\n    workspaceworkflowIp = parent.vmd.workspace.workflowIp || \"\";\n    workspacedataServiceIp = parent.vmd.workspace.dataServiceIp || \"\";\n    projectid = parent.vmd.workspace.projectid || \"\";\n}\nif(parent.init_def_platformControlData) {\n    parent.init_def_platformControlData();\n    def_platformControl = parent.def_platformControl;\n}\nmyobj = {};\n\nvar saveobj = {}\nvar treeloderover = false;\n\nvar myMask = new Ext.LoadMask(Ext.getBody(), {\n    msg: \"数据加载中,请稍后...\",\n    msgCls: 'z-index:10000;'\n});\n\nfunction hwTree_afterrender(sender) {\n    //进度提示\n    myMask = new Ext.LoadMask(Ext.getCmp(\"hwTree\").el, {\n        msg: \"数据加载中,请稍后...\",\n        msgCls: 'z-index:10000;'\n    });\n    myMask.show();\n    /*\n        myobj = Ext.decode(parent.edValue.storeConfig)\n        if(myobj.url)\n            list = myobj.url.split(\"/\"); //字符分割 \n        if(myobj.callcode)\n            MyField.setValue(myobj.callcode)\n    */\n    var mytree = hwTree;\n    mytree.deleteChildItems(0);\n    mytree.loadJSONObject({\n        id: 0,\n        text: \"我的服务\",\n        item: []\n    });\n    mytree.enableRadioButtons(true)\n    mytree.enableSingleRadioMode(true)\n    mytree.itemObj = {};\n    mytree.newnode = false;\n    hwDas.appinfo.callCode = \"vmdCode\";\n    var firstNode = \"\";\n    hwDas.get(\"DataServiceWorkSpace/projectInfo/ProjcetServiceCategory\", {}, {\n            projectid: projectid || \"\",\n            type: 1\n        }, function(selresult) {\n            var idarray = [];\n            if(selresult.data && selresult.data.length > 0 && selresult.data[0].datas && selresult.data[0].datas.length > 0) {\n                var datajson = selresult.data[0].datas;\n                var treeDataJson = [];\n                var toopenid = \"\"\n                for(var i = 0; i < datajson.length; i++) {\n                    idarray.push(datajson[i].service_category_id)\n                }\n            }\n            var urlparam;\n            if(workspacedataServiceIp) {\n                urlparam = {\n                    host: workspacedataServiceIp,\n                    url: \"DataService/Service/Project\"\n                }\n            } else\n                urlparam = \"DataService/Service/Project\"\n\n            hwDas.get(urlparam, {\n                    Ecylogin: Ext.util.Cookies.get('EcyLogin') || Ext.util.Cookies.get('ecyLogin')\n                }, {\n                    develop: \"true\"\n                }, function(result) {\n                    var datajson = result.data[0].datas;\n                    var treeDataJson = [];\n                    var toopenid = \"\"\n                    for(var i = 0; i < datajson.length; i++) {\n                        if(list.indexOf(datajson[i].code) >= 0) {\n                            toopenid = datajson[i].id\n                        }\n                        if(idarray.indexOf(datajson[i].id) >= 0  || !projectid||!workspacedataServiceIp) {\n                            mytree.insertNewChild(0, datajson[i].id, datajson[i].name);\n                            mytree.setItemImage2(datajson[i].id, \"tree/projectclose.png\", \"tree/projectopen.png\", \"tree/projectclose.png\");\n                            mytree.showItemCheckbox(datajson[i].id, false)\n                            mytree.insertNewChild(datajson[i].id, datajson[i].id + \"-0\", \"\");\n                            mytree.closeItem(datajson[i].id);\n                            var treenode = mytree.item(datajson[i].id);\n                            treenode.path = datajson[i].code;\n                            if(treenode) {\n                                treenode.isProject = true;\n                                treenode.loadChild = false;\n                            }\n                            mytree.itemObj[datajson[i].id] = treenode;\n                            if(firstNode == \"\")\n                                firstNode = datajson[i].id;\n                        }\n                    }\n                    treeloderover = true;\n                    //默认选中首项 \n                    if(firstNode != \"\")\n                        mytree.selectItem(firstNode);\n                    if(toopenid != \"\")\n                        hwTree.openItem(toopenid);\n\n                    myMask.hide();\n                },\n                function(msg) {\n                    myMask.hide();\n                    Ext.Msg.alert(\"提示\", \"获取模块信息失败\", function() {})\n                })\n        }, function(msg) {\n            myMask.hide();\n            Ext.Msg.alert(\"提示\", \"获取模块信息失败\", function() {})\n        })\n        // hwDas.ajax({\n        //     das: {\n        //         idedas: true\n        //     },\n        //     url: \"DataService/Service/Project\",\n        //     type: 'get',\n        //     timeout: 5000,\n        //     headers: {\n        //         Ecylogin: Ext.util.Cookies.get('EcyLogin') || Ext.util.Cookies.get('ecyLogin')\n        //     },\n        //     params: {\n        //         develop: \"true\"\n        //     },\n        //     success: function(result) {\n        //         var datajson = result.data[0].datas;\n        //         var treeDataJson = [];\n        //         var toopenid = \"\"\n        //         for(var i = 0; i < datajson.length; i++) {\n        //             if(list.indexOf(datajson[i].code) >= 0) {\n        //                 toopenid = datajson[i].id\n        //             }\n        //             mytree.insertNewChild(0, datajson[i].id, datajson[i].name);\n        //             mytree.setItemImage2(datajson[i].id, \"tree/projectclose.png\", \"tree/projectopen.png\", \"tree/projectclose.png\");\n        //             mytree.showItemCheckbox(datajson[i].id, false)\n        //             mytree.insertNewChild(datajson[i].id, datajson[i].id + \"-0\", \"\");\n        //             mytree.closeItem(datajson[i].id);\n        //             var treenode = mytree.item(datajson[i].id);\n        //             treenode.path = datajson[i].code;\n        //             if(treenode) {\n        //                 treenode.isProject = true;\n        //                 treenode.loadChild = false;\n        //             }\n        //             mytree.itemObj[datajson[i].id] = treenode;\n        //             if(firstNode == \"\")\n        //                 firstNode = datajson[i].id;\n        //         }\n        //         treeloderover = true;\n        //         //默认选中首项 \n        //         if(firstNode != \"\")\n        //             mytree.selectItem(firstNode);\n        //         if(toopenid != \"\")\n        //             hwTree.openItem(toopenid);\n\n    //         myMask.hide();\n    //     },\n    //     error: function(msg) {\n    //         myMask.hide();\n    //         Ext.Msg.alert(\"提示\", \"获取模块信息失败\", function() {})\n    //     }\n    // })\n}\nvar selNodeId = \"\";\n\nfunction hwTree_nodeClick(sender, id) {\n\n    //20171118 将所有页签隐藏 只显示查询的页签内容，操作其他页签的操作均屏蔽\n    // MyTabs.hideTabStripItem(MyPanel4);\n    // MyTabs.hideTabStripItem(MyPanel5);\n    // MyTabs.hideTabStripItem(MyPanel6);\n    // MyTabs.hideTabStripItem(MyPanel7);\n    // MyTabs.hideTabStripItem(MyPanel8);\n    var proId = id;\n    var mytree = hwTree;\n    var selnode = mytree.itemObj[proId];\n    var gridarray = [];\n    if(selNodeId != id) {\n        if(selnode.isModel) {\n\n            if(!mytree.isItemChecked(id)) {\n                if(mytree.getAllChecked() != \"\")\n                    mytree.setSubChecked(mytree.getAllChecked(), false)\n                mytree.setSubChecked(id, true)\n            }\n            clearAllGrid();\n            var urlparam;\n            if(workspacedataServiceIp)\n                urlparam = {\n                    host: workspacedataServiceIp,\n                    url: \"DataService/Service/Method\"\n                }\n            else\n                urlparam = \"DataService/Service/Method\"\n            hwDas.get(urlparam, {}, {\n                        resourceid: proId\n                    },\n                    function(result) {\n                        var datajson = result.data[0].datas;\n                        var treeDataJson = [];\n                        for(var i = 0; i < datajson.length; i++) {\n                            if(datajson[i].name == \"get\") {\n                                MyTabs.unhideTabStripItem(MyPanel4);\n                                hwGrid.methodsId = datajson[i].id;\n                                hwGrid.methodsType = datajson[i].name;\n                                bindparams(hwGrid);\n                                gridarray.push(hwGrid)\n                            }\n                        }\n                        var bindover = false;\n                        while(!bindover) {\n                            bindover = true;\n                            for(var v in gridarray) {\n                                if(gridarray[v].bindData && gridarray[v].bindData == false)\n                                    bindover = false\n                            }\n                        }\n                    },\n                    function(msg) {\n                        Ext.Msg.alert(\"提示\", \"获取服务方法信息失败\", function() {})\n                    })\n                // hwDas.ajax({\n                //     das: {\n                //         idedas: true\n                //     },\n                //     url: \"DataService/Service/Method\",\n                //     type: 'get',\n                //     timeout: 5000,\n                //     params: ,\n                //     success: function(result) {\n                //         var datajson = result.data[0].datas;\n                //         var treeDataJson = [];\n                //         for(var i = 0; i < datajson.length; i++) {\n\n            //             if(datajson[i].name == \"get\") {\n            //                 MyTabs.unhideTabStripItem(MyPanel4);\n            //                 hwGrid.methodsId = datajson[i].id;\n            //                 hwGrid.methodsType = datajson[i].name;\n            //                 bindparams(hwGrid);\n            //                 gridarray.push(hwGrid)\n            //             }\n            //             //20171118 将所有页签隐藏 只显示查询的页签内容，操作其他页签的操作均屏蔽\n            //             // if(datajson[i].name == \"post\") {\n            //             //     MyTabs.unhideTabStripItem(MyPanel5);\n            //             //     hwGrid1.methodsId = datajson[i].id;\n            //             //     hwGrid1.methodsType = datajson[i].name;\n            //             //     bindparams(hwGrid1);\n            //             //     gridarray.push(hwGrid)\n            //             // }\n            //             // if(datajson[i].name == \"put\") {\n            //             //     MyTabs.unhideTabStripItem(MyPanel6);\n            //             //     hwGrid2.methodsId = datajson[i].id;\n            //             //     hwGrid2.methodsType = datajson[i].name;\n            //             //     bindparams(hwGrid2);\n            //             //     gridarray.push(hwGrid)\n            //             // }\n            //             // if(datajson[i].name == \"delete\") {\n            //             //     MyTabs.unhideTabStripItem(MyPanel7);\n            //             //     hwGrid3.methodsId = datajson[i].id;\n            //             //     hwGrid3.methodsType = datajson[i].name;\n            //             //     bindparams(hwGrid3);\n            //             //     gridarray.push(hwGrid)\n            //             // }\n            //             // if(datajson[i].name == \"save\") {\n            //             //     MyTabs.unhideTabStripItem(MyPanel8);\n            //             //     hwGrid4.methodsId = datajson[i].id;\n            //             //     hwGrid4.methodsType = datajson[i].name;\n            //             //     bindparams(hwGrid4);\n            //             //     gridarray.push(hwGrid)\n            //             // }\n            //         }\n            //         var bindover = false;\n            //         while(!bindover) {\n            //             bindover = true;\n            //             for(var v in gridarray) {\n            //                 if(gridarray[v].bindData && gridarray[v].bindData == false)\n            //                     bindover = false\n            //             }\n            //         }\n            //     },\n            //     error: function(msg) {\n            //         Ext.Msg.alert(\"提示\", \"获取服务方法信息失败\", function() {})\n            //     }\n            // })\n\n        } else {}\n    }\n    bselNodeId = id;\n}\n\nfunction fillMethods() {}\n//点击模块节点时，清空所有网格数据\nfunction clearAllGrid() {\n\n    if(hwGrid.loder) {\n        hwGrid.clearAll();\n        hwGrid.bindData = false;\n    }\n    //20171118 将所有页签隐藏 只显示查询的页签内容，操作其他页签的操作均屏蔽\n    // if(hwGrid1.loder) {\n    //     hwGrid1.clearAll();\n    //     hwGrid1.bindData = false;\n    // }\n    // if(hwGrid2.loder) {\n    //     hwGrid2.clearAll();\n    //     hwGrid2.bindData = false;\n    // }\n    // if(hwGrid3.loder) {\n    //     hwGrid3.clearAll();\n    //     hwGrid3.bindData = false;\n    // }\n    // if(hwGrid4.loder) {\n    //     hwGrid4.clearAll();\n    //     hwGrid4.bindData = false;\n    // }\n}\n\nfunction bindparams(grid) {\n    if(!grid.loder)\n        return;\n    var urlparam;\n    if(workspacedataServiceIp) {\n        urlparam = {\n            host: workspacedataServiceIp,\n            url: \"DataService/Service/Parameter\"\n        }\n    } else\n        urlparam = \"DataService/Service/Parameter\"\n    hwDas.get(urlparam, {}, {\n            methodid: grid.methodsId\n        }, function(result) {\n            var datajson = result.data[0].datas;\n            grid.bindData = true;\n            var rows = [];\n            for(var i = 0; i < datajson.length; i++) {\n                var row = {};\n                row.id = i + 1;\n                row.data = [];\n                row.data.push(i + 1);\n                row.data.push(datajson[i].code);\n                row.data.push(datajson[i].name);\n                row.data.push(datajson[i].type);\n                var getparams = [];\n                if(myobj.id == hwTree.getSelectedItemId()) {\n                    if(grid.methodsType == \"get\") {\n                        getparams = myobj.getMethods;\n                    }\n                    //20171118 将所有页签隐藏 只显示查询的页签内容，操作其他页签的操作均屏蔽\n                    // if(grid.methodsType == \"post\") {\n                    //     getparams = myobj.postMethods;\n                    // }\n                    // if(grid.methodsType == \"put\") {\n                    //     getparams = myobj.putMethods;\n                    // }\n                    // if(grid.methodsType == \"delete\") {\n                    //     getparams = myobj.deleteMethods;\n                    // }\n                    // if(grid.methodsType == \"save\") {\n                    //     getparams = myobj.saveMethods;\n                    // }\n                }\n\n                for(var v = 0; v < getparams.length; v++) {\n                    if(datajson[i].code == getparams[v].id) {\n                        row.data.push(getparams[v].value1);\n                        row.data.push(getparams[v].value2);\n                        break;\n                    }\n                }\n\n                //row.data.push(datajson[i].code);\n                //row.data.push(datajson[i].code);\n                rows.push(row);\n            }\n            grid.parse({\n                rows: rows\n            }, \"json\");\n            //绑定参数到网格中\n        }, function(msg) {\n            Ext.Msg.alert(\"提示\", \"获取服务方法参数失败\", function() {})\n        })\n        // hwDas.ajax({\n        //     das: {\n        //         idedas: true\n        //     },\n        //     url: \"DataService/Service/Parameter\",\n        //     type: 'get',\n        //     timeout: 5000,\n        //     params: {\n        //         methodid: grid.methodsId\n        //     },\n        //     success: function(result) {\n        //         var datajson = result.data[0].datas;\n        //         grid.bindData = true;\n\n    //         var rows = [];\n    //         for(var i = 0; i < datajson.length; i++) {\n    //             var row = {};\n    //             row.id = i + 1;\n    //             row.data = [];\n    //             row.data.push(i + 1);\n    //             row.data.push(datajson[i].code);\n    //             row.data.push(datajson[i].name);\n    //             row.data.push(datajson[i].type);\n    //             var getparams = [];\n    //             if(myobj.id == hwTree.getSelectedItemId()) {\n    //                 if(grid.methodsType == \"get\") {\n    //                     getparams = myobj.getMethods;\n    //                 }\n    //                 //20171118 将所有页签隐藏 只显示查询的页签内容，操作其他页签的操作均屏蔽\n    //                 // if(grid.methodsType == \"post\") {\n    //                 //     getparams = myobj.postMethods;\n    //                 // }\n    //                 // if(grid.methodsType == \"put\") {\n    //                 //     getparams = myobj.putMethods;\n    //                 // }\n    //                 // if(grid.methodsType == \"delete\") {\n    //                 //     getparams = myobj.deleteMethods;\n    //                 // }\n    //                 // if(grid.methodsType == \"save\") {\n    //                 //     getparams = myobj.saveMethods;\n    //                 // }\n    //             }\n\n    //             for(var v = 0; v < getparams.length; v++) {\n    //                 if(datajson[i].code == getparams[v].id) {\n    //                     row.data.push(getparams[v].value1);\n    //                     row.data.push(getparams[v].value2);\n    //                     break;\n    //                 }\n    //             }\n\n    //             //row.data.push(datajson[i].code);\n    //             //row.data.push(datajson[i].code);\n    //             rows.push(row);\n    //         }\n    //         grid.parse({\n    //             rows: rows\n    //         }, \"json\");\n    //         //绑定参数到网格中\n    //     },\n    //     error: function(msg) {\n    //         Ext.Msg.alert(\"提示\", \"获取服务方法参数失败\", function() {})\n    //     }\n    // })\n}\n\n\nfunction bindSelTabParams(b) {\n\n    if(b.id == MyPanel4.id && !hwGrid.bindData) {\n        bindparams(hwGrid)\n    }\n    if(b.id == MyPanel5.id && !hwGrid1.bindData) {\n        bindparams(hwGrid1)\n    }\n    if(b.id == MyPanel6.id && !hwGrid2.bindData) {\n        bindparams(hwGrid2)\n    }\n    if(b.id == MyPanel7.id && !hwGrid3.bindData) {\n        bindparams(hwGrid3)\n    }\n    if(b.id == MyPanel8.id && !hwGrid4.bindData) {\n        bindparams(hwGrid4)\n    }\n}\n\nfunction MyTabs_afterrender(sender) {\n    //20171118 将所有页签隐藏 只显示查询的页签内容，操作其他页签的操作均屏蔽\n    // MyTabs.on('tabchange', function(a, b) {\n    //     bindSelTabParams(b);\n    // })\n}\n\nfunction GetSaveObj(fun) {\n    var mytree = hwTree;\n    var selId = mytree.getSelectedItemId();\n    var selnode = mytree.itemObj[selId];\n    saveobj = {};\n    saveobj.id = selId;\n    saveobj.callcode = \"vmdCode\";\n    saveobj.url = selnode.path;\n    saveobj.host = \"\";\n    saveobj.isHwRest = true;\n    saveobj.name = selnode.text;\n    saveobj.getMethods = getGridObj(hwGrid); // [];\n    saveobj.postMethods = getGridObj(hwGrid1);\n    saveobj.putMethods = getGridObj(hwGrid2);\n    saveobj.deleteMethods = getGridObj(hwGrid3);\n    saveobj.saveMethods = getGridObj(hwGrid4);\n    getFields(function(fields) {\n        saveobj.fields = fields\n        fun(saveobj)\n    });\n    //return saveobj;\n}\n\nfunction getFields(fun) {\n    var mytree = hwTree;\n    var selId = mytree.getSelectedItemId();\n    var selnode = mytree.itemObj[selId];\n    var selnodepath = selnode.path;\n    hwDas.appinfo.callCode = \"vmdCode\"\n    var urlparam;\n    if(workspacedataServiceIp) {\n        urlparam = {\n            host: workspacedataServiceIp,\n            url: selnodepath\n        }\n    } else\n        urlparam = selnodepath\n\n    hwDas.get(urlparam, {}, {}, function(result) {\n            if(fun) {\n                resultDataFields = result.data[0].fields\n                var dataFields = [];\n                for(var p in resultDataFields) {\n                    // fields\n                    if(typeof(resultDataFields[p]) == \"function\") {} else {\n                        var fields = {\n                            name: p,\n                            type: resultDataFields[p].toLowerCase()\n                        }\n                        dataFields.push(fields);\n                    }\n                }\n                fun(dataFields)\n            }\n        }, function(msg) {\n            Ext.Msg.alert(\"提示\", \"获取字段信息失败\", function() {})\n        })\n        // hwDas.ajax({\n        //     das: {\n        //         idedas: true\n        //     },\n        //     url: selnodepath,\n        //     type: 'get',\n        //     timeout: 5000,\n        //     params: {},\n        //     success: function(result) {\n        //         if(fun) {\n        //             resultDataFields = result.data[0].fields\n        //             var dataFields = [];\n        //             for(var p in resultDataFields) {\n        //                 // fields\n        //                 if(typeof(resultDataFields[p]) == \"function\") {} else {\n        //                     var fields = {\n        //                         name: p,\n        //                         type: resultDataFields[p].toLowerCase()\n        //                     }\n        //                     dataFields.push(fields);\n        //                 }\n        //             }\n        //             fun(dataFields)\n        //         }\n        //     },\n        //     error: function(msg) {\n        //         Ext.Msg.alert(\"提示\", \"获取字段信息失败\", function() {})\n        //     }\n        // })\n}\n\nfunction getGridObj(grid) {\n    var params = [];\n    if(grid.loder && grid.bindData) {\n        grid.editStop(true);\n\n        for(var i = 0; i < grid.getRowsNum(); i++) {\n            params.push({\n                id: grid.cells2(i, 1).getValue(),\n                value1: grid.cells2(i, 4).getValue(),\n                value2: grid.cells2(i, 5).getValue()\n            });\n        }\n    }\n    return params;\n}\n\nfunction button_click(sender) {\n    GetSaveObj(function(obj) {\n        window.vmdReturnValue = Ext.encode(obj);\n        var data = [];\n        for(var i = 0; i < obj.fields.length; i++) {\n            data.push({\n                cid: 'datafield',\n                name: obj.fields[i].name\n            })\n        }\n        parent.xds.vmd.deleteChildNodeById(parent.edValue.id)\n        parent.xds.vmd.addNode(data, parent.edValue.id)\n        parent.edClose(true);\n    })\n}\n\nfunction button1_click(sender) {\n    window.vmdReturnValue = \"\"\n    parent.edClose();\n}\n\nvar list = [];\n\nfunction MyViewport_afterrender(sender) {\n    // myMask.hide();\n}\n\n\nfunction hwGrid_beforerender(sender) {\n    initgrid(sender)\n    hwGrid.loder = true;\n}\n\nfunction hwGrid2_beforerender(sender) {\n    initgrid(sender)\n    hwGrid2.loder = true;\n}\n\nfunction hwGrid1_beforerender(sender) {\n    initgrid(sender)\n    hwGrid1.loder = true;\n}\n\nfunction hwGrid3_beforerender(sender) {\n    initgrid(sender)\n    hwGrid3.loder = true;\n}\n\nfunction hwGrid4_beforerender(sender) {\n    initgrid(sender)\n    hwGrid4.loder = true;\n}\n\nfunction initgrid(sender) {\n    sender.headstr = \"序号,编码,名称,类型,值,默认值\";\n    sender.colType = \"ro,ro,ro,ro,txt,txt\";\n    //sender.colSorting = \"int,str,str,str,str,str\";\n    var headerWidth = \"50,100,100,100,120,120\"\n    sender.headerWidth = headerWidth;\n}\n\nfunction hwGrid_afterrender(sender) {\n    sender.clearAll()\n}\n\nfunction hwTree_onOpenEnd(sender, id, state) {\n\n\n    var proId = id;\n    var mytree = hwTree;\n    mytree.newnode = false;\n    var selnode = mytree.itemObj[proId];\n    if(!selnode.loadChild) {\n        if(selnode.isProject) {\n            fillFord(proId, {\n                projectid: proId,\n                parentid: \"0\"\n            });\n        } else {\n            fillFord(proId, {\n                parentid: proId\n            });\n            fillMode(proId, {\n                categoryid: proId\n            });\n        }\n        if(!selnode.loadChild) {\n            mytree.deleteItem(id + \"-0\", false);\n        }\n    }\n    selnode.loadChild = true;\n}\n\nfunction fillFord(id, params) {\n    myMask.show();\n    var proId = id;\n    var mytree = hwTree;\n    var selnode = mytree.itemObj[proId];\n    var selnodepath = selnode.path;\n    var urlparam;\n    if(workspacedataServiceIp) {\n        urlparam = {\n            host: workspacedataServiceIp,\n            url: \"DataService/Service/Category\"\n        }\n    } else\n        urlparam = \"DataService/Service/Category\"\n\n    hwDas.get(urlparam, {}, params, function(result) {\n            var mytree = hwTree;\n            var datajson = result.data[0].datas;\n            var treeDataJson = [];\n            var toopenid = \"\";\n            for(var i = 0; i < datajson.length; i++) {\n                if(list.indexOf(datajson[i].code) >= 0 && list.indexOf(datajson[i].code) < list.length - 1) {\n                    toopenid = datajson[i].id\n                }\n\n                mytree.insertNewChild(proId, datajson[i].id, datajson[i].name);\n                mytree.setItemImage2(datajson[i].id, \"tree/folderClosed.gif\", \"tree/folderOpen.gif\", \"tree/folderClosed.gif\")\n                mytree.showItemCheckbox(datajson[i].id, false)\n                mytree.insertNewChild(datajson[i].id, datajson[i].id + \"-0\", \"\");\n                mytree.closeItem(datajson[i].id);\n                var treenode = mytree.item(datajson[i].id);\n                treenode.path = selnodepath + \"/\" + datajson[i].code;\n                if(treenode) {\n                    treenode.isFord = true;\n                    treenode.loadChild = false;\n                }\n                mytree.itemObj[datajson[i].id] = treenode;\n            }\n            if(toopenid != \"\") {\n                mytree.openItem(toopenid)\n            }\n            myMask.hide();\n        }, function(msg) {\n            myMask.hide();\n            Ext.Msg.alert(\"提示\", \"获取模块信息失败\", function() {})\n        })\n        // hwDas.ajax({\n        //     das: {\n        //         idedas: true\n        //     },\n        //     url: \"DataService/Service/Category\",\n        //     type: 'get',\n        //     timeout: 5000,\n        //     params: params,\n        //     success: function(result) {\n        //         var mytree = hwTree;\n        //         var datajson = result.data[0].datas;\n        //         var treeDataJson = [];\n        //         var toopenid = \"\";\n        //         for(var i = 0; i < datajson.length; i++) {\n        //             if(list.indexOf(datajson[i].code) >= 0 && list.indexOf(datajson[i].code) < list.length - 1) {\n        //                 toopenid = datajson[i].id\n        //             }\n\n    //             mytree.insertNewChild(proId, datajson[i].id, datajson[i].name);\n    //             mytree.setItemImage2(datajson[i].id, \"tree/folderClosed.gif\", \"tree/folderOpen.gif\", \"tree/folderClosed.gif\")\n    //             mytree.showItemCheckbox(datajson[i].id, false)\n    //             mytree.insertNewChild(datajson[i].id, datajson[i].id + \"-0\", \"\");\n    //             mytree.closeItem(datajson[i].id);\n    //             var treenode = mytree.item(datajson[i].id);\n    //             treenode.path = selnodepath + \"/\" + datajson[i].code;\n    //             if(treenode) {\n    //                 treenode.isFord = true;\n    //                 treenode.loadChild = false;\n    //             }\n    //             mytree.itemObj[datajson[i].id] = treenode;\n    //         }\n    //         if(toopenid != \"\") {\n    //             mytree.openItem(toopenid)\n    //         }\n    //         myMask.hide();\n    //     },\n    //     error: function(msg) {\n    //         myMask.hide();\n    //         Ext.Msg.alert(\"提示\", \"获取模块信息失败\", function() {})\n    //     }\n    // })\n}\n\n\nfunction fillMode(id, params) {\n    myMask.show();\n    var proId = id;\n    var mytree = hwTree;\n    var selnode = mytree.itemObj[proId];\n    var selnodepath = selnode.path;\n    var urlparam;\n    if(workspacedataServiceIp) {\n        urlparam = {\n            host: workspacedataServiceIp,\n            url: \"DataService/Service/Resource\"\n        }\n    } else\n        urlparam = \"DataService/Service/Resource\"\n    hwDas.get(urlparam, {}, params, function(result) {\n            var datajson = result.data[0].datas;\n            var treeDataJson = [];\n            var toselectid = \"\";\n            for(var i = 0; i < datajson.length; i++) {\n                if(list.indexOf(datajson[i].code) >= 0 && myobj) {\n                    if(myobj.id && datajson[i].id == myobj.id)\n                        toselectid = datajson[i].id\n                    if(myobj.id == \"\")\n                        toselectid = datajson[i].id\n                }\n                var mytree = hwTree;\n                mytree.insertNewChild(proId, datajson[i].id, datajson[i].name);\n                mytree.setItemImage2(datajson[i].id, \"tree/model.png\", \"tree/model.png\", \"tree/model.png\")\n                var treenode = mytree.item(datajson[i].id);\n                treenode.path = selnodepath + \"/\" + datajson[i].code;\n                if(treenode) {\n                    treenode.isModel = true;\n                }\n                mytree.itemObj[datajson[i].id] = treenode;\n            }\n            if(toselectid != \"\") {\n                mytree.selectItem(toselectid, true)\n            }\n            //数据操作   \n            myMask.hide();\n        }, function(msg) {\n            myMask.hide();\n            Ext.Msg.alert(\"提示\", \"获取模块信息失败\")\n        })\n        // hwDas.ajax({\n        //     das: {\n        //         idedas: true\n        //     },\n        //     url: \"DataService/Service/Resource\",\n        //     type: 'get',\n        //     timeout: 5000,\n        //     params: params,\n        //     success: function(result) {\n        //         var datajson = result.data[0].datas;\n        //         var treeDataJson = [];\n        //         var toselectid = \"\";\n        //         for(var i = 0; i < datajson.length; i++) {\n        //             if(list.indexOf(datajson[i].code) >= 0 && myobj) {\n        //                 if(myobj.id && datajson[i].id == myobj.id)\n        //                     toselectid = datajson[i].id\n        //                 if(myobj.id == \"\")\n        //                     toselectid = datajson[i].id\n        //             }\n        //             var mytree = hwTree;\n        //             mytree.insertNewChild(proId, datajson[i].id, datajson[i].name);\n        //             mytree.setItemImage2(datajson[i].id, \"tree/model.png\", \"tree/model.png\", \"tree/model.png\")\n        //             var treenode = mytree.item(datajson[i].id);\n        //             treenode.path = selnodepath + \"/\" + datajson[i].code;\n        //             if(treenode) {\n        //                 treenode.isModel = true;\n        //             }\n        //             mytree.itemObj[datajson[i].id] = treenode;\n        //         }\n        //         if(toselectid != \"\") {\n        //             mytree.selectItem(toselectid, true)\n        //         }\n        //         //数据操作   \n        //         myMask.hide();\n        //     },\n        //     error: function(msg) {\n        //         myMask.hide();\n        //         Ext.Msg.alert(\"提示\", \"获取模块信息失败\")\n        //     }\n        // })\n\n}\n\nfunction hwGrid1_afterrender(sender) {\n    sender.clearAll()\n}\n\nfunction hwGrid2_afterrender(sender) {\n    sender.clearAll()\n}\n\nfunction hwGrid3_afterrender(sender) {\n    sender.clearAll()\n}\n\nfunction hwGrid4_afterrender(sender) {\n    sender.clearAll()\n}\n\nfunction MyViewport_beforerender(sender) {\n    // myMask.show();\n    MyTabs.hideTabHeader = true;\n    if(!parent.edValue || !parent.edValue.storeConfig)\n        return\n    myobj = Ext.decode(parent.edValue.storeConfig)\n    if(myobj.url)\n        list = myobj.url.split(\"/\"); //字符分割 \n}\n\n\nfunction hwGrid1_beforeSelect(sender, stage, rowId, cellInd) {\n    var mygrid = sender;\n    valueEditFrm(mygrid, new_row, new_col_index);\n}\n\nfunction hwGrid2_beforeSelect(sender, stage, rowId, cellInd) {\n    var mygrid = sender;\n    valueEditFrm(mygrid, new_row, new_col_index);\n}\n\nfunction hwGrid3_beforeSelect(sender, stage, rowId, cellInd) {\n    var mygrid = sender;\n    valueEditFrm(mygrid, new_row, new_col_index);\n}\n\nfunction hwGrid4_beforeSelect(sender, stage, rowId, cellInd) {\n    var mygrid = sender;\n    valueEditFrm(mygrid, new_row, new_col_index);\n}\n\nfunction hwGrid_beforeSelect(sender, new_row, old_row, new_col_index) {\n    var mygrid = sender;\n    valueEditFrm(mygrid, new_row, new_col_index);\n}\n\nfunction valueEditFrm(grid, rowId, cellInd) {\n    if(cellInd == \"4\" || cellInd == \"5\") {\n        var mygrid = grid;\n        var win = new Ext.Window({\n            title: \"参数值代码编辑\",\n            modal: true,\n            maximized: false,\n            height: 400,\n            width: 500,\n            maximizable: true,\n            resizable: true,\n            bodyStyle: \"background-color:#fff\",\n            closeAction: 'close'\n\n        })\n        win.editor = new vmd.comp.Ace({\n            language: 'javascript'\n        })\n        win.add(win.editor);\n        //关闭\n        win.hidefn = function() {\n            var value = win.editor.getValue()\n            mygrid.cells(rowId, cellInd).setValue(value)\n            Ext.getDoc().select('.dhx_textarea', true).hide()\n        }\n        win.on('hide', win.hidefn);\n        win.editor.value = mygrid.cells(rowId, cellInd).getValue();\n        win.show();\n        Ext.defer(function() {\n            win.editor.focus();\n        }, 100)\n    }\n}\n\nfunction hwTree_Check(sender, id, state) {\n    var mytree = hwTree;\n    mytree.selectItem(id, true);\n    mytree.setSubChecked(id, true)\n}","vmdcss":"","vmdprops":"\"\"","type":"module","vmdresource":"{\"components\":[{\"cid\":\"vmdrescsss\",\"layoutConfig\":{},\"userConfig\":{}},{\"cid\":\"vmdresjss\",\"layoutConfig\":{},\"userConfig\":{}},{\"cid\":\"vmdresimgs\",\"layoutConfig\":{},\"userConfig\":{}}]}"}