{"vmdversion":"vmd2.0.6.200119","vmdlayout":"{\"components\":[{\"cid\":\"viewport\",\"id\":\"MainViewport\",\"layoutConfig\":{},\"userConfig\":{\"layout\":\"border\"},\"cn\":[{\"cid\":\"container\",\"id\":\"div1\",\"layoutConfig\":{},\"userConfig\":{\"region\":\"north\",\"height\":31,\"layout\":\"absolute\"},\"cn\":[{\"cid\":\"checkbox\",\"id\":\"hwCheckbox\",\"layoutConfig\":{},\"userConfig\":{\"x\":20,\"y\":5,\"boxLabel\":\"全选\",\"style\":\"color: #5EA0FF;\",\"check\":\"hwCheckbox_check\",\"checked\":true}},{\"cid\":\"vmdButton\",\"id\":\"button2\",\"layoutConfig\":{},\"userConfig\":{\"x\":80,\"y\":5,\"type\":\"text\",\"text\":\"只选分类\",\"click\":\"button2_click\"}}]},{\"cid\":\"container\",\"id\":\"div\",\"layoutConfig\":{},\"userConfig\":{\"region\":\"center\",\"layout\":\"fit\"},\"cn\":[{\"cid\":\"vmdTreeEx\",\"id\":\"tree\",\"layoutConfig\":{},\"userConfig\":{\"x\":20,\"y\":20,\"checkBox\":true,\"store\":\"treestore\",\"parentField\":\"parent_id\",\"valueField\":\"id\",\"textField\":\"name\",\"loadType\":\"全部加载\",\"rootValue\":\"0\",\"rootText\":\"协同开发\",\"cascading\":true,\"nodeMarkFiled\":\"type\",\"folderValue\":\"category\",\"leafValue\":\"module\",\"rootImg\":\"/system/modules/eQ9ULgcVb1/img/server5.png\",\"folderImg\":\"/system/modules/eQ9ULgcVb1/img/folderClosed.gif\",\"leafImg\":\"/system/modules/eQ9ULgcVb1/img/model.png\",\"afterBindData\":\"tree_afterBindData\",\"beforerender\":\"tree_beforerender\",\"beforeNodeExpand\":\"tree_beforeNodeExpand\",\"afterNodeExpand\":\"tree_afterNodeExpand\"}}]},{\"cid\":\"container\",\"id\":\"div2\",\"layoutConfig\":{\"align\":\"middle\",\"pack\":\"center\"},\"userConfig\":{\"region\":\"south\",\"layout\":\"hbox\"},\"cn\":[{\"cid\":\"vmdButton\",\"id\":\"button\",\"layoutConfig\":{},\"userConfig\":{\"margins\":\"10\",\"text\":\"导入\",\"type\":\"info\",\"click\":\"button_click\"}},{\"cid\":\"vmdButton\",\"id\":\"button1\",\"layoutConfig\":{},\"userConfig\":{\"margins\":\"10\",\"text\":\"取消\",\"click\":\"button1_click\"}}]}]},{\"cid\":\"vmddataset\",\"id\":\"数据\",\"layoutConfig\":{},\"userConfig\":{}},{\"cid\":\"vmdvariable\",\"id\":\"变量\",\"layoutConfig\":{},\"userConfig\":{}},{\"cid\":\"vmdsubviewport\",\"id\":\"SubView_Window\",\"layoutConfig\":{},\"userConfig\":{}}]}","vmdevents":"var modulesCheckInfos = {};\nif (parent.modulesCheckInfos)\n    modulesCheckInfos = parent.modulesCheckInfos;\nvar hwproject_Name = modulesCheckInfos.proName;\nvar hwproject_Id = modulesCheckInfos.project_id;\nvar treestore;\n\nfunction hwCheckbox_check(sender, checked) {\n    var rootnode = tree.getRootNode();\n    if (checked == true) {\n        tree.setNodeCheckById(0, true); //设置根节点 被勾中\n        for (var i = 0; i < rootnode.childNodes.length; i++) {\n            var c_type = rootnode.childNodes[i].nodeDataJson.c_type;\n            if (c_type == \"3\" || c_type == \"4\") {\n                tree.setNodeCheckById(rootnode.childNodes[i].id, true);\n                if (rootnode.childNodes[i].childNodes.length > 0) {\n                    findchildnode(rootnode.childNodes[i]);\n                }\n            }\n        }\n    } else {\n        tree.setNodeCheckById(0, false); //设置根节点 不被勾中\n        for (var i = 0; i < rootnode.childNodes.length; i++) {\n            tree.setNodeCheckById(rootnode.childNodes[i].id, false);\n            if (rootnode.childNodes[i].childNodes.length > 0) {\n                findchildnode(rootnode.childNodes[i]);\n            }\n        }\n    }\n}\n//遍历树形子节点\nfunction findchildnode(roonodes) { //树形全勾中\n    var childnodes = roonodes.childNodes;\n    for (var i = 0; i < childnodes.length; i++) { // 从节点中取出子节点依次遍历\n        var c_type = childnodes[i].nodeDataJson.c_type;\n        if (c_type == \"3\" || c_type == \"4\") {\n            tree.setNodeCheckById(childnodes[i].id, hwCheckbox.checked);\n            if (childnodes[i].childNodes.length > 0) {\n                findchildnode(childnodes[i]); // 如果存在子节点 递归\n            }\n        }\n    }\n}\n\nfunction button2_click(sender, e) {\n    hwCheckbox.setValue(false); // 全选不勾中\n    tree.setNodeCheckById(0, false); //设置根节点 不被勾中\n    var rootnode = tree.getRootNode();\n    category_findchildnode(rootnode);\n}\n//只选择分类按钮(遍历树形子节点)\nfunction category_findchildnode(roonodes) { //树形全勾中\n    var childnodes = roonodes.childNodes;\n    for (var i = 0; i < childnodes.length; i++) { // 从节点中取出子节点依次遍历\n        if (childnodes[i].childNodes.length > 0) {\n            tree.setNodeCheckById(childnodes[i].id, true);\n            category_findchildnode(childnodes[i]); // 如果存在子节点 递归\n        } else {\n            if (childnodes[i].nodeDataJson.type == 'category') {\n                tree.setNodeCheckById(childnodes[i].id, true);\n            } else\n                tree.setNodeCheckById(childnodes[i].id, false);\n        }\n    }\n}\n\nfunction tree_afterBindData(sender) {\n    tree.getRootNode().setText(modulesCheckInfos.proName);\n    //树形全选\n    var rootnode = tree.getRootNode();\n    if (hwCheckbox.checked === true) {\n        tree.setNodeCheckById(0, true); //设置根节点 被勾中\n        for (var i = 0; i < rootnode.childNodes.length; i++) {\n            var c_type = rootnode.childNodes[i].nodeDataJson.c_type;\n            if (c_type == \"3\" || c_type == \"4\") {\n                tree.setNodeCheckById(rootnode.childNodes[i].id, true);\n                if (rootnode.childNodes[i].childNodes.length > 0) {\n                    findchildnode(rootnode.childNodes[i]);\n                }\n            }\n        }\n    }\n    tree.expandAll();\n   // rootnode.expand();\n}\n\nvar myMask;\n\nfunction button_click(sender, e) {\n\n    Ext.Msg.confirm(\"提示\", \"导入后，相同的模块将会被覆盖，无法恢复。确定要导入模块吗？\", function(type) {\n        if (type == \"yes\") {\n            myMask = new Ext.LoadMask(document.body, {\n                msg: \"正在导入,请稍后...\",\n                msgCls: 'z-index:10000;'\n            });\n            myMask.show();\n            //处理导入\n            var impInfos = getSelNodeIDs();\n            vmd.ajax({\n                url: \"/expandimp/api/ModuleImp\",\n                type: 'post',\n                timeout: 120000,\n                //dataType:\"text\",\n                //contentType: 'application/json;charset=UTF-8',\n                data: {\n                    modulesId: impInfos.ModulesId,\n                    categorysId: impInfos.CategorysId,\n                    modulesInfo: impInfos.ModulesInfo,\n                    projectId: modulesCheckInfos.project_id,\n                    proName: modulesCheckInfos.proName,\n                    impPath: modulesCheckInfos.path,\n                    impUser: modulesCheckInfos.impUser,\n                    impDate: modulesCheckInfos.impUser,\n                    creatPro: modulesCheckInfos.creatPro\n                }, //jsonp: \"callbackparam\", \n                success: function(result) {\n                    myMask.hide();\n                    if (result.type == \"success\") {\n                        Ext.Msg.alert(\"提示\", \"导入成功！\", function() {\n                            if (parent && parent.modulesCheckWin)\n                                parent.modulesCheckWin.close();\n                        });\n                    } else\n                        Ext.Msg.alert(\"提示\", result.msg);\n                },\n                error: function(msg) {\n                    myMask.hide();\n                    console.log(msg.msg);\n                }\n            });\n        }\n    });\n\n}\nvar cnodeIds = [];\nvar mnodeIds = [];\nvar mnodeInfo = [];\n\nfunction getNodeId(node) {\n    for (var i = 0; i < node.childNodes.length; i++) {\n        var cnode = node.childNodes[i];\n        if (cnode.attributes.checked) {\n            if (cnode.childNodes.length > 0) {\n                getNodeId(cnode);\n                cnodeIds.push(cnode.id);\n            } else {\n                if (cnode.nodeDataJson.type == 'category') {\n                    cnodeIds.push(cnode.id);\n                } else {\n                    mnodeInfo.push({\n                        id: cnode.id,\n                        path: cnode.getPath().replace('/0/', '/' + hwproject_Id + '/')\n                    });\n                    mnodeIds.push(cnode.id);\n                }\n            }\n        }\n    }\n}\n//获取选中的节点信息\nfunction getSelNodeIDs() {\n    cnodeIds = [];\n    mnodeIds = [];\n    mnodeInfo = [];\n    var rootnode = tree.getRootNode();\n    getNodeId(rootnode);\n    var ExpModulesInfo = {};\n    ExpModulesInfo.ModulesId = mnodeIds;\n    ExpModulesInfo.ModulesInfo = mnodeInfo;\n    ExpModulesInfo.CategorysId = cnodeIds;\n    ExpModulesInfo.ProjectId = hwproject_Id;\n    ExpModulesInfo.ProjectName = hwproject_Name;\n    return ExpModulesInfo\n}\n\nfunction button1_click(sender, e) {\n    if (parent && parent.modulesCheckWin)\n        parent.modulesCheckWin.close()\n}\n\nfunction tree_beforerender(sender) {\n    // 创建数据集。 \n    tree.rootText = modulesCheckInfos.proName;\n    var treeData = modulesCheckInfos.checkInfo;\n    treestore = new vmd.data.Store({\n        data: treeData,\n        fields: ['id', 'name', 'parent_id', 'type', 'c_type']\n    })\n    tree.store = treestore;\n}\n\nfunction tree_beforeNodeExpand(sender, node, deep, anim) {}\n\nfunction tree_afterNodeExpand(sender, node) {\n    if (node.childNodes.length > 0) {\n        for (var i = 0; i < node.childNodes.length; i++) {\n            if (node.childNodes[i].nodeDataJson.c_type == '1')\n                node.childNodes[i].ui.addClass(\"nodecolor1\")\n            if (node.childNodes[i].nodeDataJson.c_type == '2')\n                node.childNodes[i].ui.addClass(\"nodecolor2\")\n            if (node.childNodes[i].nodeDataJson.c_type == '3')\n                node.childNodes[i].ui.addClass(\"nodecolor3\")\n            if (node.childNodes[i].nodeDataJson.c_type == '4')\n                node.childNodes[i].ui.addClass(\"nodecolor4\")\n            if (node.childNodes[i].nodeDataJson.c_type == '5')\n                node.childNodes[i].ui.addClass(\"nodecolor5\")\n        }\n    }\n}","vmdcss":".x-form-cb-label {\n    color: #5EA0FF;\n}\n\n.nodecolor1 a span {\n    color: red;\n    font-weight:bold\n}\n\n.nodecolor2 a span  {\n    color: blue;\n    font-weight:bold\n}\n\n.nodecolor3  a span  {\n    color: green;\n    font-weight:bold\n}\n\n.nodecolor4 a span {\n    color: black;\n    font-weight:bold\n}\n\n.nodecolor5 a span {\n    color: orangered;\n    font-weight:bold\n}\n","vmdprops":"\"\"","type":"module","vmdresource":"{\"components\":[{\"cid\":\"vmdrescsss\",\"layoutConfig\":{},\"userConfig\":{}},{\"cid\":\"vmdresjss\",\"layoutConfig\":{},\"userConfig\":{},\"cn\":[{\"cid\":\"resjs\",\"id\":\"project.config.js\",\"layoutConfig\":{},\"userConfig\":{}}]},{\"cid\":\"vmdresimgs\",\"layoutConfig\":{},\"userConfig\":{}}]}"}