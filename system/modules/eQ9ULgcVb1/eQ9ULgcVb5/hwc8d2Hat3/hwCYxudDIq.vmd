{"vmdversion":"2.0.3","vmdlayout":"{\"components\":[{\"cid\":\"viewport\",\"id\":\"MyViewport\",\"layoutConfig\":{},\"userConfig\":{\"layout\":\"border\",\"afterrender\":\"MyViewport_afterrender\",\"beforerender\":\"MyViewport_beforerender\"},\"cn\":[{\"cid\":\"panel\",\"id\":\"MyPanel_head\",\"layoutConfig\":{},\"userConfig\":{\"x\":0,\"y\":0,\"height\":60,\"layout\":\"border\",\"bodyStyle\":\"background-color:skyblue;\",\"region\":\"north\",\"id\":\"MyPanel_head\",\"header\":false},\"cn\":[{\"cid\":\"panel\",\"id\":\"MyPanel_logo\",\"layoutConfig\":{},\"userConfig\":{\"region\":\"west\",\"layout\":\"border\",\"width\":500,\"maskDisabled\":true,\"border\":false,\"bodyStyle\":\"background-color:#1e7fff;\",\"id\":\"MyPanel_logo\",\"header\":false},\"cn\":[{\"cid\":\"container\",\"id\":\"MyC_Logoimg\",\"layoutConfig\":{},\"userConfig\":{\"width\":58,\"height\":30,\"style\":\"background: url('/system/img/main/logo1.png')no-repeat center;    margin-left: 20px;\",\"x\":0,\"y\":0,\"region\":\"west\",\"id\":\"MyC_Logoimg\"}},{\"cid\":\"label\",\"id\":\"MyLb_name\",\"layoutConfig\":{},\"userConfig\":{\"x\":70,\"y\":10,\"text\":\"VMD2.0可视化定制工具\",\"style\":\"font-size: 26px;    color: #ffffff;    margin-left: 35px;    margin-top: 4px;\",\"region\":\"center\",\"split\":false,\"cls\":\"lineHeight200\",\"id\":\"MyLb_name\"}}]},{\"cid\":\"panel\",\"id\":\"MyP_Htool\",\"layoutConfig\":{},\"userConfig\":{\"region\":\"east\",\"width\":420,\"layout\":\"absolute\",\"border\":false,\"style\":\"background-color:skyblue;\",\"bodyStyle\":\"background-color:#1e7fff;\",\"id\":\"MyP_Htool\",\"header\":false,\"afterrender\":\"MyP_Htool_afterrender\"},\"cn\":[{\"cid\":\"container\",\"id\":\"MyC_zy\",\"layoutConfig\":{},\"userConfig\":{\"x\":30,\"y\":25,\"width\":20,\"id\":\"MyC_zy\",\"style\":\"background-image: url(/system/img/main/zy.png);\",\"height\":20,\"pageX\":\"\",\"pageY\":\"\",\"afterrender\":\"MyC_zy_afterrender\"}},{\"cid\":\"container\",\"id\":\"MyC_hjbl\",\"layoutConfig\":{},\"userConfig\":{\"x\":120,\"y\":25,\"width\":20,\"style\":\"background-image: url(/system/img/main/hjbl.png);\",\"height\":20,\"id\":\"MyC_hjbl\"}},{\"cid\":\"container\",\"id\":\"MyC_grxx\",\"layoutConfig\":{},\"userConfig\":{\"x\":230,\"y\":25,\"width\":20,\"style\":\"background-image: url(/system/img/main/grxx.png);\",\"height\":20,\"id\":\"MyC_grxx\"}},{\"cid\":\"container\",\"id\":\"MyC_tc\",\"layoutConfig\":{},\"userConfig\":{\"x\":335,\"y\":25,\"width\":20,\"style\":\"background-image: url(/system/img/main/tc.png);\",\"height\":20,\"id\":\"MyC_tc\",\"afterrender\":\"MyC_tc_afterrender\"}},{\"cid\":\"label\",\"id\":\"MyLb_zy\",\"layoutConfig\":{},\"userConfig\":{\"x\":60,\"y\":27,\"text\":\"资源\",\"id\":\"MyLb_zy\",\"style\":\"color: white;    font-size: 12px;    color: #ffffff;\"}},{\"cid\":\"label\",\"id\":\"MyLb_hjbl\",\"layoutConfig\":{},\"userConfig\":{\"x\":150,\"y\":27,\"text\":\"环境变量\",\"id\":\"MyLb_hjbl\",\"style\":\"color: white;    font-size: 12px;    color: #ffffff;\"}},{\"cid\":\"label\",\"id\":\"MyLb_grxx\",\"layoutConfig\":{},\"userConfig\":{\"x\":260,\"y\":27,\"text\":\"个人信息\",\"id\":\"MyLb_grxx\",\"style\":\"color: white;    font-size: 12px;    color: #ffffff;\",\"width\":60}},{\"cid\":\"vmdButton\",\"id\":\"button\",\"layoutConfig\":{},\"userConfig\":{\"x\":345,\"y\":22,\"type\":\"text\",\"width\":60,\"style\":\"font-size: 12px;    color: #ffffff;\",\"text\":\"退出\",\"click\":\"button_click\"}}]},{\"cid\":\"panel\",\"id\":\"MyPanel7\",\"layoutConfig\":{},\"userConfig\":{\"region\":\"center\",\"border\":false,\"style\":\"background-color: #1e7fff;\",\"bodyStyle\":\"background-color:#1e7fff;\",\"header\":false}}]},{\"cid\":\"panel\",\"id\":\"MyP_info\",\"layoutConfig\":{},\"userConfig\":{\"x\":0,\"y\":60,\"height\":640,\"layout\":\"border\",\"region\":\"center\",\"id\":\"MyP_info\",\"header\":false},\"cn\":[{\"cid\":\"panel\",\"id\":\"MyP_ModelTree\",\"layoutConfig\":{},\"userConfig\":{\"width\":220,\"height\":639,\"layout\":\"border\",\"x\":0,\"y\":0,\"region\":\"west\",\"id\":\"MyP_ModelTree\",\"header\":false,\"style\":\"background-color: white;\",\"bodyStyle\":\" background-color: white;\",\"split\":true,\"floatable\":false,\"collapseMode\":\"mini\",\"collapsible\":true},\"cn\":[{\"cid\":\"panel\",\"id\":\"MyPanel\",\"layoutConfig\":{},\"userConfig\":{\"x\":60,\"y\":110,\"border\":false,\"header\":false,\"layout\":\"border\",\"width\":220,\"height\":22,\"region\":\"north\",\"style\":\"margin-left: 5px;    margin-top: 5px;    padding-right: 10px;\"},\"cn\":[{\"cid\":\"textfield\",\"id\":\"MyF_searchtext\",\"layoutConfig\":{},\"userConfig\":{\"x\":0,\"y\":0,\"width\":200,\"id\":\"MyF_searchtext\",\"region\":\"center\",\"style\":\"\"}},{\"cid\":\"vmdButton\",\"id\":\"btn_search\",\"layoutConfig\":{},\"userConfig\":{\"x\":190,\"y\":0,\"size\":\"mini\",\"icon\":\"search\",\"text\":\"\",\"width\":30,\"id\":\"btn_search\",\"region\":\"east\",\"style\":\"\",\"margins\":\"\"}}]},{\"cid\":\"panel\",\"id\":\"MyPanel1\",\"layoutConfig\":{},\"userConfig\":{\"x\":70,\"y\":130,\"height\":300,\"border\":false,\"header\":false,\"region\":\"center\",\"layout\":\"fit\",\"style\":\"margin-left: 5px;    margin-top: 10px;    padding-right: 5px;    padding-bottom:  10px;\"},\"cn\":[{\"cid\":\"vmdTree\",\"id\":\"hwTree\",\"layoutConfig\":{},\"userConfig\":{\"x\":0,\"y\":0,\"afterrender\":\"hwTree_afterrender\",\"height\":580,\"width\":220,\"onOpenEnd\":\"hwTree_onOpenEnd\",\"nodeClick\":\"hwTree_nodeClick\",\"region\":\"center\",\"onOpenStart\":\"hwTree_onOpenStart\",\"onDblClick\":\"hwTree_onDblClick\",\"doubleClick\":\"\",\"nodeSelected\":\"\"}}]}]},{\"cid\":\"panel\",\"id\":\"MyP_jcxx\",\"layoutConfig\":{},\"userConfig\":{\"width\":900,\"x\":220,\"y\":0,\"height\":640,\"layout\":\"absolute\",\"region\":\"center\",\"id\":\"MyP_jcxx\",\"header\":false,\"beforerender\":\"MyP_jcxx_beforerender\"}}]}]},{\"cid\":\"vmddataset\",\"id\":\"数据集\",\"layoutConfig\":{},\"userConfig\":{}},{\"cid\":\"vmdvariable\",\"id\":\"变量\",\"layoutConfig\":{},\"userConfig\":{}}]}","vmdevents":"//上次点击的节点\nvar bselNodeId = \"\";\n//获取传递的设计模式\nvar allowedDesigner = false;\n\n//进度提示\nvar myMask = new Ext.LoadMask(Ext.getBody(), {\n    msg: \"数据加载中,请稍后...\",\n    msgCls: 'z-index:10000;'\n});\n\n//初始化数据\nfunction hwTree_afterrender(sender) {\n    myMask = new Ext.LoadMask(Ext.getCmp(\"hwTree\").el, {\n        msg: \"数据加载中,请稍后...\",\n        msgCls: 'z-index:10000;'\n    });\n    myMask.show();\n    var mytree = hwTree;\n    var firstNode = \"\";\n    mytree.deleteChildItems(0);\n    mytree.loadJSONObject({\n        id: 0,\n        text: \"我的项目\",\n        item: []\n    });\n    mytree.itemObj = {};\n    mytree.newnode = false;\n    hwDas.ajax({\n        das: {\n            idedas: true\n        },\n        url: \"CDEServcie/project/info\",\n        type: 'get',\n        timeout: 5000,\n        params: {},\n        success: function(result) {\n            var datajson = result.data[0].datas;\n            var treeDataJson = [];\n            for(var i = 0; i < datajson.length; i++) {\n                //通过vmddesigner来判断当前登录用户是否有操作系统办公的权限\n                if(!allowedDesigner && datajson[i].id == \"eQ9ULgcVb1\") {\n                    continue\n                } else {\n                    mytree.insertNewChild(0, datajson[i].id, datajson[i].name);\n                    mytree.setItemImage2(datajson[i].id, \"tree/projectclose.png\", \"tree/projectopen.png\", \"tree/projectclose.png\");\n                    mytree.insertNewChild(datajson[i].id, datajson[i].id + \"-0\", \"\");\n                    mytree.closeItem(datajson[i].id);\n                    var treenode = mytree.item(datajson[i].id);\n                    treenode.path = \"/\" + datajson[i].id;\n                    if(treenode) {\n                        treenode.isProject = true;\n                        treenode.createuser = datajson[i].row_created_by;\n                        treenode.createtime = datajson[i].row_created_date;\n                        treenode.changetime = datajson[i].row_changed_date;\n                        treenode.changeuser = datajson[i].row_changed_by;\n                        treenode.code = datajson[i].code;\n                        treenode.loadChild = false;\n                    }\n                    mytree.itemObj[datajson[i].id] = treenode;\n                    if(firstNode == \"\")\n                        firstNode = datajson[i].id;\n                }\n            }\n            //默认选中首项 \n            if(firstNode != \"\")\n                mytree.selectItem(firstNode);\n\n            myMask.hide();\n        },\n        error: function(msg) {\n            myMask.hide();\n            Ext.Msg.alert(\"提示\", \"获取模块信息失败\", function() {})\n        }\n    })\n\n\n\n\n    //绑定右键菜单\n    var menu = new dhtmlXMenuObject();\n    menu.renderAsContextMenu();\n    menu.attachEvent(\"onClick\", onMenuClick);\n    menu.addNewChild(menu.topId, 0, \"newPro\", \"新建项目\", false);\n    menu.addNewChild(menu.topId, 1, \"newFord\", \"新建分类\", false);\n    menu.addNewChild(menu.topId, 2, \"newMode\", \"新建模块\", false);\n    menu.addNewChild(menu.topId, 3, \"copy\", \"复制\", false);\n    menu.addNewChild(menu.topId, 4, \"cut\", \"剪切\", false);\n    menu.addNewChild(menu.topId, 5, \"paste\", \"粘帖\", false);\n    menu.addNewChild(menu.topId, 6, \"delete\", \"删除\", false);\n    mytree.enableDragAndDrop(\"temporary_disabled\");\n    mytree.enableContextMenu(menu);\n\n    mytree.attachEvent(\"onBeforeContextMenu\", function(itemId) {\n        debugger\n        var mytree = hwTree;\n        var selId = mytree.getSelectedItemId();\n        var selnode = mytree.itemObj[selId];\n        if(selnode.isProject) {\n            menu.showItem('newPro');\n            menu.showItem('newFord');\n            menu.showItem('newMode');\n            menu.hideItem('copy');\n            menu.hideItem('cut');\n            menu.showItem('paste');\n            menu.showItem('delete');\n        } else if(selnode.isFord) {\n            menu.hideItem('newPro');\n            menu.showItem('newFord');\n            menu.showItem('newMode');\n            menu.hideItem('copy');\n            menu.hideItem('cut');\n            menu.showItem('paste');\n            menu.showItem('delete');\n        } else if(selnode.isModel) {\n            menu.hideItem('newPro');\n            menu.hideItem('newFord');\n            menu.hideItem('newMode');\n            menu.showItem('copy');\n            menu.showItem('cut');\n            menu.hideItem('paste');\n            menu.showItem('delete');\n        }\n        return true\n    })\n\n    //绑定右键事件 设置右键选中节点\n    mytree.attachEvent('onRightClick', function(id) {\n        mytree.selectItem(id);\n    })\n}\n\nfunction hwTree_onOpenEnd(sender, id) {\n    myMask.show();\n    var proId = id;\n    var mytree = hwTree;\n    mytree.newnode = false;\n    var hasChild = mytree.hasChildren(proId);\n    var selnode = mytree.itemObj[proId];\n    var selnodepath = selnode.path;\n    var projectId = \"\";\n    var childParentId = \"0\";\n    if(selnode.isProject) {\n        projectId = proId;\n        childParentId = \"0\";\n    } else {\n        projectId = selnode.projectId;\n        childParentId = proId\n    }\n    if(!selnode.loadChild && !selnode.isModel) {\n        hwDas.ajax({\n            das: {\n                idedas: true\n            },\n            url: \"CDEServcie/module/category\",\n            type: 'get',\n            timeout: 5000,\n            params: {\n                project_id: projectId,\n                parent_id: childParentId\n            },\n            success: function(result) {\n                var datajson = result.data[0].datas;\n                var treeDataJson = [];\n                for(var i = 0; i < datajson.length; i++) {\n                    mytree.insertNewChild(proId, datajson[i].id, datajson[i].name);\n                    mytree.setItemImage2(datajson[i].id, \"tree/folderClosed.gif\", \"tree/folderOpen.gif\", \"tree/folderClosed.gif\")\n                    mytree.insertNewChild(datajson[i].id, datajson[i].id + \"-0\", \"\");\n                    mytree.closeItem(datajson[i].id);\n                    var treenode = mytree.item(datajson[i].id);\n                    treenode.path = selnodepath + \"/\" + datajson[i].id;\n                    treenode.projectId = projectId;\n                    if(treenode) {\n                        treenode.isFord = true;\n                        treenode.loadChild = false;\n                    }\n                    mytree.itemObj[datajson[i].id] = treenode;\n                }\n                myMask.hide();\n            },\n            error: function(msg) {\n                myMask.hide();\n                Ext.Msg.alert(\"提示\", \"获取模块信息失败\", function() {})\n            }\n        })\n        if(!selnode.loadChild) {\n            mytree.deleteItem(id + \"-0\", false);\n        }\n        selnode.loadChild = true;\n        // if(selnode.isFord) {\n        hwDas.ajax({\n                das: {\n                    idedas: true\n                },\n                url: \"CDEServcie/module/info\",\n                type: 'get',\n                timeout: 5000,\n                params: {\n                    category_id: childParentId,\n                    project_id: projectId\n                },\n                success: function(result) {\n                    var datajson = result.data[0].datas;\n                    var treeDataJson = [];\n                    for(var i = 0; i < datajson.length; i++) {\n                        mytree.insertNewChild(proId, datajson[i].id, datajson[i].name);\n                        mytree.setItemImage2(datajson[i].id, \"tree/model.png\", \"tree/model.png\", \"tree/model.png\")\n                        var treenode = mytree.item(datajson[i].id);\n                        treenode.path = selnodepath + \"/\" + datajson[i].id;\n                        treenode.projectId = projectId;\n                        if(treenode) {\n                            treenode.isModel = true;\n                            treenode.createuser = datajson[i].row_created_by;\n                            treenode.createtime = datajson[i].row_created_date;\n                            treenode.changetime = datajson[i].row_changed_date;\n                            treenode.changeuser = datajson[i].row_changed_by;\n                            treenode.remark = datajson[i].remark;\n                            treenode.code = datajson[i].code;\n                        }\n                        mytree.itemObj[datajson[i].id] = treenode;\n                    }\n                    //数据操作  \n                    myMask.hide();\n                },\n                error: function(msg) {\n                    myMask.hide();\n                    Ext.Msg.alert(\"提示\", \"获取模块信息失败\")\n                }\n            })\n            //}\n    } else {\n        myMask.hide();\n    }\n}\n//点击树节点操作\nfunction hwTree_nodeClick(sender, id) {\n    myMask.show();\n    var proId = id;\n    var mytree = hwTree;\n    mytree.newnode = false;\n    var hasChild = mytree.hasChildren(proId);\n    var selnode = mytree.itemObj[proId];\n    var selnodepath = selnode.path;\n    var projectId = \"\";\n    var childParentId = \"0\";\n    if(bselNodeId != id) {\n        if(selnode.isModel) {\n            document.getElementById(\"iframe_page\").src = '/modules/eQ9ULgcVb1/eQ9ULgcVb5/hwa99a3307.html';\n            //MyP_jcxx.body.update(\"<\" + \"iframe \" + \" src='/modules/eQ9ULgcVb1/eQ9ULgcVb5/hwa99a3307.html' \" + \" width=100% height=100% frameborder=0  \" + \">\" + \"sdsds\" + \"<\" + \"/\" + \"iframe\" + \">\");\n        } else if(selnode.isProject) {\n            projectId = proId;\n            childParentId = \"0\";\n            document.getElementById(\"iframe_page\").src = '/modules/eQ9ULgcVb1/eQ9ULgcVb5/hwc6d63bc6.html';\n            //MyP_jcxx.body.update(\"<\" + \"iframe \" + \" src='/modules/eQ9ULgcVb1/eQ9ULgcVb5/hwc6d63bc6.html' \" + \" width=100% height=100% frameborder=0  \" + \">\" + \"sdsds\" + \"<\" + \"/\" + \"iframe\" + \">\");\n        } else {\n            document.getElementById(\"iframe_page\").src = '/modules/eQ9ULgcVb1/eQ9ULgcVb5/hw03cb4931.html';\n            //MyP_jcxx.body.update(\"<\" + \"iframe \" + \" src='/modules/eQ9ULgcVb1/eQ9ULgcVb5/hw03cb4931.html' \" + \" width=100% height=100% frameborder=0  \" + \">\" + \"sdsds\" + \"<\" + \"/\" + \"iframe\" + \">\");\n            projectId = selnode.projectId;\n            childParentId = proId\n        }\n    }\n    bselNodeId = id;\n    myMask.hide();\n}\n//创建分类按钮操作\nfunction creatFord() {\n    var addford = function(fordname) {\n        var mytree = hwTree;\n        var selId = mytree.getSelectedItemId();\n        var selnode = mytree.itemObj[selId];\n        var selnodepath = selnode.path;\n        var parentId;\n        var projectId;\n        var nodename = fordname;\n        var newnodeid = newGuid(10);\n        var newcode = newGuid(10);\n        var xh = 10;\n        if(selnode.isProject) {\n            parentId = \"0\";\n            projectId = selId;\n        } else\n        if(selnode.isModel) {\n            return;\n        } else if(selnode.isFord) {\n            parentId = selId;\n            projectId = selnode.projectId;\n        }\n        hwDas.ajax({\n            das: {\n                idedas: true\n            },\n            url: \"CDEServcie/module/category\",\n            type: 'post',\n            timeout: 5000,\n            params: {\n                parent_id: parentId,\n                name: nodename,\n                code: newcode,\n                project_id: projectId,\n                id: newnodeid,\n                xh: xh\n            },\n            data: [{\n                parent_id: parentId,\n                name: nodename,\n                code: newcode,\n                project_id: projectId,\n                id: newnodeid,\n                xh: xh\n            }],\n            success: function(result) {\n                mytree.insertNewChild(selId, newnodeid, nodename);\n                mytree.setItemImage2(newnodeid, \"tree/folderClosed.gif\", \"tree/folderOpen.gif\", \"tree/folderClosed.gif\")\n                var treenode = mytree.item(newnodeid);\n                treenode.path = selnodepath + \"/\" + newnodeid;\n                treenode.projectId = projectId;\n                if(treenode) {\n                    treenode.isFord = true;\n                }\n                mytree.itemObj[newnodeid] = treenode;\n            },\n            error: function(msg) {\n                Ext.Msg.alert(\"提示\", \"新建目录失败\")\n            }\n        })\n    }\n    var fordname = new Ext.MyFordWin(addford);\n    fordname.show();\n}\n\n//删除目录 模块信息\nfunction button1_click(sender) {\n    var mytree = hwTree;\n    var selId = mytree.getSelectedItemId();\n    var selnode = mytree.itemObj[selId];\n    var haschild = mytree.hasChildren(selId);\n\n    if(selId == \"5b8e5abdec\" || selId == \"eQ9ULgcVc5\" || selId == \"eQ9ULgcVb5\" || selId == \"hwa99a3307\" || selId == \"hwc6d63bc6\") {\n        Ext.Msg.alert(\"提示\", \"该模块禁止删除！\")\n        return\n    }\n\n    if(mytree.itemObj[selId].projectId == \"eQ9ULgcVb1\") {\n        Ext.Msg.confirm(\"提示\", \"删除的模块或项目为协同办公，请谨慎操作\", function(type) {\n            if(type == \"yes\") {\n                deleteNode();\n            } else\n                return;\n        })\n        return;\n    }\n    deleteNode();\n}\n\nfunction deleteNode() {\n    var mytree = hwTree;\n    var selId = mytree.getSelectedItemId();\n    var selnode = mytree.itemObj[selId];\n    var haschild = mytree.hasChildren(selId);\n\n    //删除文件夹\n    if(selnode.isProject) {\n        if(haschild > 0) {\n            Ext.Msg.alert(\"提示\", \"存在子目录或模块，请删除子目录或子模块后再删除该项目！\")\n            return\n        }\n        Ext.Msg.confirm(\"提示\", \"删除项目后，项目下的所有文件都将删除。确认要删除该项目！\", function(type) {\n            if(type == \"yes\") {\n                hwDas.ajax({\n                    das: {\n                        idedas: true\n                    },\n                    url: \"CDEServcie/project/info\",\n                    type: 'delete',\n                    timeout: 5000,\n                    params: {\n                        id: selId\n                    },\n                    success: function(result) {\n                        mytree.deleteItem(selId, true);\n                    },\n                    error: function(msg) {\n                        Ext.Msg.alert(\"提示\", \"删除项目失败\")\n                    }\n                })\n            }\n        })\n        return;\n    }\n    //删除文件夹\n    if(selnode.isFord) {\n        if(haschild > 0) {\n            Ext.Msg.alert(\"提示\", \"存在子目录或模块，请删除子目录或子模块后再删除该目录\")\n            return\n        }\n        Ext.Msg.confirm(\"提示\", \"确认要删除该目录！\", function(type) {\n            if(type == \"yes\") {\n                hwDas.ajax({\n                    das: {\n                        idedas: true\n                    },\n                    url: \"CDEServcie/module/category\",\n                    type: 'delete',\n                    timeout: 5000,\n                    params: {\n                        id: selId\n                    },\n                    success: function(result) {\n                        mytree.deleteItem(selId, true);\n                    },\n                    error: function(msg) {\n                        Ext.Msg.alert(\"提示\", \"删除目录失败\")\n                    }\n                })\n            }\n        })\n        return;\n    }\n    //删除模块\n    if(selnode.isModel) {\n        Ext.Msg.confirm(\"提示\", \"确认要删除该模块？\", function(type) {\n            if(type == \"yes\") {\n                //先删除模块信息\n                var runtype = [];\n                myMask.show();\n                hwDas.ajax({\n                        das: {\n                            idedas: true\n                        },\n                        url: \"CDEServcie/module/info\",\n                        type: 'delete',\n                        timeout: 5000,\n                        params: {\n                            id: selId\n                        },\n                        success: function(result) {\n                            mytree.deleteItem(selId); //, true);\n                            runtype.push(true)\n                            if(runtype.length >= 4)\n                                myMask.hide()\n                        },\n                        error: function(msg) {\n                            runtype.push(false)\n                            if(runtype.length >= 4)\n                                myMask.hide()\n                            Ext.Msg.alert(\"提示\", \"删除模块信息失败\")\n                            return\n                        }\n                    })\n                    //删除模块文件对应关系\n                hwDas.ajax({\n                        das: {\n                            idedas: true\n                        },\n                        url: \"CDEServcie/module/file\",\n                        type: 'delete',\n                        timeout: 5000,\n                        params: {\n                            module_id: selId\n                        },\n                        success: function(result) {\n                            runtype.push(true)\n                            if(runtype.length >= 4)\n                                myMask.hide()\n                        },\n                        error: function(msg) {\n                            runtype.push(false)\n                            if(runtype.length >= 4)\n                                myMask.hide()\n                            Ext.Msg.alert(\"提示\", \"删除模块文件信息失败\")\n                        }\n                    })\n                    //删除vmd文件\n                hwDas.ajax({\n                        das: {\n                            idedas: false\n                        },\n                        url: 'FileService',\n                        type: 'delete',\n                        timeout: 5000,\n                        params: {\n                            FileName: 'modules' + selnode.path + '.vmd'\n                        },\n                        success: function(result) {\n                            runtype.push(true)\n                            if(runtype.length >= 4)\n                                myMask.hide()\n                        },\n                        error: function(msg) {\n                            runtype.push(false)\n                            if(runtype.length >= 4)\n                                myMask.hide()\n                            Ext.Msg.alert(\"提示\", \"删除vmd模块文件失败\")\n                        }\n                    }) //删除html文件\n                hwDas.ajax({\n                    das: {\n                        idedas: false\n                    },\n                    url: 'FileService',\n                    type: 'delete',\n                    timeout: 5000,\n                    params: {\n                        FileName: 'modules' + selnode.path + '.html'\n                    },\n                    success: function(result) {\n                        runtype.push(true)\n                    },\n                    error: function(msg) {\n                        runtype.push(false)\n                        Ext.Msg.alert(\"提示\", \"删除html模块文件失败\")\n                    }\n                })\n            }\n\n        })\n        return;\n    }\n}\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//自定义自定义方法\n\nfunction newGuid(len) {\n    var length = 32;\n    if(len)\n        length = len - 2\n    var guid = \"\";\n    for(var i = 1; i <= length; i++) {\n        var n = Math.floor(Math.random() * 16.0).toString(16);\n        guid += n;\n    }\n    return \"hw\" + guid;\n}\n\n//文件夹名称录入框\nExt.MyFordWin = Ext.extend(Ext.Window, {\n        xtype: \"window\",\n        title: \"文件夹对话框\",\n        width: 300,\n        height: 130,\n        layout: \"form\",\n        bodyStyle: 'padding:15px',\n        labelAlign: \"left\",\n        labelWidth: 40,\n        constructor: function(callback) {\n            this.callback = callback;\n            this.callParent();\n        },\n        initComponent: function() {\n            var me = this;\n            this.fbar = [{\n                text: \"确定\",\n                handler: function() {\n                    me.callback(Ext.getCmp('filename').getValue())\n                    me.close()\n                }\n            }, {\n                text: \"取消\",\n                handler: function() {\n                    me.close()\n                }\n            }];\n\n            this.items = [{\n                id: 'filename',\n                xtype: \"textfield\",\n                fieldLabel: \"名称\",\n                anchor: \"100%\"\n            }]\n            Ext.MyFordWin.superclass.initComponent.call(this);\n        }\n    })\n    //右键菜单事件\nfunction onMenuClick(menuitemId) {\n    if(menuitemId == \"newFord\") {\n        creatFord();\n    } else if(menuitemId == \"newMode\") {\n        hwTree.newnode = true;\n        document.getElementById(\"iframe_page\").src = '/modules/eQ9ULgcVb1/eQ9ULgcVb5/hwa99a3307.html';\n    } else if(menuitemId == \"delete\") {\n        button1_click();\n    } else if(menuitemId == \"newPro\") {\n        hwTree.newnode = true;\n        document.getElementById(\"iframe_page\").src = '/modules/eQ9ULgcVb1/eQ9ULgcVb5/hwc6d63bc6.html';\n    } else if(menuitemId == \"copy\") {\n        // nodeCopy();\n    } else if(menuitemId == \"cut\") {\n        // nodeCut();\n    } else if(menuitemId == \"paste\") {\n        // nodePaste();\n    }\n}\n\n\n///记录赋值或剪切的节点id\nvar copyNodeId = \"\";\nvar cutNodeId = \"\";\n///复制节点\nfunction nodeCopy() {\n    var mytree = hwTree;\n    var selId = mytree.getSelectedItemId();\n    copyNodeId = selId;\n    cutNodeId = \"\";\n}\n\n///剪切节点\nfunction nodeCut() {\n    var mytree = hwTree;\n    var selId = mytree.getSelectedItemId();\n    cutNodeId = selId;\n    copyNodeId = \"\";\n}\n\n//粘帖节点\nfunction nodePaste() {\n    if(copyNodeId == \"\" && cutNodeId == \"\") {\n        //extends.msg.alert(\"无可粘贴的数据\");\n        return;\n    }\n    var mytree = hwTree;\n    var selId = mytree.getSelectedItemId();\n    var selnode = mytree.itemObj[selId];\n    var selnodepath = selnode.path;\n    var category_id;\n    var projectId;\n    var remark = selnode.remark;\n    if(selnode.isProject) {\n        projectId = selId;\n        category_id = \"0\";\n    }\n    if(selnode.isFord) {\n        projectId = selnode.projectId;\n        category_id = selId;\n    }\n    if(copyNodeId != \"\") {\n\n        var copyNode = mytree.itemObj[copyNodeId];\n        var copyFilePath = copyNode.path;\n        var ModeName = copyNode.text;\n        var id = newGuid(10);\n        var newcode = copyNode.code;\n        var row_created_by = Ext.util.Cookies.get('userName');\n        var row_created_date = Ext.Date.dateFormat(new Date(), 'Y-m-d H:i:s');\n        var row_changed_by = Ext.util.Cookies.get('userName');\n        var row_changed_date = Ext.Date.dateFormat(new Date(), 'Y-m-d H:i:s');\n        //保存模块基础信息\n        hwDas.ajax({\n            das: {\n                idedas: true\n            },\n            url: \"CDEServcie/module/info\",\n            type: 'post',\n            timeout: 5000,\n            params: {},\n            data: [{\n                id: id,\n                code: newcode,\n                type: \"0\",\n                name: ModeName,\n                remark: remark,\n                category_id: category_id,\n                project_id: projectId,\n                row_created_by: row_created_by,\n                row_created_date: row_created_date,\n                row_changed_by: row_changed_by,\n                row_changed_date: row_changed_date\n            }],\n            success: function(result) {\n                mytree.insertNewChild(selId, id, ModeName);\n                mytree.setItemImage2(id, \"tree/model.png\", \"tree/model.png\", \"tree/model.png\")\n                var treenode = mytree.item(id);\n                treenode.path = selnodepath + \"/\" + id;\n                treenode.projectId = Project_id;\n                if(treenode) {\n                    treenode.isModel = true;\n                    treenode.text = ModeName;\n                    treenode.createuser = row_created_by;\n                    treenode.createtime = row_created_date;\n                    treenode.changetime = row_changed_date;\n                    treenode.changeuser = row_changed_by;\n                    treenode.remark = remark;\n                    treenode.code = newcode\n                    treenode.newnode = false;\n                }\n                mytree.itemObj[id] = treenode;\n                mytree.selectItem(id, false, false);\n                mytree.newnode = false;\n                //保存模块路径版本信息\n                hwDas.ajax({\n                        das: {\n                            idedas: true\n                        },\n                        url: \"CDEServcie/module/file\",\n                        type: 'post',\n                        timeout: 5000,\n                        params: {},\n                        data: [{\n                            filepath: selnodepath + \"/\" + id,\n                            version: 1,\n                            module_id: id\n                        }],\n                        success: function(result) {\n                            // Ext.Msg.alert(\"提示\", \"保存成功！\")\n                        },\n                        error: function(msg) {\n                            Ext.Msg.alert(\"提示\", \"保存模块版本信息失败\")\n                            return;\n                        }\n                    })\n                    ////拷贝文件\n                    //copyFilePath到treenode.path\n\n            },\n            error: function(msg) {\n                Ext.Msg.alert(\"提示\", \"复制失败\")\n                return;\n            }\n        })\n    } else if(cutNodeId != \"\") {\n        var cutNode = mytree.itemObj[copyNodeId];\n        var cutFilePath = copyNode.path;\n        var ModeName = copyNode.text;\n        var remark = cutNode.remark;\n        var code = cutNode.code;\n        var id = cutNodeId;\n        var row_created_by = Ext.util.Cookies.get('userName');\n        var row_created_date = Ext.Date.dateFormat(new Date(), 'Y-m-d H:i:s');\n        var row_changed_by = Ext.util.Cookies.get('userName');\n        var row_changed_date = Ext.Date.dateFormat(new Date(), 'Y-m-d H:i:s');\n        //保存模块基础信息\n        hwDas.ajax({\n            das: {\n                idedas: true\n            },\n            url: \"CDEServcie/module/info\",\n            type: 'put',\n            timeout: 5000,\n            params: {},\n            data: [{\n                id: id,\n                category_id: category_id,\n                project_id: projectId,\n                row_created_by: row_created_by,\n                row_created_date: row_created_date,\n                row_changed_by: row_changed_by,\n                row_changed_date: row_changed_date\n            }],\n            success: function(result) {\n                //将节点移除，再添加\n                mytree.deleteItem(id);\n                mytree.insertNewChild(selId, id, ModeName);\n                mytree.setItemImage2(id, \"tree/model.png\", \"tree/model.png\", \"tree/model.png\")\n\n                cutNode.path = selnodepath + \"/\" + id;\n                cutNode.projectId = Project_id;\n                cutNode.createuser = row_created_by;\n                cutNode.createtime = row_created_date;\n                cutNode.changetime = row_changed_date;\n                cutNode.changeuser = row_changed_by;\n                treenode.newnode = false;\n\n                mytree.selectItem(id, false, false);\n                mytree.newnode = false;\n                //保存模块路径版本信息\n                hwDas.ajax({\n                        das: {\n                            idedas: true\n                        },\n                        url: \"CDEServcie/module/file\",\n                        type: 'put',\n                        timeout: 5000,\n                        params: {},\n                        data: [{\n                            filepath: selnodepath + \"/\" + id,\n                            version: 1,\n                            module_id: id\n                        }],\n                        success: function(result) {\n                            // Ext.Msg.alert(\"提示\", \"保存成功！\")\n                        },\n                        error: function(msg) {\n                            Ext.Msg.alert(\"提示\", \"保存模块版本信息失败\")\n                            return;\n                        }\n                    })\n                    ////移动文件\n                    //cutFilePath到cutNode.path\n            },\n            error: function(msg) {\n                Ext.Msg.alert(\"提示\", \"复制失败\")\n                return;\n            }\n        })\n    }\n\n\n\n\n\n    copyCutNodeId = \"\";\n}\n\n\n\n//页面加载完后事件\nfunction MyViewport_afterrender(sender) {\n    MyP_jcxx.body.update(\"<iframe  id='iframe_page' src='/modules/eQ9ULgcVb1/eQ9ULgcVb5/hw03cb4931.html' width=100% height=100% frameborder=0  ></iframe>\");\n    if(!allowedDesigner) {\n        MyC_tc.hide();\n        button.hide();\n    }\n\n}\n//退出图标的点击事件\nfunction MyC_tc_afterrender(sender) {\n    sender.el.on('click', function() {\n        outvmd();\n    })\n}\n//退出按钮操作\nfunction button_click(sender) {\n    outvmd();\n}\n//登出vmd2.0\nfunction outvmd() {\n    var aa = Ext.Msg.confirm(\"提示\", \"确定要退出vmd2.0吗？\", function(type) {\n        {\n            if(type == \"yes\") {\n                Ext.util.Cookies.clear(\"login\")\n                self.location = window.location.protocol + \"//\" + window.location.host;\n            }\n        }\n    })\n}\n\n//页面初始化前方法 控制权限 记录编辑权限\nfunction MyViewport_beforerender(sender) {\n    //模拟平台5的token传参登陆,默认设置cookie 为dbadmin 管理员\n    var urlToken = getUrlParam(\"token\");\n    if(urlToken != null && urlToken != \"\") {\n        Ext.util.Cookies.set('userName', \"管理员\");\n        Ext.util.Cookies.set('login', \"dbadmin\");\n        return\n    }\n    var userType = Ext.util.Cookies.get(\"userType\");\n    allowedDesigner = userType == \"vmdDesigner\" ? true : false;\n    var login = Ext.util.Cookies.get(\"login\");\n    if(!login) {\n        self.location = window.location.protocol + \"//\" + window.location.host;\n    }\n}\n\n\nvar selModeWin;\nwindow[\"selModeWin\"] = selModeWin;\n\n//新建模块时 打开模版选择页面 关闭时调用该方法，由子页面调用或该页面调用\nfunction closeSelMode(create) {\n    if(create) {\n        var mytree = hwTree;\n        var selId = mytree.getSelectedItemId();\n        var selnode = mytree.itemObj[selId];\n        selnode.newnode = false;\n        mytree.newnode = false;\n    }\n\n    selModeWin.close();\n}\nwindow[\"closeSelMode\"] = closeSelMode;\n\n\n//新建模块时 打开模版选择页面，由子页面调用或该页面调用\nfunction openSelMode(id, name, pdth) {\n    selModeWin = new vmdDesigner({\n        title: name + \" 页面模版选择\",\n        params: {\n            id: id,\n            name: escape(name),\n            path: pdth\n        },\n        width: document.body.clientWidth - 200,\n        height: document.body.clientHeight - 100,\n        url: '/modules/eQ9ULgcVb1/eQ9ULgcVb5/hw3b9ae460.html'\n    });\n    selModeWin.show();\n}\n//将选择模版方法放入window中\nwindow[\"openSelMode\"] = openSelMode;\n\nfunction MyP_jcxx_beforerender(sender) {\n\n}\n\n\nfunction openWin(obj, html) {\n    var openWin = new parent.Ext.Window(obj || {\n        renderTo: parent.Ext.getBody(),\n        title: \"节点绑定表单\",\n        modal: true,\n        maximized: false,\n        height: 600,\n        width: 800,\n        maximizable: true,\n        resizable: true,\n        bodyStyle: \"background-color:#fff\",\n        closeAction: 'close'\n\n    })\n    Ext.defer(function() {\n\n        openWin.html = html; //\"<iframe src='/modules/eQ9ULgcVb1/hw4acf2f8b/hw3b434d49.html?r=\" + new Date().getTime() + \"' frameborder=0 scrolling=no style='height:100%;width:100%'></iframe>\";\n        openWin.show()\n    }, 50)\n    return openWin;\n}\n\nfunction MyP_Htool_afterrender(sender) {\n    \n}\n\nfunction MyC_zy_afterrender(sender){\nvar win=\n}","vmdcss":"","vmdprops":"\"\"","type":"module","vmdresource":"{\"components\":[{\"cid\":\"vmdrescsss\",\"layoutConfig\":{},\"userConfig\":{}},{\"cid\":\"vmdresjss\",\"layoutConfig\":{},\"userConfig\":{}},{\"cid\":\"vmdresimgs\",\"layoutConfig\":{},\"userConfig\":{}}]}"}