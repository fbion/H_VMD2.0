{"vmdversion":"vmd2.0.5.200306","vmdlayout":"{\"components\":[{\"cid\":\"viewport\",\"id\":\"MainViewport\",\"layoutConfig\":{},\"userConfig\":{\"layout\":\"absolute\"},\"cn\":[{\"cid\":\"label\",\"id\":\"hwLabel\",\"layoutConfig\":{},\"userConfig\":{\"x\":300,\"y\":30,\"text\":\"项目镜像管理\",\"style\":\"font-size: 14px;\"}},{\"cid\":\"label\",\"id\":\"hwLabel1\",\"layoutConfig\":{},\"userConfig\":{\"x\":20,\"y\":70,\"text\":\"项目镜像列表：\",\"style\":\"font-size: 14px;\"}},{\"cid\":\"grid\",\"id\":\"MyGrid\",\"layoutConfig\":{},\"userConfig\":{\"x\":20,\"y\":90,\"width\":690,\"height\":190,\"header\":false,\"border\":true,\"style\":\"font-size: 14px;    border: 1px solid #c5c5c5\",\"enableHdMenu\":false,\"disableHeaderClick\":false,\"hideHeaders\":false,\"afterrender\":\"MyGrid_afterrender\",\"beforerender\":\"MyGrid_beforerender\",\"checked\":\"MyGrid_checked\",\"cellclick\":\"MyGrid_cellclick\"},\"cn\":[{\"cid\":\"gridcolumn\",\"layoutConfig\":{},\"userConfig\":{\"header\":\"序号\",\"dataIndex\":\"xh\",\"width\":50},\"name\":\"xh\"},{\"cid\":\"gridcolumn\",\"layoutConfig\":{},\"userConfig\":{\"header\":\"镜像版本\",\"dataIndex\":\"ver\",\"width\":100,\"align\":\"center\"},\"name\":\"ver\"},{\"cid\":\"gridcolumn\",\"layoutConfig\":{},\"userConfig\":{\"header\":\"vmd镜像版本\",\"dataIndex\":\"vmdver\",\"width\":100,\"align\":\"center\"},\"name\":\"vmdver\"},{\"cid\":\"gridcolumn\",\"layoutConfig\":{},\"userConfig\":{\"header\":\"创建人\",\"dataIndex\":\"user\",\"width\":100},\"name\":\"user\"},{\"cid\":\"gridcolumn\",\"layoutConfig\":{},\"userConfig\":{\"dataIndex\":\"createtime\",\"header\":\"创建时间\"},\"name\":\"createtime\"},{\"cid\":\"gridcolumn\",\"layoutConfig\":{},\"userConfig\":{\"align\":\"center\",\"header\":\"操作\",\"width\":200},\"name\":\"MyColumn5\"}]},{\"cid\":\"label\",\"id\":\"hwLabel3\",\"layoutConfig\":{},\"userConfig\":{\"x\":20,\"y\":290,\"text\":\"镜像说明：\",\"style\":\"font-size: 14px;\"}},{\"cid\":\"textarea\",\"id\":\"hwTextArea\",\"layoutConfig\":{},\"userConfig\":{\"x\":20,\"y\":310,\"width\":690,\"height\":80,\"readOnly\":true}},{\"cid\":\"vmdButton\",\"id\":\"button1\",\"layoutConfig\":{},\"userConfig\":{\"x\":660,\"y\":410,\"text\":\"关闭\",\"hidden\":true}}]},{\"cid\":\"vmddataset\",\"id\":\"数据\",\"layoutConfig\":{},\"userConfig\":{}},{\"cid\":\"vmdvariable\",\"id\":\"变量\",\"layoutConfig\":{},\"userConfig\":{}},{\"cid\":\"vmdsubviewport\",\"id\":\"SubView_Window\",\"layoutConfig\":{},\"userConfig\":{},\"cn\":[{\"cid\":\"vmdSubView\",\"id\":\"subView\",\"layoutConfig\":{},\"userConfig\":{\"cid\":\"vmdSubView\",\"width\":512,\"height\":303,\"layout\":\"fit\"},\"cn\":[{\"cid\":\"container\",\"id\":\"hwDiv\",\"layoutConfig\":{},\"userConfig\":{\"x\":\"\",\"y\":\"\",\"layout\":\"border\"},\"cn\":[{\"cid\":\"container\",\"id\":\"hwDiv1\",\"layoutConfig\":{},\"userConfig\":{\"region\":\"north\",\"border\":false,\"height\":38,\"layout\":\"absolute\"},\"cn\":[{\"cid\":\"label\",\"id\":\"hwLabel2\",\"layoutConfig\":{},\"userConfig\":{\"text\":\"编排文件：\",\"x\":0,\"y\":10}},{\"cid\":\"label\",\"id\":\"hwLabel4\",\"layoutConfig\":{},\"userConfig\":{\"x\":60,\"y\":10,\"text\":\"（可在该基础上进行相应的修改，满足编排文件运行需要）\",\"style\":\"color:red;\"}},{\"cid\":\"vmdButton\",\"id\":\"button\",\"layoutConfig\":{},\"userConfig\":{\"x\":410,\"y\":5,\"text\":\"复制\",\"hidden\":true}}]},{\"cid\":\"container\",\"id\":\"hwDiv2\",\"layoutConfig\":{},\"userConfig\":{\"region\":\"center\",\"border\":false,\"layout\":\"fit\"},\"cn\":[{\"cid\":\"vmdAceEditor\",\"id\":\"MyAce\",\"layoutConfig\":{},\"userConfig\":{\"beforerender\":\"MyAce_beforerender\"}}]}]}]}]}]}","vmdevents":"var comData = [{\n    xh: 1,\n    ver: \"20200226\",\n    vmdver: \"vmd2.0.6.200119\",\n    info: \"20200226_vmd2.0.6.200119_20200201\",\n    user: \"\",\n    createtime: \"\"\n}]\nvar verstore = new vmd.data.Store({\n    data: comData,\n    fields: ['xh', 'ver', 'vmdver', 'prover', 'info', 'user', 'createtime']\n})\nvar myMask = new Ext.LoadMask(Ext.getBody(), {\n    msg: \"正在发布\" + vmd.getUrlParam(\"projectName\") + \"镜像,请稍后...\",\n    msgCls: 'z-index:10000;'\n});\n\nvar imageServer = \"\";\nvar imageFileService = \"\";\nvar imageHarHost = \"\";\nvar proVerInfo = [];\nvar proUpdateInfo = \"\"\nvar proCodeInfo = [];\nvar proCode = \"\";\nvar page = this;\n\nfunction image_delImage(ver) {\n\n    myMask = new Ext.LoadMask(Ext.getBody(), {\n        msg: \"正在删除\" + vmd.getUrlParam(\"projectName\") + \"镜像,请稍后...\",\n        msgCls: 'z-index:10000;'\n    });\n    myMask.show();\n    //获取镜像列表\n    var checkImage = function() {\n        vmd.ajax({\n            url: \"http://\" + imageServer + \"/VMDCI/searchImage/\" + proCode + \":\" + ver,\n            type: 'post',\n            timeout: 20000,\n            success: function(data) {\n                if (data && data.result) {\n                    deleteImage(data.data || []);\n                } else {\n                    myMask.hide();\n                    // Ext.Msg.alert(\"提示\", \"发布失败！检索镜像失败！\" + data.msg || data.data)\n                }\n            },\n            error: function() {\n                myMask.hide();\n                Ext.Msg.alert(\"提示\", \"发布失败！\")\n            }\n        })\n    }\n    var deleteImage = function(imageTag) {\n        if (imageTag.length <= 0) {\n            myMask.hide();\n            deleteImageInfo()\n        } else {\n            vmd.ajax({\n                url: \"http://\" + imageServer + \"/VMDCI/deleteImage/\" + imageTag[0].ImageName,\n                type: 'post',\n                timeout: 20000,\n                success: function(data) {\n                    myMask.hide();\n                    if (data && data.result) {\n                        deleteImageInfo()\n                        Ext.Msg.alert(\"提示\", \"删除\" + imageTag[0].ImageName + \"镜像成功！\")\n                    } else {\n                        Ext.Msg.alert(\"提示\", \"删除\" + imageTag[0].ImageName + \"镜像失败！\" + data.msg || data.data)\n                    }\n                },\n                error: function() {\n                    myMask.hide();\n                    Ext.Msg.alert(\"提示\", \"删除\" + imageTag[0].ImageName + \"镜像失败！\")\n                }\n            })\n        }\n    }\n    var deleteImageInfo = function() {\n\n        //重新保存 版本信息\n        for (var j = 0; j <= proVerInfo.length; j++) {\n            if (proVerInfo[j].ver == ver) {\n                proVerInfo.remove(proVerInfo[j])\n                break;\n            }\n        }\n        var xh = 1;\n        for (var j = 0; j < verstore.getCount(); j++) {\n            var rec = verstore.getAt(j)\n            if (rec.get(\"ver\") == ver) {\n                verstore.remove(rec)\n                continue;\n            }\n            rec.set(\"xh\", xh)\n            xh++\n        }\n\n        var hwFao = new HwFao(imageFileService, \"vmdcicd\");\n        //获取历史版本的更新日志信息\n        hwFao.write(\"data/project/\" + vmd.getUrlParam(\"projectId\") + \"/verInfo.txt\", JSON.stringify(proVerInfo), function(result) {}, function() {})\n        //删除版本文件\n        hwFao.remove(\"data/project/\" + vmd.getUrlParam(\"projectId\") + \"/\" + ver + \".txt\", function() {}, function() {})\n        hwFao.remove(\"data/project/\" + vmd.getUrlParam(\"projectId\") + \"/\" + ver + \".tar\", function() {}, function() {})\n        hwFao.remove(\"data/project/\" + vmd.getUrlParam(\"projectId\") + \"/\" + ver + \".tar.gz\", function() {}, function() {})\n    }\n    checkImage()\n}\nwindow.image_delImage = image_delImage\n\nfunction image_pushImage(ver) {\n    myMask = new Ext.LoadMask(Ext.getBody(), {\n        msg: \"正在push\" + vmd.getUrlParam(\"projectName\") + \"镜像,请稍后...\",\n        msgCls: 'z-index:10000;'\n    });\n    myMask.show();\n    var checkImage = function() {\n        vmd.ajax({\n            url: \"http://\" + imageServer + \"/VMDCI/searchImage/\" + proCode + \":\" + ver,\n            type: 'post',\n            timeout: 20000,\n            success: function(data) {\n                if (data && data.result) {\n                    PushImage(data.data || []);\n                } else {\n                    myMask.hide();\n                    // Ext.Msg.alert(\"提示\", \"发布失败！检索镜像失败！\" + data.msg || data.data)\n                }\n            },\n            error: function() {\n                myMask.hide();\n                Ext.Msg.alert(\"提示\", \"发布失败！\")\n            }\n        })\n    }\n    var PushImage = function(images) {\n        if (images.length <= 0) {\n            myMask.hide();\n            Ext.Msg.alert(\"提示\", \"镜像不存在,无法push到镜像仓库！\")\n            return;\n        }\n        //通过镜像服务获取文件服务地址\n        vmd.ajax({\n            url: \"http://\" + imageServer + \"/VMDCI/pushImage/\" + proCode + \":\" + ver,\n            type: 'post',\n            timeout: 120000,\n            data: {\n                username: \"vmdbuild\",\n                passward: \"Hanwei12345\",\n                ImagePath: \"vmd_projects\",\n                HarborHost: imageHarHost\n            },\n            success: function(data) {\n                myMask.hide();\n                if (data.result)\n                    Ext.Msg.alert(\"提示\", \"成功push到镜像仓库！\")\n                else\n                    Ext.Msg.alert(\"提示\", data.msg)\n            },\n            error: function(data) {\n                myMask.hide();\n                Ext.Msg.alert(\"提示\", data.msg)\n            }\n        })\n    }\n    checkImage();\n}\nwindow.image_pushImage = image_pushImage\n\nfunction image_getYaml(ver) {\n    myMask = new Ext.LoadMask(Ext.getBody(), {\n        msg: \"正在生成\" + vmd.getUrlParam(\"projectName\") + \"镜像的编排文件,请稍后...\",\n        msgCls: 'z-index:10000;'\n    });\n    myMask.show();\n    var checkImage = function() {\n        vmd.ajax({\n            url: \"http://\" + imageServer + \"/VMDCI/searchImage/\" + proCode + \":\" + ver,\n            type: 'post',\n            timeout: 20000,\n            success: function(data) {\n                if (data && data.result) {\n                    getYaml(data.data || []);\n                } else {\n                    myMask.hide();\n                    // Ext.Msg.alert(\"提示\", \"发布失败！检索镜像失败！\" + data.msg || data.data)\n                }\n            },\n            error: function() {\n                myMask.hide();\n                Ext.Msg.alert(\"提示\", \"发布失败！\")\n            }\n        })\n    }\n    var getYaml = function(images) {\n        if (images.length <= 0) {\n            myMask.hide();\n            Ext.Msg.alert(\"提示\", \"镜像不存在,无法创建Yaml！\")\n            return;\n        }\n        //通过镜像服务获取文件服务地址\n        vmd.ajax({\n            url: \"http://\" + imageServer + \"/VMDCI/getYaml\",\n            type: 'post',\n            timeout: 120000,\n            data: {\n                ServiceName: proCode,\n                harborHost: imageHarHost,\n                harborProj: \"vmd_projects\",\n                ImageName: proCode + \":\" + ver\n            },\n            success: function(data) {\n                myMask.hide();\n                if (data.result) {\n                    debugger\n                    showYaml(data.data)\n                } else\n                    Ext.Msg.alert(\"提示\", data.msg)\n            },\n            error: function(data) {\n                myMask.hide();\n                Ext.Msg.alert(\"提示\", data.msg)\n            }\n        })\n    }\n\n    var showYaml = function(str) {\n        subView.show()\n        MyAce.setValue(str || \"\")\n    }\n    checkImage();\n}\nwindow.image_getYaml = image_getYaml\n\n\nfunction MyGrid_afterrender(sender) {\n    var listCol = this.colModel.config\n    listCol[5].renderer = function(value, cellmeta, record) { //可以根据行字段的某个类型进行转换设置显示值\n\n        var code = \"\"\n        var ver = record.get(\"ver\")\n        return '<button class=\"vmd-button vmd-button--text vmd-button--small \" type=\"button\" style=\"margin-right: 10px;\" onclick=\"image_delImage(' + ver + ')\"><span id=\"ext-gen16\">删除镜像</span></button>' +\n            '<button class=\"vmd-button vmd-button--text vmd-button--small \" type=\"button\" style=\"margin-right: 10px;\"onclick=\"image_pushImage(' + ver + ')\"><span id=\"ext-gen16\">push镜像</span></button>' +\n            '<button class=\"vmd-button vmd-button--text vmd-button--small \" type=\"button\" onclick=\"image_getYaml(' + ver + ')\"><span id=\"ext-gen16\">生成Yaml</span></button>'\n    }\n\n    //先获取镜像服务地址\n    var hwFao1 = new HwFao(vmdSettings.vmdFileServiceIp || vmdSettings.dataServiceIp, \"vmd\");\n    hwFao1.read(\"imageService.txt\", function(result) {\n        var imageConfig = JSON.parse(result.data)\n        imageServer = imageConfig.imageServiceIp || result.data\n        imageHarHost = imageConfig.imageHarborIp || \"\";\n\n        if (!imageServer)\n            Ext.Msg.alert(\"提示\", \"请先配置镜像服务地址后再操作！\", function() {})\n        //通过镜像服务获取文件服务地址\n        hwDas.ajax({\n            url: \"http://\" + imageServer + \"/VMDCI/initService\",\n            type: 'get',\n            timeout: 20000,\n            success: function(data) {\n                if (!data.result) {\n                    Ext.Msg.alert(\"提示\", \"获取镜像服务所需的文件服务地址失败！\", function() {});\n                    return;\n                }\n                imageFileService = data.data\n                if (!imageFileService) {\n                    Ext.Msg.alert(\"提示\", \"获取镜像服务所需的文件服务地址失败！\", function() {});\n                    return;\n                }\n                //通过文件服务获取对应目录下的文件列表信息\n                var hwFao = new HwFao(imageFileService, \"vmdcicd\");\n                hwFao.read(\"data/project/\" + vmd.getUrlParam(\"projectId\") + \"/verInfo.txt\", function(result) {\n                    if (result.data)\n                        proVerInfo = JSON.parse(result.data) || [];\n                    var storeData = []\n                    for (var i = 0; i < proVerInfo.length; i++) {\n                        storeData.push({\n                            xh: i + 1,\n                            sel: false,\n                            ver: proVerInfo[i].ver,\n                            vmdver: proVerInfo[i].vmdver,\n                            createtime: proVerInfo[i].createDate,\n                            //info: proVerInfo[i].info,\n                            user: proVerInfo[i].userName || proVerInfo[i].userId\n                        })\n                    }\n                    //更新数据\n                    verstore.loadData(storeData);\n                }, function() {\n                    verstore.loadData([])\n                })\n                //获取简写信息\n                hwFao.read(\"data/project/proInfo.txt\", function(result) {\n                    if (result.data) {\n                        proCodeInfo = JSON.parse(result.data) || [];\n                        for (var i = 0; i < proCodeInfo.length; i++) {\n                            if (proCodeInfo[i].projectId = vmd.getUrlParam(\"projectId\"))\n                                proCode = proCodeInfo[i].code;\n                        }\n                    }\n                }, function() {\n\n                })\n            },\n            error: function(msg) {\n                Ext.Msg.alert(\"提示\", \"获取镜像服务所需的文件服务地址失败！\", function() {});\n            }\n        })\n    }, function(result) {\n        Ext.Msg.alert(\"提示\", \"请先配置镜像服务地址后再操作！\", function() {})\n    })\n}\n\nfunction MyGrid_beforerender(sender) {\n    MyGrid.store = verstore;\n}\n\nfunction button_click(sender, e) {\n    var selname = \"\"\n    for (var i = 0; i < verstore.getCount(); i++) {\n        var rreacord = verstore.getAt(i)\n        if (rreacord.get(\"sel\")) {\n            selname = rreacord.get(\"ver\")\n        }\n    }\n    if (!selname) {\n        Ext.Msg.alert(\"提示\", \"请选择项目镜像！\", function() {})\n        return;\n    }\n    downPath = \"data/project/\" + vmd.getUrlParam(\"projectId\") + \"/\" + selname + \".tar\";\n    var hwFao = new HwFao(imageFileService, \"vmdcicd\");\n    var saveImage = function() {\n        var myMask = new Ext.LoadMask(Ext.getBody(), {\n            msg: \"正在导出项目镜像,请稍后...\",\n            msgCls: 'z-index:10000;'\n        });\n        myMask.show();\n        //文件不存在，则先调用服务save镜像再下载\n        vmd.ajax({\n            url: \"http://\" + imageServer + \"/VMDCI/saveImage/\" + proCode + \":\" + selname, //\"http://\" + imageServer + \"/VMDCI/saveImage/vmdrun:vmd2.0.6.200119\" ,//\n            type: 'post',\n            timeout: 5 * 60 * 1000,\n            data: {\n                SaveType: \"vmd_project\",\n                SaveVersion: vmd.getUrlParam(\"projectId\"),\n                ImageTar: selname + \".tar\"\n            },\n            success: function(data) {\n                myMask.hide();\n                if (data.result)\n                    hwFao.down(downPath, vmd.getUrlParam(\"projectName\") + \"_\" + selname + \".tar\", function(result) {}, function() {})\n                else\n                    Ext.Msg.alert(\"提示\", \"保存镜像文件失败，请联系管理员！错误：\" + data.data, function() {})\n            },\n            error: function() {\n                myMask.hide();\n                Ext.Msg.alert(\"提示\", \"保存镜像文件失败，请联系管理员！\", function() {})\n            }\n        })\n    }\n    //先判断文件是否存在，存在直接下载\n    hwFao.exist(downPath, function(result) {\n        if (result.data)\n            hwFao.down(downPath, vmd.getUrlParam(\"projectName\") + \"_\" + selname + \".tar\", function(result) {}, function() {})\n        else {\n            saveImage()\n        }\n    }, function() {\n        saveImage()\n    })\n}\nvar selrowIndex;\n\nfunction MyGrid_checked(sender, field, val, record, rowIndex, columnIndex, e) {\n    if (!record)\n        return;\n    selrowIndex = rowIndex;\n    for (var i = 0; i < verstore.getCount(); i++) {\n        var rreacord = verstore.getAt(i)\n        if (i != selrowIndex && selrowIndex >= 0)\n            rreacord.set(\"sel\", false)\n    }\n    verstore.commitChanges()\n}\n\nfunction MyGrid_cellclick(sender, rowIndex, columnIndex, e) {\n    if (rowIndex >= 0) {\n        var record = verstore.getAt(rowIndex)\n        var hwFao = new HwFao(imageFileService, \"vmdcicd\");\n        hwFao.read(\"data/project/\" + vmd.getUrlParam(\"projectId\") + \"/\" + record.get('ver') + \".txt\", function(result) {\n            hwTextArea.setValue(result.data)\n        }, function() {})\n    }\n}\n\nfunction MyAce_beforerender(sender) {\n    MyAce.language = \"html\"\n}\n\nfunction showyaml(str) {\n    MyAce.setValue(str || \"\")\n\n}","vmdcss":"","vmdprops":"\"\"","type":"module","vmdresource":"{\"components\":[{\"cid\":\"vmdrescsss\",\"layoutConfig\":{},\"userConfig\":{}},{\"cid\":\"vmdresjss\",\"layoutConfig\":{},\"userConfig\":{},\"cn\":[{\"cid\":\"resjs\",\"id\":\"project.config.js\",\"layoutConfig\":{},\"userConfig\":{}}]},{\"cid\":\"vmdresimgs\",\"layoutConfig\":{},\"userConfig\":{}}]}"}