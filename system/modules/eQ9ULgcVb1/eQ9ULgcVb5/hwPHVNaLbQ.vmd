{"vmdversion":"2.0.3.1227","vmdlayout":"{\"components\":[{\"cid\":\"viewport\",\"id\":\"MainViewport\",\"layoutConfig\":{},\"userConfig\":{\"layout\":\"border\",\"afterrender\":\"MainViewport_afterrender\"},\"cn\":[{\"cid\":\"panel\",\"id\":\"panel\",\"layoutConfig\":{},\"userConfig\":{\"layout\":\"anchor\",\"region\":\"center\",\"border\":false,\"header\":false,\"autoScroll\":false},\"cn\":[{\"cid\":\"container\",\"id\":\"div4\",\"layoutConfig\":{},\"userConfig\":{\"anchor\":\"100%  100%\",\"border\":false,\"layout\":\"border\",\"height\":420,\"width\":\"\",\"hidden\":false},\"cn\":[{\"cid\":\"container\",\"id\":\"div1\",\"layoutConfig\":{},\"userConfig\":{\"region\":\"north\",\"height\":31,\"layout\":\"absolute\"},\"cn\":[{\"cid\":\"checkbox\",\"id\":\"hwCheckbox\",\"layoutConfig\":{},\"userConfig\":{\"x\":20,\"y\":5,\"boxLabel\":\"全选\",\"style\":\"color: #5EA0FF;\",\"check\":\"hwCheckbox_check\"}},{\"cid\":\"vmdButton\",\"id\":\"button2\",\"layoutConfig\":{},\"userConfig\":{\"x\":80,\"y\":5,\"type\":\"text\",\"text\":\"只选分类\",\"click\":\"button2_click\",\"hidden\":true}}]},{\"cid\":\"container\",\"id\":\"div\",\"layoutConfig\":{},\"userConfig\":{\"region\":\"center\",\"layout\":\"fit\",\"border\":false},\"cn\":[{\"cid\":\"vmdTreeEx\",\"id\":\"tree\",\"layoutConfig\":{},\"userConfig\":{\"x\":20,\"y\":20,\"checkBox\":true,\"store\":\"treestore\",\"parentField\":\"parent_id\",\"valueField\":\"id\",\"textField\":\"name\",\"loadType\":\"全部加载\",\"rootValue\":\"0\",\"rootText\":\"协同开发\",\"cascading\":true,\"nodeMarkFiled\":\"type\",\"folderValue\":\"category\",\"leafValue\":\"module\",\"rootImg\":\"/system/modules/eQ9ULgcVb1/img/server5.png\",\"folderImg\":\"/system/modules/eQ9ULgcVb1/img/folderClosed.gif\",\"leafImg\":\"/system/modules/eQ9ULgcVb1/img/model.png\",\"afterBindData\":\"tree_afterBindData\",\"width\":1140}}]}]},{\"cid\":\"container\",\"id\":\"div5\",\"layoutConfig\":{},\"userConfig\":{\"anchor\":\"100%   100%\",\"border\":false,\"hidden\":true,\"height\":420,\"width\":\"\",\"layout\":\"auto\",\"autoScroll\":true},\"cn\":[{\"cid\":\"container\",\"id\":\"div31\",\"layoutConfig\":{},\"userConfig\":{\"anchor\":\"100% 55%\",\"layout\":\"auto\",\"border\":false,\"id\":\"div31\",\"afterrender\":\"div31_afterrender\",\"width\":\"\",\"autoHeight\":true,\"autoScroll\":false,\"style\":\"overflow: auto;     overflow-x: hidden !important\"},\"cn\":[{\"cid\":\"container\",\"id\":\"div41\",\"layoutConfig\":{},\"userConfig\":{\"region\":\"north\",\"border\":false,\"layout\":\"border\",\"height\":100,\"id\":\"div41\",\"width\":\"\"},\"cn\":[{\"cid\":\"container\",\"id\":\"div9\",\"layoutConfig\":{\"align\":\"middle\"},\"userConfig\":{\"region\":\"north\",\"height\":35,\"border\":false,\"layout\":\"hbox\",\"width\":\"\"},\"cn\":[{\"cid\":\"label\",\"id\":\"label7\",\"layoutConfig\":{},\"userConfig\":{\"text\":\"服务信息\",\"margins\":\"0 0 0 10\",\"style\":\"font-size: 14px;font-weight: bold\"}}]},{\"cid\":\"container\",\"id\":\"div10\",\"layoutConfig\":{},\"userConfig\":{\"layout\":\"absolute\",\"region\":\"center\",\"border\":false,\"style\":\"border-top: 1px solid;    border-top-color: rgb(223, 223, 223)\",\"height\":61},\"cn\":[{\"cid\":\"label\",\"id\":\"label2\",\"layoutConfig\":{},\"userConfig\":{\"x\":15,\"y\":5,\"text\":\"数据服务地址:\",\"style\":\"font-size: 14px;    color: #5f5f5f;\"}},{\"cid\":\"textfield\",\"id\":\"txt_dataserverip\",\"layoutConfig\":{},\"userConfig\":{\"x\":110,\"y\":0,\"width\":180,\"columnWidth\":0.5,\"id\":\"txt_dataserverip\"}},{\"cid\":\"label\",\"id\":\"label3\",\"layoutConfig\":{},\"userConfig\":{\"x\":310,\"y\":5,\"text\":\"工作流地址：\",\"style\":\"font-size: 14px;    color: #5f5f5f;\"}},{\"cid\":\"textfield\",\"id\":\"txt_workflowip\",\"layoutConfig\":{},\"userConfig\":{\"x\":400,\"y\":0,\"width\":180,\"columnWidth\":0.5,\"id\":\"txt_workflowip\"}},{\"cid\":\"label\",\"id\":\"label6\",\"layoutConfig\":{},\"userConfig\":{\"x\":15,\"y\":35,\"text\":\"消息中心地址:\",\"style\":\"font-size: 14px;    color: #5f5f5f;\"}},{\"cid\":\"textfield\",\"id\":\"txt_msg\",\"layoutConfig\":{},\"userConfig\":{\"x\":110,\"y\":27,\"width\":180,\"columnWidth\":0.5,\"id\":\"txt_msg\"}}]}]},{\"cid\":\"container\",\"id\":\"div51\",\"layoutConfig\":{},\"userConfig\":{\"region\":\"center\",\"layout\":\"auto\",\"border\":false,\"id\":\"div51\",\"width\":\"\",\"height\":100,\"autoHeight\":true},\"cn\":[{\"cid\":\"container\",\"id\":\"div2\",\"layoutConfig\":{\"align\":\"middle\"},\"userConfig\":{\"anchor\":\"100% 10%\",\"border\":false,\"layout\":\"hbox\",\"region\":\"north\",\"height\":35,\"width\":\"\"},\"cn\":[{\"cid\":\"label\",\"id\":\"title\",\"layoutConfig\":{},\"userConfig\":{\"anchor\":\"\",\"height\":20,\"id\":\"title\",\"text\":\" 资源中心\",\"autoHeight\":false,\"width\":100,\"y\":5,\"x\":10,\"autoWidth\":true,\"style\":\"font-size: 14px;font-weight: bold\",\"margins\":\"0 0 0 10\"}}]},{\"cid\":\"container\",\"id\":\"DivResource\",\"layoutConfig\":{},\"userConfig\":{\"anchor\":\"100% 30%\",\"id\":\"DivResource\",\"layout\":\"auto\",\"region\":\"center\",\"style\":\"border-top: 1px solid;    border-top-color: rgb(223, 223, 223)\",\"border\":false,\"width\":\"\",\"height\":65,\"autoHeight\":true},\"cn\":[{\"cid\":\"panel\",\"id\":\"palResource\",\"layoutConfig\":{},\"userConfig\":{\"border\":false,\"header\":false,\"id\":\"palResource\",\"layout\":\"auto\",\"autoScroll\":false,\"height\":65,\"autoWidth\":true,\"autoHeight\":true},\"cn\":[{\"cid\":\"vmd.ux.PublishResource\",\"id\":\"PublishResource\",\"layoutConfig\":{},\"userConfig\":{\"anchor\":\"100% \"}}]}]}]},{\"cid\":\"container\",\"id\":\"div3\",\"layoutConfig\":{},\"userConfig\":{\"width\":\"\",\"style\":\"margin-top: 10px;    border-right: 0;    border-left: 0;    border-bottom: 0\",\"border\":true,\"layout\":\"hbox\"},\"cn\":[{\"cid\":\"label\",\"id\":\"label\",\"layoutConfig\":{},\"userConfig\":{\"text\":\"虚拟目录名称：\",\"style\":\"font-size: 14px;    color: #5f5f5f;\",\"margins\":\"10 0 0 15\"}},{\"cid\":\"textfield\",\"id\":\"MyField\",\"layoutConfig\":{},\"userConfig\":{\"id\":\"MyField\",\"margins\":\"5 0 0 0 \",\"width\":175}}]}]}]}]},{\"cid\":\"container\",\"id\":\"div21\",\"layoutConfig\":{\"align\":\"middle\",\"pack\":\"center\"},\"userConfig\":{\"region\":\"south\",\"layout\":\"hbox\",\"afterrender\":\"div2_afterrender\",\"id\":\"div21\",\"border\":true},\"cn\":[{\"cid\":\"vmdButton\",\"id\":\"button3\",\"layoutConfig\":{},\"userConfig\":{\"click\":\"button3_click\",\"text\":\"下一步\",\"margins\":\"0 10 0 10\",\"type\":\"info\"}},{\"cid\":\"vmdButton\",\"id\":\"button\",\"layoutConfig\":{},\"userConfig\":{\"margins\":\"0 10 0 10\",\"text\":\"导出\",\"type\":\"info\",\"click\":\"button_click\",\"afterrender\":\"button_afterrender\"}},{\"cid\":\"vmdButton\",\"id\":\"button1\",\"layoutConfig\":{},\"userConfig\":{\"margins\":\"0 10 0 10\",\"text\":\"取消\",\"click\":\"button1_click\",\"afterrender\":\"button1_afterrender\"}}]}]},{\"cid\":\"vmddataset\",\"id\":\"数据集\",\"layoutConfig\":{},\"userConfig\":{},\"cn\":[{\"cid\":\"vmdJsonStore\",\"id\":\"treestore\",\"layoutConfig\":{},\"userConfig\":{\"cid\":\"vmdJsonStore\",\"id\":\"treestore\",\"storeConfig\":\"{\\\"id\\\":\\\"mfLDvMIDeH\\\",\\\"callcode\\\":\\\"vmdCode\\\",\\\"url\\\":\\\"CDEServcie/expProject/getexptreeinfo\\\",\\\"host\\\":\\\"\\\",\\\"isHwRest\\\":true,\\\"name\\\":\\\"获取导出的模块树\\\",\\\"getMethods\\\":[{\\\"id\\\":\\\"project_id\\\",\\\"value1\\\":\\\"return getUrlParam('project_id')||'eQ9ULgcVb1'\\\",\\\"value2\\\":\\\"\\\",\\\"defaultvalue\\\":\\\"\\\"}],\\\"postMethods\\\":[],\\\"putMethods\\\":[],\\\"deleteMethods\\\":[],\\\"saveMethods\\\":[],\\\"fields\\\":[{\\\"name\\\":\\\"id\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"name\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"parent_id\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"project_id\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"type\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"path\\\",\\\"type\\\":\\\"string\\\"}]}\"},\"cn\":[{\"cid\":\"datafield\",\"layoutConfig\":{},\"userConfig\":{\"cid\":\"datafield\",\"name\":\"id\"},\"name\":\"id\"},{\"cid\":\"datafield\",\"layoutConfig\":{},\"userConfig\":{\"cid\":\"datafield\",\"name\":\"name\"},\"name\":\"name\"},{\"cid\":\"datafield\",\"layoutConfig\":{},\"userConfig\":{\"cid\":\"datafield\",\"name\":\"parent_id\"},\"name\":\"parent_id\"},{\"cid\":\"datafield\",\"layoutConfig\":{},\"userConfig\":{\"cid\":\"datafield\",\"name\":\"project_id\"},\"name\":\"project_id\"},{\"cid\":\"datafield\",\"layoutConfig\":{},\"userConfig\":{\"cid\":\"datafield\",\"name\":\"type\"},\"name\":\"type\"},{\"cid\":\"datafield\",\"layoutConfig\":{},\"userConfig\":{\"cid\":\"datafield\",\"name\":\"path\"},\"name\":\"path\"}]}]},{\"cid\":\"vmdvariable\",\"id\":\"变量\",\"layoutConfig\":{},\"userConfig\":{}},{\"cid\":\"vmdsubviewport\",\"id\":\"SubView_Window\",\"layoutConfig\":{},\"userConfig\":{},\"cn\":[{\"cid\":\"vmdSubView\",\"id\":\"subView\",\"layoutConfig\":{},\"userConfig\":{\"width\":593,\"height\":448}}]}]}","vmdevents":"var hwproject_Name = vmd.getUrlParam('project_name') || '协同开发'\nvar hwproject_Id = vmd.getUrlParam('project_id') || 'eQ9ULgcVb1'\nvar treeNodePath = vmd.getUrlParam('nodepath')\n\nfunction hwCheckbox_check(sender, checked) {\n    var rootnode = tree.getRootNode();\n    if(checked == true) {\n        tree.setNodeCheckById(0, true); //设置根节点 被勾中\n        for(var i = 0; i < rootnode.childNodes.length; i++) {\n            tree.setNodeCheckById(rootnode.childNodes[i].id, true);\n            if(rootnode.childNodes[i].childNodes.length > 0) {\n                findchildnode(rootnode.childNodes[i]);\n            }\n        }\n    } else {\n        tree.setNodeCheckById(0, false); //设置根节点 不被勾中\n        for(var i = 0; i < rootnode.childNodes.length; i++) {\n            tree.setNodeCheckById(rootnode.childNodes[i].id, false);\n            if(rootnode.childNodes[i].childNodes.length > 0) {\n                findchildnode(rootnode.childNodes[i]);\n            }\n        }\n    }\n}\n//遍历树形子节点\nfunction findchildnode(roonodes) { //树形全勾中\n    var childnodes = roonodes.childNodes;\n    for(var i = 0; i < childnodes.length; i++) { // 从节点中取出子节点依次遍历\n        tree.setNodeCheckById(childnodes[i].id, hwCheckbox.checked);\n        if(childnodes[i].childNodes.length > 0) {\n            findchildnode(childnodes[i]); // 如果存在子节点 递归\n        }\n    }\n}\n\nfunction button2_click(sender, e) {\n    hwCheckbox.setValue(false); // 全选不勾中\n    tree.setNodeCheckById(0, false); //设置根节点 不被勾中\n    var rootnode = tree.getRootNode();\n    category_findchildnode(rootnode);\n}\n//只选择分类按钮(遍历树形子节点)\nfunction category_findchildnode(roonodes) { //树形全勾中\n    var childnodes = roonodes.childNodes;\n    for(var i = 0; i < childnodes.length; i++) { // 从节点中取出子节点依次遍历\n        if(childnodes[i].childNodes.length > 0) {\n            tree.setNodeCheckById(childnodes[i].id, true);\n            category_findchildnode(childnodes[i]); // 如果存在子节点 递归\n        } else {\n            if(childnodes[i].nodeDataJson.type == 'category') {\n                tree.setNodeCheckById(childnodes[i].id, true);\n            } else\n                tree.setNodeCheckById(childnodes[i].id, false);\n        }\n    }\n}\n\nfunction tree_afterBindData(sender) {\n    tree.getRootNode().setText(hwproject_Name);\n    //树形全选\n    var rootnode = tree.getRootNode();\n    if(hwCheckbox.checked == true) {\n        tree.setNodeCheckById(0, true); //设置根节点 被勾中\n        for(var i = 0; i < rootnode.childNodes.length; i++) {\n            tree.setNodeCheckById(rootnode.childNodes[i].id, true);\n            if(rootnode.childNodes[i].childNodes.length > 0) {\n                findchildnode(rootnode.childNodes[i]);\n            }\n        }\n    }\n    rootnode.expand();\n    if(treeNodePath) {\n        treeNodePath = treeNodePath.replace(hwproject_Id, 0);\n        delNodeIds = [];\n        delnode(rootnode)\n        for(var i = 0; i < delNodeIds.length; i++) {\n            tree.removeNodeById(delNodeIds[i])\n        }\n    }\n}\n//用户分类导出时，先加载所有的节点，treeNodePath\nfunction delnode(node) {\n    for(var i = 0; i < node.childNodes.length; i++) {\n        var cnode = node.childNodes[i]\n        if(cnode.getPath().indexOf(treeNodePath) >= 0 || treeNodePath.indexOf(cnode.getPath()) >= 0) {\n            if(cnode.childNodes.length > 0) {\n                delnode(cnode)\n            }\n        } else {\n            delNodeIds.push(cnode.id)\n        }\n    }\n}\nvar myMask;\n\nfunction button_click(sender, e) {\n    myMask = new Ext.LoadMask(document.body, {\n        msg: \"正在导出,请稍后...\",\n        msgCls: 'z-index:10000;'\n    });\n    myMask.show();\n    var ExpModulesInfo = getSelNodeIDs();\n    vmd.ajax({\n        url: \"/expandimp/api/ModPublishExp\",\n        type: 'post',\n        timeout: 20000,\n        //dataType:\"text\",\n        //contentType: 'application/json;charset=UTF-8',\n        data: ExpModulesInfo, //jsonp: \"callbackparam\", \n        success: function(result) {\n            myMask.hide();\n            if(result.type == \"success\") {\n                window.open(\"/\" + result.zipPath, '_self')\n            } else\n                Ext.Msg.alert(\"提示\", result.msg)\n        },\n        error: function(msg) {\n            myMask.hide();\n        }\n    })\n}\n\n\nvar cnodeIds = []\nvar mnodeIds = []\nvar mnodeInfo = []\n\nfunction getNodeId(node) {\n\n    for(var i = 0; i < node.childNodes.length; i++) {\n        var cnode = node.childNodes[i]\n        if(cnode.attributes.checked) {\n            if(cnode.childNodes.length > 0) {\n                getNodeId(cnode)\n                cnodeIds.push(cnode.id)\n            } else {\n                if(cnode.nodeDataJson.type == 'category') {\n                    cnodeIds.push(cnode.id)\n                } else {\n                    mnodeInfo.push({\n                        id: cnode.id,\n                        path: cnode.getPath().replace('/0/', '/' + hwproject_Id + '/')\n                    })\n                    mnodeIds.push(cnode.id)\n                }\n            }\n        }\n    }\n}\n\nfunction getSelNodeIDs() {\n    cnodeIds = []\n    mnodeIds = []\n    mnodeInfo = []\n    var rootnode = tree.getRootNode();\n    getNodeId(rootnode)\n    getResourceInfo()\n    var ExpModulesInfo = {};\n    ExpModulesInfo.serverIp = txt_dataserverip.getValue() || \"\";\n    ExpModulesInfo.workFlowIp = txt_workflowip.getValue() || \"\";\n    ExpModulesInfo.msgIp = txt_msg.getValue() || \"\";\n    ExpModulesInfo.virtualPath = MyField.getValue() || \"\";\n    ExpModulesInfo.ModulesInfo = mnodeInfo;\n    ExpModulesInfo.projectId = hwproject_Id;\n    ExpModulesInfo.projectName = hwproject_Name;\n    ExpModulesInfo.resourceInfo = resourecInfo;\n    return ExpModulesInfo\n}\n\nvar resourecInfo = [];\n\nfunction getResourceInfo() {\n    resourecInfo = [];\n    for(var i = 0; i < listPublishResourceComps.length; i++) {\n        var _resourecInfo = listPublishResourceComps[i].com.getText();\n        resourecInfo.push({\n            rname: listPublishResourceComps[i].sname,\n            newPath: _resourecInfo.newIP || _resourecInfo.oldIP\n        })\n    }\n}\n\nfunction button1_click(sender, e) {\n    if(parent && parent.expPublishmodulesWin)\n        parent.expPublishmodulesWin.close()\n}\n\nfunction MainViewport_afterrender(sender) {}\n\nfunction button3_click(sender, e) {\n    if(button3.getText() == \"下一步\") {\n        div5.show()\n        div4.hide()\n        panel.doLayout()\n        button3.setText(\"上一步\")\n        button.show()\n        div2.doLayout()\n\n    } else if(button3.getText() == \"上一步\") {\n        div4.show()\n        div5.hide()\n        panel.doLayout()\n        button3.setText(\"下一步\")\n        button.hide()\n        div2.doLayout()\n    }\n}\n\n\nfunction div2_afterrender(sender) {\n\n}\n\nfunction button1_afterrender(sender) {}\n\nfunction button_afterrender(sender) {\n    button.hide()\n    div2.doLayout()\n}\n\nvar listPublishResourceComps = []; //记录动态添加的组件列表。\nfunction div31_afterrender(sender) {\n    //先获取项目的发布配置信息，\n    var projectId = hwproject_Id || \"eQ9ULgcVb1\"; //vmd.workspace.projectid;\n    hwDas.get(\"DataServiceWorkSpace/projectInfo/projectreginfo\", {}, {\n        projectid: projectId\n    }, function(result) {\n        var subsysid;\n        var resourceserver = [];\n        if(result.data && result.data.length > 0 && result.data[0].datas && result.data[0].datas.length > 0) {\n            //获取配置的项目发布的其他信息\n            subsysid = result.data[0].datas[0].subsysid;\n            txt_dataserverip.setValue(result.data[0].datas[0].dasserver)\n            txt_workflowip.setValue(result.data[0].datas[0].wfserver)\n            txt_msg.setValue(result.data[0].datas[0].msgserver)\n            MyField.setValue(result.data[0].datas[0].virtualdir)\n            resourceserver = Ext.decode(result.data[0].datas[0].resourceserver);\n        }\n        //设置界面中文本框的虚拟目录\n        var vp = vmd.core.getVirtualPath().replace(window.location.origin + \"/\", \"\");\n        if(vp.lastIndexOf(\"/\") > 0)\n            MyField.setValue(vp.substr(0, vp.lastIndexOf(\"/\")));\n        var listResourceIP = []\n        for(var j = 0; j < resourceserver.length; j++) {\n            //过滤重复的资源地址\n            if(listResourceIP.indexOf(resourceserver[j].name) < 0) {\n                listResourceIP.push(resourceserver[j].name);\n                var ipresource = new vmd.ux.PublishResource({\n                    id: \"PublishResource\" + j,\n                    anchor: \"100% \"\n                });\n                //动态添加地址替换组件，根据有多少不同的地址进行添加\n                palResource.add(ipresource)\n                //将新老地址赋给替换组件进行替换\n                ipresource.setText(resourceserver[j].oldip, resourceserver[j].newip, resourceserver[j].name.replace('&&', '/'));\n                listPublishResourceComps.push({\n                    sname: resourceserver[j].name,\n                    com: ipresource\n                })\n            }\n        }\n        PublishResource.hide();\n        palResource.onBodyResize()\n\n    }, function(msg) {\n        console.error(msg)\n    })\n}","vmdcss":".x-form-cb-label{\n    color: #5EA0FF;\n}","vmdprops":"\"\"","type":"module","vmdresource":"{\"components\":[{\"cid\":\"vmdrescsss\",\"layoutConfig\":{},\"userConfig\":{}},{\"cid\":\"vmdresjss\",\"layoutConfig\":{},\"userConfig\":{}},{\"cid\":\"vmdresimgs\",\"layoutConfig\":{},\"userConfig\":{}}]}"}