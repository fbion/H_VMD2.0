{"vmdversion":"2.0.3.092701","vmdlayout":"{\"components\":[{\"cid\":\"viewport\",\"id\":\"MyViewport\",\"layoutConfig\":{},\"userConfig\":{\"layout\":\"border\",\"beforerender\":\"MyViewport_beforerender\",\"afterrender\":\"MyViewport_afterrender\"},\"cn\":[{\"cid\":\"panel\",\"id\":\"panel6\",\"layoutConfig\":{},\"userConfig\":{\"region\":\"center\",\"layout\":\"border\",\"border\":false,\"header\":false},\"cn\":[{\"cid\":\"panel\",\"id\":\"panel2\",\"layoutConfig\":{},\"userConfig\":{\"region\":\"north\",\"height\":27,\"border\":false,\"header\":false,\"layout\":\"absolute\"},\"cn\":[{\"cid\":\"label\",\"id\":\"label2\",\"layoutConfig\":{},\"userConfig\":{\"text\":\"请选择要注册的模块：\",\"x\":10,\"y\":8,\"cls\":\"title\"}}]},{\"cid\":\"panel\",\"id\":\"panel\",\"layoutConfig\":{},\"userConfig\":{\"region\":\"center\",\"layout\":\"border\",\"header\":false,\"border\":false},\"cn\":[{\"cid\":\"panel\",\"id\":\"panel3\",\"layoutConfig\":{},\"userConfig\":{\"border\":false,\"header\":false,\"region\":\"center\",\"height\":619,\"layout\":\"fit\",\"margins\":\"10\"},\"cn\":[{\"cid\":\"vmdTree\",\"id\":\"projectTree\",\"layoutConfig\":{},\"userConfig\":{\"style\":\"margin-left:  5px;    margin-top:  5px;    margin-bottom: 10px;    margin-right: 10px;\",\"afterrender\":\"projectTree_afterrender\",\"region\":\"center\",\"width\":280,\"id\":\"projectTree\",\"CheckBox\":true}}]},{\"cid\":\"panel\",\"id\":\"panel4\",\"layoutConfig\":{},\"userConfig\":{\"region\":\"south\",\"header\":false,\"border\":false,\"height\":50,\"layout\":\"absolute\",\"hidden\":true},\"cn\":[{\"cid\":\"label\",\"id\":\"label1\",\"layoutConfig\":{},\"userConfig\":{\"text\":\"虚拟目录：\",\"x\":10,\"y\":10}},{\"cid\":\"textfield\",\"id\":\"MyField\",\"layoutConfig\":{},\"userConfig\":{\"x\":80,\"y\":10,\"width\":240}}]}]},{\"cid\":\"panel\",\"id\":\"panel1\",\"layoutConfig\":{\"align\":\"top\",\"pack\":\"center\"},\"userConfig\":{\"region\":\"south\",\"header\":false,\"border\":false,\"height\":40,\"layout\":\"hbox\"},\"cn\":[{\"cid\":\"vmdButton\",\"id\":\"register\",\"layoutConfig\":{},\"userConfig\":{\"region\":\"west\",\"text\":\"注册\",\"type\":\"info\",\"size\":\"small\",\"id\":\"register\",\"width\":60,\"height\":30,\"click\":\"register_click\"}},{\"cid\":\"container\",\"id\":\"div\",\"layoutConfig\":{},\"userConfig\":{\"width\":71,\"border\":false}},{\"cid\":\"vmdButton\",\"id\":\"cancel\",\"layoutConfig\":{},\"userConfig\":{\"text\":\"取消\",\"id\":\"cancel\",\"width\":60,\"height\":30,\"click\":\"cancel_click\"}}]}]}]},{\"cid\":\"vmddataset\",\"id\":\"数据集\",\"layoutConfig\":{},\"userConfig\":{}},{\"cid\":\"vmdvariable\",\"id\":\"变量\",\"layoutConfig\":{},\"userConfig\":{}},{\"cid\":\"vmdsubviewport\",\"id\":\"SubView_Window\",\"layoutConfig\":{},\"userConfig\":{}}]}","vmdevents":"var project_id, project_name, myMask;\n// 项目注册信息\nvar subsysid, pttype, ptdb, virtualPath, resourceserver, objlistResourceNameIP = {};\n\nfunction MyViewport_beforerender(sender) {\n    project_id = vmd.getUrlParam('project_id');\n    project_name = parent.projectName;\n    subsysid = parent.subsysid;\n    pttype = parent.pttype;\n    ptdb = parent.ptdb;\n    virtualPath = parent.virtualPath;\n    resourceserver = JSON.parse(parent.resourceserver);\n    resourceserver.forEach(function(item, index) {\n        objlistResourceNameIP[item.name] = \"http://\" + item.newip + \"/resource\";\n    })\n}\n\nfunction MyViewport_afterrender(sender) {\n    // 根据项目id获取注册配置信息\n    // hwDas.get(\"DataServiceWorkSpace/projectInfo/projectreginfo\", {}, {\n    //     projectid: project_id\n    // }, function(result) {\n    //     console.log(result)\n    //     if(result.data && result.data.length > 0 && result.data[0].datas && result.data[0].datas.length > 0) {\n    //         subsysid = result.data[0].datas[0].subsysid;\n    //         pttype = result.data[0].datas[0].pttype;\n    //         ptdb = result.data[0].datas[0].ptdb;\n    //         virtualPath = result.data[0].datas[0].virtualdir;\n    //     } else {\n    //         vmd.alert('提示', '请先对该项目进行注册信息配置',function(){\n    //             parent.porjectRegister.hide();\n    //         });\n    //     }\n    // })\n}\n\nfunction projectTree_afterrender(sender) {\n    projectTree.enableThreeStateCheckboxes(true);\n    changeData()\n}\n\n// 获取项目模块\nfunction changeData() {\n    var mytree = projectTree;\n    var firstNode = \"\";\n    mytree.deleteChildItems(0);\n    mytree.loadJSONObject({\n        id: 0,\n        text: \"我的项目\",\n        item: []\n    });\n    mytree.itemObj = {};\n    mytree.newnode = false;\n    if(project_id != '') {\n        mytree.insertNewChild(0, project_id, unescape(project_name));\n        mytree.setItemImage2(project_id, \"tree/folderClosed.gif\", \"tree/folderOpen.gif\", \"tree/folderClosed.gif\")\n        var treenode = mytree.item(project_id);\n        treenode.path = \"/\" + project_id;\n        treenode.projectId = project_id;\n        // 默认选中全部项目\n        mytree.setCheck(project_id, true);\n        if(treenode) {\n            treenode.isFord = true;\n            treenode.loadChild = false;\n            treenode.isProject = false;\n        }\n        mytree.itemObj[project_id] = treenode;\n\n        hwDas.ajax({\n            das: {\n                idedas: true\n            },\n            url: \"CDEServcie/module/category\",\n            type: 'get',\n            timeout: 10000,\n            params: {\n                project_id: project_id,\n                parent_id: 0\n            },\n            success: function(result) {\n                var datajson = result.data[0].datas;\n                var treeDataJson = [];\n                for(var i = 0; i < datajson.length; i++) {\n                    mytree.insertNewChild(project_id, datajson[i].id, datajson[i].name);\n                    mytree.setItemImage2(datajson[i].id, \"tree/folderClosed.gif\", \"tree/folderOpen.gif\", \"tree/folderClosed.gif\")\n                    var treenode = mytree.item(datajson[i].id);\n                    treenode.path = \"/\" + project_id + \"/\" + datajson[i].id;\n                    treenode.projectId = project_id;\n                    mytree.setCheck(datajson[i].id, true);\n                    if(treenode) {\n                        treenode.isFord = true;\n                        treenode.loadChild = false;\n                        treenode.isProject = false;\n                        treenode.isCheacked = true;\n                    }\n                    mytree.itemObj[datajson[i].id] = treenode;\n                    addNode(datajson[i].id);\n                    mytree.closeItem(datajson[i].id);\n                }\n            },\n            error: function(msg) {\n                Ext.Msg.alert(\"提示\", \"获取模块信息失败\", function() {})\n            }\n        })\n        hwDas.ajax({\n            das: {\n                idedas: true\n            },\n            url: \"CDEServcie/module/info\",\n            type: 'get',\n            timeout: 10000,\n            params: {\n                project_id: project_id,\n                category_id: '0'\n            },\n            success: function(result) {\n                var datajson = result.data[0].datas;\n                var treeDataJson = [];\n                for(var i = 0; i < datajson.length; i++) {\n                    mytree.insertNewChild(project_id, datajson[i].id, datajson[i].name);\n                    mytree.setItemImage2(datajson[i].id, \"tree/model.png\", \"tree/model.png\", \"tree/model.png\")\n                    var treenode = mytree.item(datajson[i].id);\n                    treenode.path = \"/\" + project_id + \"/\" + datajson[i].id;\n                    treenode.projectId = project_id;\n                    mytree.setCheck(datajson[i].id, true);\n                    if(treenode) {\n                        treenode.isModel = true;\n                        treenode.createuser = datajson[i].row_created_by;\n                        treenode.createtime = datajson[i].row_created_date;\n                        treenode.changetime = datajson[i].row_changed_date;\n                        treenode.changeuser = datajson[i].row_changed_by;\n                        treenode.remark = datajson[i].remark;\n                        treenode.code = datajson[i].code;\n                    }\n                    mytree.itemObj[datajson[i].id] = treenode;\n                }\n            },\n            error: function(msg) {\n                Ext.Msg.alert(\"提示\", \"获取模块信息失败\")\n            }\n        })\n    }\n}\n// 添加子节点\nfunction addNode(id) {\n    var proId = id;\n    var mytree = projectTree;\n    mytree.newnode = false;\n    var hasChild = mytree.hasChildren(proId);\n    var selnode = mytree.itemObj[proId];\n    var selnodepath = selnode.path;\n    var projectId = project_id;\n    var childParentId = id;\n    if(!selnode.loadChild && !selnode.isModel) {\n        hwDas.ajax({\n            das: {\n                idedas: true\n            },\n            url: \"CDEServcie/module/category\",\n            type: 'get',\n            timeout: 50000,\n            params: {\n                project_id: projectId,\n                parent_id: childParentId\n            },\n            success: function(result) {\n                var datajson = result.data[0].datas;\n                var treeDataJson = [];\n                for(var i = 0; i < datajson.length; i++) {\n                    mytree.insertNewChild(proId, datajson[i].id, datajson[i].name);\n                    mytree.setItemImage2(datajson[i].id, \"tree/folderClosed.gif\", \"tree/folderOpen.gif\", \"tree/folderClosed.gif\")\n                    var treenode = mytree.item(datajson[i].id);\n                    treenode.path = selnodepath + \"/\" + datajson[i].id;\n                    treenode.projectId = projectId;\n                    if(treenode) {\n                        treenode.isFord = true;\n                        treenode.loadChild = false;\n                    }\n                    mytree.itemObj[datajson[i].id] = treenode;\n                    mytree.setCheck(datajson[i].id, true);\n                    addNode(datajson[i].id);\n                    mytree.closeItem(datajson[i].id);\n                }\n                mytree.closeAllItems(id);\n            },\n            error: function(msg) {\n                Ext.Msg.alert(\"提示\", \"获取模块信息失败\", function() {})\n            }\n        })\n        hwDas.ajax({\n            das: {\n                idedas: true\n            },\n            url: \"CDEServcie/module/info\",\n            type: 'get',\n            timeout: 50000,\n            params: {\n                category_id: childParentId,\n                project_id: projectId\n            },\n            success: function(result) {\n                var datajson = result.data[0].datas;\n                var treeDataJson = [];\n                for(var i = 0; i < datajson.length; i++) {\n                    mytree.insertNewChild(proId, datajson[i].id, datajson[i].name);\n                    mytree.setItemImage2(datajson[i].id, \"tree/model.png\", \"tree/model.png\", \"tree/model.png\")\n                    var treenode = mytree.item(datajson[i].id);\n                    treenode.path = selnodepath + \"/\" + datajson[i].id;\n                    treenode.projectId = projectId;\n                    if(treenode) {\n                        treenode.isModel = true;\n                        treenode.createuser = datajson[i].row_created_by;\n                        treenode.createtime = datajson[i].row_created_date;\n                        treenode.changetime = datajson[i].row_changed_date;\n                        treenode.changeuser = datajson[i].row_changed_by;\n                        treenode.remark = datajson[i].remark;\n                        treenode.code = datajson[i].code;\n                    }\n                    mytree.itemObj[datajson[i].id] = treenode;\n                    mytree.setCheck(datajson[i].id, true);\n                    addNode(datajson[i].id)\n                }\n                mytree.closeAllItems(id);\n            },\n            error: function(msg) {\n                Ext.Msg.alert(\"提示\", \"获取模块信息失败\")\n            }\n        })\n    }\n}\n// 注册\nfunction register_click(sender, e) {\n    var checkStr = projectTree.getAllChecked();\n    if(checkStr == '') {\n        vmd.alert('提示', '请选择要注册的模块');\n    } else {\n        var zcurl = \"CDEServcie/pt/zcmk\";\n        if(pttype == '5') {\n            zcurl = \"CDEServcie/pt/ptfivezcmk\";\n        }\n        var checkData = checkStr.split(',');\n        var data = [];\n        checkData.forEach(function(item, index) {\n            var selNode = projectTree.itemObj[item];\n            if(selNode.isModel) {\n                data.push({\n                    projectId:selNode.projectId,\n                    subsysid: subsysid,\n                    moduleguid: selNode.id,\n                    modulename: selNode.text,\n                    moudelinfo: selNode.remark,\n                    moduletype: 1,\n                    ptdb: ptdb,\n                    startname: \"/release\" + selNode.path + \".html\",\n                    enable: 1,\n                    args: \"\"\n                })\n            }\n\n        })\n        console.log(data)\n        // hwDas.ajax({\n        //     das: {\n        //         idedas: true\n        //     },\n        //     url: zcurl,\n        //     type: \"save\",\n        //     timeout: 50000,\n        //     data: data,\n        //     success: function(result) {\n        //         // var path = vmd.core.getVirtualPath() + \"modules\" + selNode.path + \"_r.html\";\n        //         // var releasePath = \"release\" + selNode.path + \".html\";\n        //         // vmd.core.createReleaseHtml(path, releasePath, virtualPath, function() {\n        //         //     Ext.Msg.alert(\"提示\", \"注册模块信息成功\", function() {\n\n        //         //     })\n        //         // }, objlistResourceNameIP, project_id);\n        //         // hwDas.copy(\"vmd\", \"modules/\" + project_id + \"/img\", \"release/\" + project_id + \"/img\", function() {}, function() {});\n        //         // hwDas.copy(\"vmd\", \"modules/\" + project_id + \"/css\", \"release/\" + project_id + \"/css\", function() {}, function() {});\n        //         // hwDas.copy(\"vmd\", \"modules/\" + project_id + \"/js\", \"release/\" + project_id + \"/js\", function() {}, function() {});\n        //     },\n        //     error: function(msg) {\n        //         Ext.Msg.alert(\"提示\", \"注册模块信息失败\", function() {})\n        //     }\n        // })\n    }\n}\n// 取消\nfunction cancel_click(sender, e) {\n    parent.porjectRegister.hide();\n}","vmdcss":".title{\n    font-size: 14px;\n}","vmdprops":"\"\"","type":"module","vmdresource":"{\"components\":[{\"cid\":\"vmdrescsss\",\"layoutConfig\":{},\"userConfig\":{}},{\"cid\":\"vmdresjss\",\"layoutConfig\":{},\"userConfig\":{}},{\"cid\":\"vmdresimgs\",\"layoutConfig\":{},\"userConfig\":{}}]}"}