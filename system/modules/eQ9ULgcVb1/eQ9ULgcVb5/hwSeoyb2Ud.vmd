{"vmdversion":"vmd2.0.5.200306","vmdlayout":"{\"components\":[{\"cid\":\"viewport\",\"id\":\"MyViewport\",\"layoutConfig\":{},\"userConfig\":{\"layout\":\"border\",\"afterrender\":\"MyViewport_afterrender\",\"beforerender\":\"MyViewport_beforerender\"},\"cn\":[{\"cid\":\"panel\",\"id\":\"panel\",\"layoutConfig\":{},\"userConfig\":{\"region\":\"center\",\"layout\":\"anchor\",\"border\":false,\"header\":false,\"hidden\":false},\"cn\":[{\"cid\":\"panel\",\"id\":\"panel1\",\"layoutConfig\":{},\"userConfig\":{\"border\":false,\"header\":false,\"autoHeight\":false,\"anchor\":\"100% 100%\",\"hidden\":true,\"afterrender\":\"panel1_afterrender\",\"layout\":\"border\"},\"cn\":[{\"cid\":\"container\",\"id\":\"hwDiv\",\"layoutConfig\":{},\"userConfig\":{\"region\":\"center\",\"border\":false,\"afterrender\":\"hwDiv_afterrender\"}},{\"cid\":\"container\",\"id\":\"hwDiv1\",\"layoutConfig\":{\"align\":\"middle\"},\"userConfig\":{\"region\":\"north\",\"border\":false,\"height\":37,\"layout\":\"hbox\",\"style\":\"border-bottom: 1px solid lightblue\"},\"cn\":[{\"cid\":\"vmdButton\",\"id\":\"button2\",\"layoutConfig\":{},\"userConfig\":{\"margins\":\"0 10 0 20\",\"type\":\"text\",\"icon\":\"icon-plus\",\"text\":\"添加\",\"click\":\"button2_click\",\"style\":\"font-size: 14px;\"}},{\"cid\":\"vmdButton\",\"id\":\"button3\",\"layoutConfig\":{},\"userConfig\":{\"icon\":\"icon-remove\",\"type\":\"text\",\"text\":\"删除\",\"click\":\"button3_click\",\"style\":\"font-size: 14px;\"}},{\"cid\":\"vmdButton\",\"id\":\"button5\",\"layoutConfig\":{},\"userConfig\":{\"type\":\"text\",\"icon\":\"icon-arrow-up\",\"text\":\"上移\",\"click\":\"button5_click\",\"style\":\"font-size: 14px;\",\"margins\":\"0 10 0 10\"}},{\"cid\":\"vmdButton\",\"id\":\"button6\",\"layoutConfig\":{},\"userConfig\":{\"margins\":\"\",\"type\":\"text\",\"icon\":\"icon-arrow-down\",\"text\":\"下移\",\"click\":\"button6_click\",\"style\":\"font-size: 14px;\"}},{\"cid\":\"vmdButton\",\"id\":\"button4\",\"layoutConfig\":{},\"userConfig\":{\"margins\":\"0 10 0 10\",\"type\":\"text\",\"icon\":\"icon-edit\",\"text\":\"导入JSON\",\"click\":\"button4_click\",\"style\":\"font-size: 14px;\"}}]}]},{\"cid\":\"panel\",\"id\":\"MyPanel1\",\"layoutConfig\":{},\"userConfig\":{\"x\":0,\"y\":10,\"height\":350,\"layout\":\"border\",\"header\":false,\"border\":false,\"maskDisabled\":true,\"hideCollapseTool\":false,\"collapsible\":false,\"padding\":\"5\",\"bodyStyle\":\"padding: 5px;    background-color: white;\",\"style\":\"border:1px red;\",\"bodyBorder\":false,\"region\":\"center\",\"width\":800,\"id\":\"MyPanel1\",\"anchor\":\"100% 100%\",\"hidden\":false,\"afterrender\":\"MyPanel1_afterrender\"},\"cn\":[{\"cid\":\"panel\",\"id\":\"MyPanel2\",\"layoutConfig\":{},\"userConfig\":{\"region\":\"west\",\"width\":228,\"border\":true,\"header\":false,\"layout\":\"border\",\"split\":true,\"collapseMode\":\"mini\",\"padding\":\"\",\"margins\":\"\",\"bodyStyle\":\"\",\"style\":\"padding: 5px 0 5px 5px;\",\"id\":\"MyPanel2\"},\"cn\":[{\"cid\":\"panel\",\"id\":\"MyPanel\",\"layoutConfig\":{},\"userConfig\":{\"region\":\"center\",\"layout\":\"fit\",\"header\":false,\"border\":false,\"id\":\"MyPanel\"},\"cn\":[{\"cid\":\"vmdTree\",\"id\":\"hwTree\",\"layoutConfig\":{},\"userConfig\":{\"afterrender\":\"hwTree_afterrender\",\"nodeClick\":\"hwTree_nodeClick\",\"onOpenEnd\":\"hwTree_onOpenEnd\",\"Check\":\"hwTree_Check\"}}]},{\"cid\":\"panel\",\"id\":\"MyPanel10\",\"layoutConfig\":{},\"userConfig\":{\"region\":\"north\",\"height\":30,\"header\":false,\"border\":false,\"layout\":\"absolute\",\"style\":\"border-bottom: 1px red;\",\"id\":\"MyPanel10\"},\"cn\":[{\"cid\":\"label\",\"id\":\"MyLabel\",\"layoutConfig\":{},\"userConfig\":{\"text\":\"数据服务\",\"x\":5,\"y\":5,\"id\":\"MyLabel\",\"style\":\"font-size:14px;\"}}]}]},{\"cid\":\"panel\",\"id\":\"MyPanel3\",\"layoutConfig\":{},\"userConfig\":{\"region\":\"center\",\"layout\":\"border\",\"border\":false,\"header\":false,\"style\":\"padding: 5px 5px 5px 0;\",\"width\":800,\"id\":\"MyPanel3\"},\"cn\":[{\"cid\":\"panel\",\"id\":\"MyPanel11\",\"layoutConfig\":{},\"userConfig\":{\"region\":\"north\",\"height\":40,\"header\":false,\"layout\":\"absolute\",\"border\":true,\"style\":\"\",\"id\":\"MyPanel11\"},\"cn\":[{\"cid\":\"label\",\"id\":\"MyLabel1\",\"layoutConfig\":{},\"userConfig\":{\"x\":5,\"y\":5,\"text\":\"参数\",\"id\":\"MyLabel1\",\"style\":\"font-size:14px;\"}},{\"cid\":\"label\",\"id\":\"label\",\"layoutConfig\":{},\"userConfig\":{\"x\":50,\"y\":5,\"text\":\"(注：当值为空时，则取默认值；值和默认值的写法须提供返回值，写法如 return \\\"vmd\\\") 测试值为获取字段时，使用的模拟参数\",\"style\":\"color:red;\",\"width\":480}}]},{\"cid\":\"panel\",\"id\":\"MyPanel12\",\"layoutConfig\":{},\"userConfig\":{\"region\":\"center\",\"layout\":\"fit\",\"border\":false,\"header\":false,\"id\":\"MyPanel12\"},\"cn\":[{\"cid\":\"tabpanel\",\"id\":\"MyTabs\",\"layoutConfig\":{},\"userConfig\":{\"region\":\"center\",\"activeTab\":0,\"afterrender\":\"MyTabs_afterrender\",\"style\":\"background-color: #fff;    background-image: url()\",\"bodyStyle\":\"background-color: #fff;    background-image: url();\",\"hideBorders\":false,\"autoDestroy\":false},\"cn\":[{\"cid\":\"panel\",\"id\":\"MyPanel4\",\"layoutConfig\":{},\"userConfig\":{\"title\":\"查询\",\"layout\":\"fit\",\"border\":false,\"header\":false,\"id\":\"MyPanel4\"},\"cn\":[{\"cid\":\"vmdGrid\",\"id\":\"hwGrid\",\"layoutConfig\":{},\"userConfig\":{\"beforerender\":\"hwGrid_beforerender\",\"afterrender\":\"hwGrid_afterrender\",\"beforeSelect\":\"hwGrid_beforeSelect\"}}]},{\"cid\":\"panel\",\"id\":\"MyPanel5\",\"layoutConfig\":{},\"userConfig\":{\"title\":\"添加\",\"layout\":\"fit\",\"border\":false,\"header\":false,\"id\":\"MyPanel5\"},\"cn\":[{\"cid\":\"vmdGrid\",\"id\":\"hwGrid1\",\"layoutConfig\":{},\"userConfig\":{\"beforerender\":\"hwGrid1_beforerender\",\"afterrender\":\"hwGrid1_afterrender\",\"beforeSelect\":\"hwGrid1_beforeSelect\"}}]},{\"cid\":\"panel\",\"id\":\"MyPanel6\",\"layoutConfig\":{},\"userConfig\":{\"title\":\"修改\",\"layout\":\"fit\",\"border\":false,\"header\":false,\"id\":\"MyPanel6\"},\"cn\":[{\"cid\":\"vmdGrid\",\"id\":\"hwGrid2\",\"layoutConfig\":{},\"userConfig\":{\"beforerender\":\"hwGrid2_beforerender\",\"afterrender\":\"hwGrid2_afterrender\",\"beforeSelect\":\"hwGrid2_beforeSelect\"}}]},{\"cid\":\"panel\",\"id\":\"MyPanel7\",\"layoutConfig\":{},\"userConfig\":{\"title\":\"删除\",\"layout\":\"fit\",\"border\":false,\"header\":false,\"id\":\"MyPanel7\"},\"cn\":[{\"cid\":\"vmdGrid\",\"id\":\"hwGrid3\",\"layoutConfig\":{},\"userConfig\":{\"beforerender\":\"hwGrid3_beforerender\",\"afterrender\":\"hwGrid3_afterrender\",\"beforeSelect\":\"hwGrid3_beforeSelect\"}}]},{\"cid\":\"panel\",\"id\":\"MyPanel8\",\"layoutConfig\":{},\"userConfig\":{\"title\":\"保存\",\"layout\":\"fit\",\"border\":false,\"header\":false,\"id\":\"MyPanel8\"},\"cn\":[{\"cid\":\"vmdGrid\",\"id\":\"hwGrid4\",\"layoutConfig\":{},\"userConfig\":{\"beforerender\":\"hwGrid4_beforerender\",\"afterrender\":\"hwGrid4_afterrender\",\"beforeSelect\":\"hwGrid4_beforeSelect\"}}]}]}]}]},{\"cid\":\"vmdAceEditor\",\"id\":\"MyAce\",\"layoutConfig\":{},\"userConfig\":{\"region\":\"east\",\"disabled\":true,\"hidden\":true}}]}]},{\"cid\":\"panel\",\"id\":\"MyPanel9\",\"layoutConfig\":{},\"userConfig\":{\"x\":0,\"y\":355,\"height\":50,\"header\":false,\"layout\":\"column\",\"padding\":\"5\",\"border\":false,\"bodyStyle\":\"border-top: 1px solid lightblue\",\"region\":\"south\",\"id\":\"MyPanel9\"},\"cn\":[{\"cid\":\"container\",\"id\":\"div\",\"layoutConfig\":{},\"userConfig\":{\"columnWidth\":0.5,\"border\":false}},{\"cid\":\"container\",\"id\":\"div1\",\"layoutConfig\":{},\"userConfig\":{\"width\":200,\"layout\":\"absolute\",\"border\":false},\"cn\":[{\"cid\":\"vmdButton\",\"id\":\"button\",\"layoutConfig\":{},\"userConfig\":{\"x\":50,\"y\":10,\"text\":\"确定\",\"click\":\"button_click\",\"type\":\"info\",\"style\":\"font-size: 14px;\"}},{\"cid\":\"vmdButton\",\"id\":\"button1\",\"layoutConfig\":{},\"userConfig\":{\"x\":150,\"y\":10,\"text\":\"取消\",\"click\":\"button1_click\",\"type\":\"(none)\",\"style\":\"font-size: 14px;\"}}]},{\"cid\":\"container\",\"id\":\"div2\",\"layoutConfig\":{},\"userConfig\":{\"columnWidth\":0.5,\"border\":false}}]}]},{\"cid\":\"vmddataset\",\"id\":\"数据\",\"layoutConfig\":{},\"userConfig\":{},\"cn\":[{\"cid\":\"vmdJsonStore\",\"id\":\"store\",\"layoutConfig\":{},\"userConfig\":{\"cid\":\"vmdJsonStore\"}}]},{\"cid\":\"vmdvariable\",\"id\":\"变量\",\"layoutConfig\":{},\"userConfig\":{}},{\"cid\":\"vmdsubviewport\",\"id\":\"SubView_Window\",\"layoutConfig\":{},\"userConfig\":{}}]}","vmdevents":"var DicFields = [];\nvar dsId = \"\";\n\n//初始化处理ace的api\nif (parent.init_def_platformControlData) {\n    parent.init_def_platformControlData();\n    def_platformControl = parent.def_platformControl;\n}\n\nif (parent.allPublicMethods)\n    window.allPublicMethods = parent.allPublicMethods;\nelse\n    window.allPublicMethods = {};\nif (parent.publicMethodsType)\n    window.publicMethodsType = parent.publicMethodsType;\nelse\n    window.publicMethodsType = {};\n\nif (parent.init_def_platformFun) {\n    parent.init_def_platformFun({\n        vmd: allPublicMethods\n    });\n    parent.init_def_platformVmd();\n    def_platformWidget = parent.def_platformWidget;\n}\n\n//ext框架类自动识别\ndef_platformExtjs = parent.def_platformExtjs;\n\n//初始化获取工区等信息\nvar workspaceid;\nvar projectid;\nvar workspaceworkflowIp;\nvar workspacedataServiceIp;\nif (parent.vmd && parent.vmd.workspace) {\n    workspaceid = parent.vmd.workspace.workspaceid || \"\";\n    workspaceworkflowIp = parent.vmd.workspace.workflowIp || \"\";\n    workspacedataServiceIp = parent.vmd.workspace.dataServiceIp || \"\";\n    projectid = parent.vmd.workspace.projectid || \"\";\n}\nif (parent.init_def_platformControlData) {\n    parent.init_def_platformControlData();\n    def_platformControl = parent.def_platformControl;\n}\nmyobj = {};\n\nvar saveobj = {}\nvar treeloderover = false;\n\nvar myMask = new Ext.LoadMask(Ext.getBody(), {\n    msg: \"数据加载中,请稍后...\",\n    msgCls: 'z-index:10000;'\n});\n//获取页面的数据集是否为自定义数据集\nvar virtualStore = false;\nif (parent && parent.edValue)\n    virtualStore = parent.edValue.virtualStore || false\n\nfunction hwTree_afterrender(sender) {\n    if (virtualStore)\n        return;\n    //进度提示\n    myMask = new Ext.LoadMask(Ext.getCmp(\"hwTree\").el, {\n        msg: \"数据加载中,请稍后...\",\n        msgCls: 'z-index:10000;'\n    });\n    myMask.show();\n    var mytree = hwTree;\n    mytree.deleteChildItems(0);\n    mytree.loadJSONObject({\n        id: 0,\n        text: \"我的服务\",\n        item: []\n    });\n    mytree.enableRadioButtons(true)\n    mytree.enableSingleRadioMode(true)\n    mytree.itemObj = {};\n    mytree.newnode = false;\n    hwDas.appinfo.callCode = \"vmdCode\";\n    var firstNode = \"\";\n    hwDas.get(\"DataServiceWorkSpace/projectInfo/ProjcetServiceCategory\", {}, {\n        projectid: projectid || \"\",\n        type: 1\n    }, function(selresult) {\n        var idarray = [];\n        if (selresult.data && selresult.data.length > 0 && selresult.data[0].datas && selresult.data[0].datas.length > 0) {\n            var datajson = selresult.data[0].datas;\n            var treeDataJson = [];\n            var toopenid = \"\"\n            for (var i = 0; i < datajson.length; i++) {\n                idarray.push(datajson[i].service_category_id)\n            }\n        }\n        var urlparam;\n        if (workspacedataServiceIp) {\n            urlparam = {\n                host: workspacedataServiceIp,\n                url: \"DataService/Service/Project\"\n            }\n        } else\n            urlparam = \"DataService/Service/Project\"\n\n        hwDas.get(urlparam, {\n                Ecylogin: Ext.util.Cookies.get('EcyLogin') || Ext.util.Cookies.get('ecyLogin')\n            }, {\n                develop: \"true\"\n            }, function(result) {\n                var datajson = result.data[0].datas;\n                var treeDataJson = [];\n                var toopenid = \"\"\n                for (var i = 0; i < datajson.length; i++) {\n                    if (list.indexOf(datajson[i].code) >= 0) {\n                        toopenid = datajson[i].id\n                    }\n                    if (idarray.indexOf(datajson[i].id) >= 0 || !projectid) {\n                        mytree.insertNewChild(0, datajson[i].id, datajson[i].name);\n                        mytree.setItemImage2(datajson[i].id, \"tree/projectclose.png\", \"tree/projectopen.png\", \"tree/projectclose.png\");\n                        mytree.showItemCheckbox(datajson[i].id, false)\n                        mytree.insertNewChild(datajson[i].id, datajson[i].id + \"-0\", \"\");\n                        mytree.closeItem(datajson[i].id);\n                        var treenode = mytree.item(datajson[i].id);\n                        treenode.path = datajson[i].code;\n                        if (treenode) {\n                            treenode.isProject = true;\n                            treenode.loadChild = false;\n                        }\n                        mytree.itemObj[datajson[i].id] = treenode;\n                        if (firstNode == \"\")\n                            firstNode = datajson[i].id;\n                    }\n                }\n                treeloderover = true;\n                //默认选中首项 \n                if (firstNode != \"\")\n                    mytree.selectItem(firstNode);\n                if (toopenid != \"\")\n                    hwTree.openItem(toopenid);\n                myMask.hide();\n                if (datajson.length <= 0)\n                    Ext.Msg.alert(\"提示\", \"未获取到数据服务分类信息，请从项目配置中进行添加。\", function() {})\n            },\n            function(msg) {\n                myMask.hide();\n                Ext.Msg.alert(\"提示\", \"获取项目所选服务失败!请核实工区或环境配置中数据服务是否正确!\", function() {})\n            })\n    }, function(msg) {\n        myMask.hide();\n        Ext.Msg.alert(\"提示\", \"获取数据服务失败，请检查工区和环境配置是否配置了正确的数据服务地址。\", function() {})\n    })\n}\nvar selNodeId = \"\";\n\nfunction hwTree_nodeClick(sender, id) {\n\n    //20171118 将所有页签隐藏 只显示查询的页签内容，操作其他页签的操作均屏蔽\n    var proId = id;\n    var mytree = hwTree;\n    var selnode = mytree.itemObj[proId];\n    var gridarray = [];\n    if (selNodeId != id) {\n        if (selnode.isModel) {\n\n            if (!mytree.isItemChecked(id)) {\n                if (mytree.getAllChecked() != \"\")\n                    mytree.setSubChecked(mytree.getAllChecked(), false)\n                mytree.setSubChecked(id, true)\n            }\n            clearAllGrid();\n            var urlparam;\n            if (workspacedataServiceIp)\n                urlparam = {\n                    host: workspacedataServiceIp,\n                    url: \"DataService/Service/Method\"\n                }\n            else\n                urlparam = \"DataService/Service/Method\"\n            hwDas.get(urlparam, {}, {\n                    resourceid: proId\n                },\n                function(result) {\n                    var datajson = result.data[0].datas;\n                    var treeDataJson = [];\n                    for (var i = 0; i < datajson.length; i++) {\n                        if (datajson[i].name == \"get\") {\n                            MyTabs.unhideTabStripItem(MyPanel4);\n                            hwGrid.methodsId = datajson[i].id;\n                            hwGrid.methodsType = datajson[i].name;\n                            bindparams(hwGrid);\n                            gridarray.push(hwGrid)\n                        }\n                    }\n                    var bindover = false;\n                    while (!bindover) {\n                        bindover = true;\n                        for (var v in gridarray) {\n                            if (gridarray[v].bindData && gridarray[v].bindData == false)\n                                bindover = false\n                        }\n                    }\n                },\n                function(msg) {\n                    Ext.Msg.alert(\"提示\", \"获取服务方法信息失败\", function() {})\n                })\n        } else {}\n    }\n    bselNodeId = id;\n}\n\nfunction fillMethods() {}\n//点击模块节点时，清空所有网格数据\nfunction clearAllGrid() {\n\n    if (hwGrid.loder) {\n        hwGrid.clearAll();\n        hwGrid.bindData = false;\n    }\n}\n\nfunction bindparams(grid) {\n    if (!grid.loder)\n        return;\n    var urlparam;\n    if (workspacedataServiceIp) {\n        urlparam = {\n            host: workspacedataServiceIp,\n            url: \"DataService/Service/Parameter\"\n        }\n    } else\n        urlparam = \"DataService/Service/Parameter\"\n    hwDas.get(urlparam, {}, {\n        methodid: grid.methodsId\n    }, function(result) {\n        var datajson = result.data[0].datas;\n        grid.bindData = true;\n        var rows = [];\n        for (var i = 0; i < datajson.length; i++) {\n            var row = {};\n            row.id = i + 1;\n            row.data = [];\n            row.data.push(i + 1);\n            row.data.push(datajson[i].code);\n            row.data.push(datajson[i].name);\n            row.data.push(datajson[i].type);\n            var getparams = [];\n            if (myobj.id == hwTree.getSelectedItemId()) {\n                if (grid.methodsType == \"get\") {\n                    getparams = myobj.getMethods;\n                }\n            }\n            row.data.push(\"\")\n            row.data.push(\"\")\n            for (var v = 0; v < getparams.length; v++) {\n                if (datajson[i].code == getparams[v].id) {\n                    row.data[4] = getparams[v].value1;\n                    row.data[5] = getparams[v].value2;\n                    row.data[6] = getparams[v].testValue;\n                    break;\n                }\n            }\n            row.data.push(datajson[i].defaultvalue);\n            rows.push(row);\n        }\n        grid.parse({\n            rows: rows\n        }, \"json\");\n        //绑定参数到网格中\n    }, function(msg) {\n        Ext.Msg.alert(\"提示\", \"获取服务方法参数失败\", function() {})\n    })\n}\n\nfunction bindSelTabParams(b) {\n    if (b.id == MyPanel4.id && !hwGrid.bindData) {\n        bindparams(hwGrid)\n    }\n    if (b.id == MyPanel5.id && !hwGrid1.bindData) {\n        bindparams(hwGrid1)\n    }\n    if (b.id == MyPanel6.id && !hwGrid2.bindData) {\n        bindparams(hwGrid2)\n    }\n    if (b.id == MyPanel7.id && !hwGrid3.bindData) {\n        bindparams(hwGrid3)\n    }\n    if (b.id == MyPanel8.id && !hwGrid4.bindData) {\n        bindparams(hwGrid4)\n    }\n}\n\nfunction MyTabs_afterrender(sender) {}\n\nfunction GetSaveObj(fun) {\n    saveobj = {};\n    if (!virtualStore) {\n        var mytree = hwTree;\n        var selId = mytree.getSelectedItemId();\n        var selnode = mytree.itemObj[selId];\n        saveobj.id = selId;\n        saveobj.callcode = \"vmdCode\";\n        saveobj.url = selnode.path;\n        saveobj.host = \"\";\n        saveobj.name = selnode.text;\n        saveobj.isHwRest = true;\n        saveobj.getMethods = getGridObj(hwGrid);\n        saveobj.postMethods = getGridObj(hwGrid1);\n        saveobj.putMethods = getGridObj(hwGrid2);\n        saveobj.deleteMethods = getGridObj(hwGrid3);\n        saveobj.saveMethods = getGridObj(hwGrid4);\n        getFields(function(fields, tableName, foreign) {\n            saveobj.fields = fields;\n            saveobj.tableName = tableName;\n            saveobj.foreign = foreign;\n            fun(saveobj)\n        });\n    } else {\n        saveobj.isHwRest = false;\n        getCustomFiles(function(fields) {\n            saveobj.fields = fields;\n            fun(saveobj)\n        })\n    }\n}\n//获取自定义的字段信息\nfunction getCustomFiles(fun) {\n    var dataFields = [];\n    dhgrid.editStop()\n    var dataRowsID = myDataStore.data.order\n    var dataRows = myDataStore.data.pull\n    for (var i = 0; i < dataRowsID.length; i++) {\n        var rec = dataRows[dataRowsID[i]]\n        fields = {\n            name: rec.name,\n            cname: rec.cname,\n            dname: \"\",\n            type: rec.type,\n            dtype: \"\",\n            primary: rec.primary,\n            nullable: rec.nullable,\n            length: rec.length,\n            precision: rec.precision,\n            unit: rec.unit,\n            dunit: \"\",\n            rule: {}\n        }\n        for (var ii = 0; ii < DicFields.length; ii++) {\n            if (rec.name == DicFields[ii].name.toLowerCase()) { //找到匹配项并添加到数组\n                fields.defaultValue = DicFields[ii].defaultValue;\n                fields.dname = DicFields[ii].dname;\n                fields.rule = DicFields[ii].rule;\n                fields.dunit = DicFields[ii].dunit;\n                fields.flaStore = DicFields[ii].flaStore;\n                fields.flaValueField = DicFields[ii].flaValueField;\n                fields.flaDisplayField = DicFields[ii].flaDisplayField;\n                break;\n            }\n        }\n        dataFields.push(fields);\n    }\n    fun(dataFields)\n}\n\n\n//获取绑定的数据服务的数据集字段\nfunction getFields(fun) {\n    var mytree = hwTree;\n    var selId = mytree.getSelectedItemId();\n    var selnode = mytree.itemObj[selId];\n    var selnodepath = selnode.path;\n    hwDas.appinfo.callCode = \"vmdCode\"\n    var urlparam;\n    if (workspacedataServiceIp) {\n        urlparam = {\n            host: workspacedataServiceIp,\n            url: selnodepath\n        }\n    } else\n        urlparam = selnodepath\n    var params = {};\n    for (var i = 0; i < saveobj.getMethods.length; i++) {\n        var testValue = \"\";\n        try {\n            var testValueExp = saveobj.getMethods[i].testValue || 'return \"\"'\n            testValue = new Function(\"value\", testValueExp + ';\\nreturn value')(\"\") //eval(\"(function(){\" + testValueExp + \"\\r\\n})()\");\n        } catch (error) {}\n        params[saveobj.getMethods[i].id] = testValue;\n    }\n    hwDas.get(urlparam, {\n        startIndex: 0,\n        pageSize: 1\n    }, params, function(result) { //获取数据集的字段信息\n        if (fun) {\n            if (result.data.length <= 0) {\n                Ext.Msg.alert(\"提示\", \"未获取到该服务的字段信息，请检查服务是否能够执行并能查询到数据！\", function() {})\n                return\n            }\n            var dicTable = result.data[0].tableName || result.data[0].tableNnme\n            var dicId = result.data[0].system_id\n            if (dicTable) {\n                var dicUrlparam;\n                if (workspacedataServiceIp) {\n                    dicUrlparam = {\n                        host: workspacedataServiceIp,\n                        url: \"DataService/Source/getdict\"\n                    }\n                } else\n                    dicUrlparam = \"DataService/Source/getdict\"\n                hwDas.get(dicUrlparam, {}, {\n                    c_tablename: dicTable,\n                    c_systemid: dicId\n                }, function(dicResult) {\n                    //根据字典字段与数据字段进行匹配\n                    resultDataFields = result.data[0].fields\n                    var dataFields = [];\n                    var pattern = new RegExp(\"[`~!@#$^&*()=|{}':;',\\\\[\\\\].<>/?~！@#￥……&*（）——|{}【】‘；：”“'。，、？]\");\n                    var errorFile = \"\";\n                    var dirForeignDatas = (dicResult.data[1] && dicResult.data[1].datas) || [];\n                    //遍历数据字段\n                    for (var p in resultDataFields) { //\n                        if (typeof(resultDataFields[p]) == \"function\") {} else {\n                            var dirDatas = dicResult.data[0].datas;\n                            if (pattern.test(p)) {\n                                errorFile = p;\n                                break;\n                            } else {\n                                var fields = {\n                                    name: p,\n                                    cname: \"\",\n                                    dname: \"\",\n                                    dtype: resultDataFields[p].toLowerCase(),\n                                    type: resultDataFields[p].toLowerCase(),\n                                    primary: '',\n                                    nullable: 'Y',\n                                    length: \"\",\n                                    precision: \"\",\n                                    unit: \"\",\n                                    dunit: \"\",\n                                    rule: {}\n                                }\n                                var hasField = false;\n                                for (var ii = 0; ii < dirDatas.length; ii++) {\n                                    var dirDataRow = dirDatas[ii];\n                                    if (dirDataRow.column_name.toLowerCase() == p) {\n                                        fields = {\n                                            name: p,\n                                            cname: dirDataRow.column_comment.replace(/[\\r\\n]/g, ''),\n                                            dname: dirDataRow.column_comment.replace(/[\\r\\n]/g, ''),\n                                            type: dirDataRow.data_type,\n                                            dtype: dirDataRow.data_type.toLowerCase(),\n                                            primary: dirDataRow.primary_key_ind == \"Y\" ? \"Y\" : \"\",\n                                            nullable: dirDataRow.nullable_ind == \"Y\" ? \"Y\" : \"\",\n                                            length: dirDataRow.column_size,\n                                            precision: dirDataRow.column_scale,\n                                            unit: dirDataRow.uom_column_name,\n                                            dunit: dirDataRow.uom_column_name,\n                                            rule: {}\n                                        }\n                                        //dataFields.push(fields);\n                                        break;\n                                    }\n                                }\n                                //处理规则\n                                //}\n                                //首先从上一数据集中配置的字段信息中取判断是否存在字段信息\n                                if (dsId == selId) //如果选择的数据集与之前的一致，则先从修改过的字典信息匹配（历史）\n                                    for (var ii = 0; ii < DicFields.length; ii++) {\n                                        if (p == DicFields[ii].name.toLowerCase()) { //找到匹配项并添加到数组\n                                            fields.defaultValue = DicFields[ii].defaultValue;\n                                            fields.dname = DicFields[ii].dname;\n                                            fields.rule = DicFields[ii].rule;\n                                            fields.dunit = DicFields[ii].dunit;\n                                            hasField = true\n                                            break;\n                                        }\n                                    }\n                                dataFields.push(fields);\n                            }\n                        }\n                    }\n                    if (errorFile)\n                        Ext.Msg.alert(\"提示\", \"字段\" + errorFile + \"中存在特殊字符，请核实修改！\", function() {})\n                    else\n                        fun(dataFields, dicTable, dirForeignDatas)\n                })\n            } else {\n                resultDataFields = result.data[0].fields\n                var dataFields = [];\n                var pattern = new RegExp(\"[`~!@#$^&*()=|{}':;',\\\\[\\\\].<>/?~！@#￥……&*（）——|{}【】‘；：”“'。，、？]\");\n                var errorFile = \"\";\n                //遍历数据字段\n                for (var p in resultDataFields) { //\n                    if (typeof(resultDataFields[p]) == \"function\") {} else {\n                        if (pattern.test(p)) {\n                            errorFile = p;\n                            break;\n                        } else {\n                            var fields = {\n                                name: p,\n                                cname: \"\",\n                                type: resultDataFields[p].toLowerCase(),\n                                primary: '',\n                                nullable: 'Y',\n                                length: \"\",\n                                precision: \"\",\n                                unit: \"\",\n                                rule: {}\n                            }\n                            dataFields.push(fields);\n                        }\n                    }\n                }\n                if (errorFile)\n                    Ext.Msg.alert(\"提示\", \"字段\" + errorFile + \"中存在特殊字符，请核实修改！\", function() {})\n                else\n                    fun(dataFields)\n            }\n        }\n    }, function(msg) {\n        Ext.Msg.alert(\"提示\", \"获取字段信息失败!<br> 1、请检查数据服务是否正确！<br> 2、输入测试参数再尝试！<br> 3、测试参数输入格式与数据服务格式是否一致!\", function() {})\n    })\n}\n\nfunction getGridObj(grid) {\n    var params = [];\n    if (grid.loder && grid.bindData) {\n        grid.editStop(true);\n\n        for (var i = 0; i < grid.getRowsNum(); i++) {\n            params.push({\n                id: grid.cells2(i, 1).getValue(),\n                name: grid.cells2(i, 2).getValue(),\n                type: grid.cells2(i, 3).getValue(),\n                value1: grid.cells2(i, 4).getValue(),\n                value2: grid.cells2(i, 5).getValue(),\n                testValue: grid.cells2(i, 6).getValue(),\n                defaultvalue: grid.getRowById(grid.getRowId(i))._attrs.data[7]\n            });\n        }\n    }\n    return params;\n}\n//确定 获取数据集配置信息\nfunction button_click(sender) {\n    GetSaveObj(function(obj) {\n        window.vmdReturnValue = Ext.encode(obj);\n        var data = [];\n        for (var i = 0; i < obj.fields.length; i++) {\n            data.push({\n                cid: 'datafield',\n                name: obj.fields[i].name\n            })\n        }\n        parent.xds.vmd.deleteChildNodeById(parent.edValue.id)\n        parent.xds.vmd.addNode(data, parent.edValue.id)\n        parent.edClose(true);\n    })\n}\n//取消\nfunction button1_click(sender) {\n    window.vmdReturnValue = \"\"\n    parent.edClose();\n}\n\nvar list = [];\n\nfunction MyViewport_afterrender(sender) {\n    if (virtualStore) {\n        bindvirtualStoreFiles()\n    }\n}\n\n\nfunction hwGrid_beforerender(sender) {\n    initgrid(sender)\n    hwGrid.loder = true;\n}\n\nfunction hwGrid2_beforerender(sender) {\n    initgrid(sender)\n    hwGrid2.loder = true;\n}\n\nfunction hwGrid1_beforerender(sender) {\n    initgrid(sender)\n    hwGrid1.loder = true;\n}\n\nfunction hwGrid3_beforerender(sender) {\n    initgrid(sender)\n    hwGrid3.loder = true;\n}\n\nfunction hwGrid4_beforerender(sender) {\n    initgrid(sender)\n    hwGrid4.loder = true;\n}\n\nfunction initgrid(sender) {\n    sender.headstr = \"序号,编码,名称,类型,值,默认值,测试值\";\n    sender.colType = \"ro,ro,ro,ro,txt,txt,txt\";\n    var headerWidth = \"50,60,100,80,120,120,100\"\n    sender.headerWidth = headerWidth;\n}\n\nfunction hwGrid_afterrender(sender) {\n    sender.clearAll()\n}\n//数据服务树节点的展开\nfunction hwTree_onOpenEnd(sender, id, state) {\n    var proId = id;\n    var mytree = hwTree;\n    mytree.newnode = false;\n    var selnode = mytree.itemObj[proId];\n    if (!selnode.loadChild) {\n        if (selnode.isProject) {\n            fillFord(proId, {\n                projectid: proId,\n                parentid: \"0\"\n            });\n        } else {\n            fillFord(proId, {\n                parentid: proId\n            });\n            fillMode(proId, {\n                categoryid: proId\n            });\n        }\n        if (!selnode.loadChild) {\n            mytree.deleteItem(id + \"-0\", false);\n        }\n    }\n    selnode.loadChild = true;\n}\n//填充树 的 分类  服务分类\nfunction fillFord(id, params) {\n    myMask.show();\n    var proId = id;\n    var mytree = hwTree;\n    var selnode = mytree.itemObj[proId];\n    var selnodepath = selnode.path;\n    var urlparam;\n    if (workspacedataServiceIp) {\n        urlparam = {\n            host: workspacedataServiceIp,\n            url: \"DataService/Service/Category\"\n        }\n    } else\n        urlparam = \"DataService/Service/Category\"\n\n    hwDas.get(urlparam, {}, params, function(result) {\n        var mytree = hwTree;\n        var datajson = result.data[0].datas;\n        var treeDataJson = [];\n        var toopenid = \"\";\n        for (var i = 0; i < datajson.length; i++) {\n            if (list.indexOf(datajson[i].code) >= 0 && list.indexOf(datajson[i].code) < list.length - 1) {\n                toopenid = datajson[i].id\n            }\n            mytree.insertNewChild(proId, datajson[i].id, datajson[i].name);\n            mytree.setItemImage2(datajson[i].id, \"tree/folderClosed.gif\", \"tree/folderOpen.gif\", \"tree/folderClosed.gif\")\n            mytree.showItemCheckbox(datajson[i].id, false)\n            mytree.insertNewChild(datajson[i].id, datajson[i].id + \"-0\", \"\");\n            mytree.closeItem(datajson[i].id);\n            var treenode = mytree.item(datajson[i].id);\n            treenode.path = selnodepath + \"/\" + datajson[i].code;\n            if (treenode) {\n                treenode.isFord = true;\n                treenode.loadChild = false;\n            }\n            mytree.itemObj[datajson[i].id] = treenode;\n        }\n        if (toopenid != \"\") {\n            mytree.openItem(toopenid)\n        }\n        myMask.hide();\n    }, function(msg) {\n        myMask.hide();\n        Ext.Msg.alert(\"提示\", \"获取项目所选服务失败!请核实工区或环境配置中数据服务是否正确!\", function() {})\n    })\n}\n\n//填充树  分类下的 子节点  服务\nfunction fillMode(id, params) {\n    myMask.show();\n    var proId = id;\n    var mytree = hwTree;\n    var selnode = mytree.itemObj[proId];\n    var selnodepath = selnode.path;\n    var urlparam;\n    if (workspacedataServiceIp) {\n        urlparam = {\n            host: workspacedataServiceIp,\n            url: \"DataService/Service/Resource\"\n        }\n    } else\n        urlparam = \"DataService/Service/Resource\"\n    hwDas.get(urlparam, {}, params, function(result) {\n        var datajson = result.data[0].datas;\n        var treeDataJson = [];\n        var toselectid = \"\";\n        for (var i = 0; i < datajson.length; i++) {\n            if (list.indexOf(datajson[i].code) >= 0 && myobj) {\n                if (myobj.id && datajson[i].id == myobj.id)\n                    toselectid = datajson[i].id\n                if (myobj.id == \"\")\n                    toselectid = datajson[i].id\n            }\n            var mytree = hwTree;\n            mytree.insertNewChild(proId, datajson[i].id, datajson[i].name);\n            mytree.setItemImage2(datajson[i].id, \"tree/model.png\", \"tree/model.png\", \"tree/model.png\")\n            var treenode = mytree.item(datajson[i].id);\n            treenode.path = selnodepath + \"/\" + datajson[i].code;\n            if (treenode) {\n                treenode.isModel = true;\n            }\n            mytree.itemObj[datajson[i].id] = treenode;\n        }\n        if (toselectid != \"\") {\n            mytree.selectItem(toselectid, true)\n        }\n        //数据操作   \n        myMask.hide();\n    }, function(msg) {\n        myMask.hide();\n        Ext.Msg.alert(\"提示\", \"获取项目所选服务失败!请核实工区或环境配置中数据服务是否正确!\")\n    })\n}\n\nfunction hwGrid1_afterrender(sender) {\n    sender.clearAll()\n}\n\nfunction hwGrid2_afterrender(sender) {\n    sender.clearAll()\n}\n\nfunction hwGrid3_afterrender(sender) {\n    sender.clearAll()\n}\n\nfunction hwGrid4_afterrender(sender) {\n    sender.clearAll()\n}\n\nfunction MyViewport_beforerender(sender) {\n    // myMask.show();\n    MyTabs.hideTabHeader = true;\n    if (!parent.edValue || !parent.edValue.storeConfig)\n        return\n    myobj = Ext.decode(parent.edValue.storeConfig)\n    DicFields = myobj.fields || []; //记录目前已编辑过的字段信息\n    dsId = myobj.id; //记录当前的数据集id\n    if (myobj.url)\n        list = myobj.url.split(\"/\"); //字符分割 \n\n}\n\n\nfunction hwGrid1_beforeSelect(sender, stage, rowId, cellInd) {\n    var mygrid = sender;\n    valueEditFrm(mygrid, new_row, new_col_index);\n}\n\nfunction hwGrid2_beforeSelect(sender, stage, rowId, cellInd) {\n    var mygrid = sender;\n    valueEditFrm(mygrid, new_row, new_col_index);\n}\n\nfunction hwGrid3_beforeSelect(sender, stage, rowId, cellInd) {\n    var mygrid = sender;\n    valueEditFrm(mygrid, new_row, new_col_index);\n}\n\nfunction hwGrid4_beforeSelect(sender, stage, rowId, cellInd) {\n    var mygrid = sender;\n    valueEditFrm(mygrid, new_row, new_col_index);\n}\n\nfunction hwGrid_beforeSelect(sender, new_row, old_row, new_col_index) {\n    var mygrid = sender;\n    valueEditFrm(hwGrid, new_row, new_col_index);\n}\n//数据集默认值的代码编辑\nfunction valueEditFrm(grid, rowId, cellInd) {\n\n    if (cellInd == \"4\" || cellInd == \"5\" || cellInd == \"6\") {\n        var mygrid = grid;\n        var win = new Ext.Window({\n            title: \"参数值代码编辑\",\n            modal: true,\n            maximized: false,\n            height: 400,\n            width: 500,\n            maximizable: true,\n            resizable: true,\n            bodyStyle: \"background-color:#fff\",\n            closeAction: 'close'\n        })\n        win.editor = new vmd.comp.Ace({\n            language: 'javascript'\n        })\n        win.add(win.editor);\n        //关闭\n        win.hidefn = function() {\n            var value = win.editor.getValue()\n            mygrid.cells(rowId, cellInd).setValue(value)\n        }\n        win.on('hide', win.hidefn);\n        var dValue = mygrid.cells(rowId, cellInd).getValue();\n        if (dValue == \"\")\n            dValue = \"//返回值 \\r\\n return \\\"\\\"\"\n        win.editor.value = dValue;\n        win.show();\n        Ext.defer(function() {\n            win.editor.focus();\n            win.editor.el.dom.click()\n        }, 100)\n    }\n}\n\nfunction hwTree_Check(sender, id, state) {\n    var mytree = hwTree;\n    mytree.selectItem(id, true);\n    mytree.setSubChecked(id, true)\n}\n\nfunction panel1_beforerender(sender) {\n\n}\n\nfunction MyPanel1_beforerender(sender) {\n\n}\n\nvar myDataStore = new dhtmlXDataStore();\n\nfunction panel1_afterrender(sender) {\n    //根据是否为自定义数据集，设置组件的隐藏展示\n    if (virtualStore) {\n        panel1.show()\n    } else {\n        panel1.hide();\n    }\n}\nvar dhgrid;\n\nfunction bindvirtualStoreFiles() {\n    if (DicFields) {\n        myDataStore.parse(DicFields);\n    }\n    //初始化网格数据\n    dhgrid = new dhtmlXGridObject(hwDiv.el.dom);\n    dhgrid.setImagePath(\"/lib/dhtmlx/codebase/imgs/\");\n    var header = \"字段名,汉字注释,主键,可为空,类型,长度,精度,计量单位\";\n    var width = \"150,150,60,60,100,80,80,80\";\n    var colType = \"ed,ed,ch,ch,combo,ed,ed,ed\";\n    var strType = \"str,str,str,str,str,int,int,str\";\n    var colId = \"name,cname,primary,nullable,type,length,precision,unit\";\n    dhgrid.setHeader(header);\n    dhgrid.setInitWidths(width);\n    dhgrid.setColumnIds(colId);\n    dhgrid.setColTypes(colType);\n    dhgrid.enableEditEvents(true, false, true);\n    dhgrid.init();\n    dhgrid.setEditable(true);\n    dhgrid.sync(myDataStore);\n    dhgrid.attachEvent(\"onCheckbox\", doOnCheck);\n    var combobox = dhgrid.getColumnCombo(4);\n    combobox.clearAll();\n    combobox.addOption([{\n        value: \"NUMBER\",\n        text: \"NUMBER\"\n    }, {\n        value: \"VARCHAR2\",\n        text: \"VARCHAR2\"\n    }, {\n        value: \"DATE\",\n        text: \"DATE\"\n    }, {\n        value: \"LONG\",\n        text: \"LONG\"\n    }, {\n        value: \"BLOB\",\n        text: \"BLOB\"\n    }, {\n        value: \"CLOB\",\n        text: \"CLOB\"\n    }]);\n\n}\n\nfunction doOnCheck(rowId, cellInd, state) {\n    var tf = \"\"\n    if (state)\n        tf = \"Y\"\n    if (cellInd == \"2\")\n        myDataStore.item(rowId).primary = tf\n    if (cellInd == \"3\")\n        myDataStore.item(rowId).nullable = tf\n    return true;\n}\n\n\nfunction MyPanel1_afterrender(sender) {\n    if (virtualStore) {\n        MyPanel.hide()\n    } else {\n        MyPanel.show();\n    }\n}\n\nfunction hwDiv_afterrender(sender) {\n\n}\n\nfunction button2_click(sender, e) {\n    myDataStore.add({\n        name: \"\",\n        cname: \"\",\n        dname: \"\",\n        type: \"VARCHAR2\",\n        dtype: \"\",\n        primary: \"\",\n        nullable: \"Y\",\n        length: \"\",\n        precision: \"\",\n        unit: \"\"\n    })\n}\n\nfunction button3_click(sender, e) {\n    var id = dhgrid.getSelectedRowId();\n    myDataStore.remove(id)\n}\n\n\n\n\n//文件夹名称录入框\nwindow.FilejsonEditWin = Ext.extend(Ext.Window, {\n    xtype: \"window\",\n    title: \"字段信息Json编辑\",\n    width: 600,\n    height: 400,\n    layout: \"fit\",\n    bodyStyle: 'padding:5px',\n    labelAlign: \"left\",\n    labelWidth: 40,\n    modal: true,\n    constructor: function(callback, fileJson) {\n        this.valueName = fileJson;\n        this.callback = callback;\n        this.callParent();\n    },\n    initComponent: function() {\n        var me = this;\n        this.fbar = [{\n            text: \"确定\",\n            handler: function() {\n                me.callback(Ext.getCmp('jsonedit').getValue(), function(isok) {\n                    if (isok)\n                        me.close();\n                });\n            }\n        }, {\n            text: \"取消\",\n            handler: function() {\n                me.close();\n            }\n        }];\n        this.items = [{\n            id: 'jsonedit',\n            xtype: \"vmd.ace\",\n            anchor: \"100% 100%\",\n            value: this.valueName,\n            language: \"javascript\",\n            afterrender: \"MyAce_afterrender\",\n            listeners: {\n                vmdafterrender: MyAce_afterrender\n            }\n        }]\n        FilejsonEditWin.superclass.initComponent.call(this);\n\n        function MyAce_afterrender(sender) {\n            sender.formatJsCss()\n        }\n    }\n})\n\n\nfunction button4_click(sender, e) {\n    var dataRowsID = myDataStore.data.order\n    var dataRows = myDataStore.data.pull\n    var _fileJson = []\n    for (var i = 0; i < dataRowsID.length; i++) {\n        var rec = dataRows[dataRowsID[i]]\n        fields = {\n            column_name: rec.name,\n            name: rec.cname,\n            data_type: rec.type,\n            primary: rec.primary,\n            nullable: rec.nullable,\n            data_length: rec.length,\n            data_precision: rec.precision,\n            unit: rec.unit\n        }\n        _fileJson.push(fields);\n    }\n    var _fileJsonStr = JSON.stringify(_fileJson)\n    if (_fileJson.length <= 0) {\n        _fileJsonStr = '[' +'\\r\\n'+\n            '   {' +'\\r\\n'+\n            '     \"column_name\":\"\",//列名' +'\\r\\n'+\n            '     \"name\":\"\",//汉字名称' +'\\r\\n'+\n            '     \"data_type\":\"\",//类型' +'\\r\\n'+\n            '     \"primary\":\"\",//主键 Y，非主键空或N' +'\\r\\n'+\n            '     \"nullable\":\"\",//可为空  Y，非主键空或N' +'\\r\\n'+\n            '     \"data_length\":\"\",//长度' +'\\r\\n'+\n            '     \"data_precision\":\"\",//精度' +'\\r\\n'+\n            '     \"unit\":\"\"//计量单位' +'\\r\\n'+\n            '   }' +'\\r\\n'+\n            ']'\n    }\n\n    var parseFileJson = function(fileJson, callback) {\n        var newFileJson = []\n        try {\n            newFileJson = JSON.parse(fileJson)\n            myDataStore.clearAll();\n            for (var i = 0; i < newFileJson.length; i++) {\n                newfile = {\n                    name: newFileJson[i].column_name || \"\",\n                    cname: newFileJson[i].name || \"\",\n                    type: newFileJson[i].data_type || \"\",\n                    primary: newFileJson[i].primary == \"Y\" ? \"Y\" : \"\",\n                    nullable: newFileJson[i].nullable == \"Y\" ? \"Y\" : \"\",\n                    length: newFileJson[i].data_length || \"\",\n                    precision: newFileJson[i].data_precision || \"\",\n                    unit: newFileJson[i].unit || \"\"\n                }\n                myDataStore.add(newfile)\n            }\n            callback(true)\n        } catch (e) {\n            vmd.msg(\"错误\", \"解析json失败，json格式不正确。\")\n            callback(false)\n        }\n    }\n    var jsonParse = new FilejsonEditWin(parseFileJson, _fileJsonStr);\n    jsonParse.show();\n}\n\nfunction button5_click(sender, e) {\n\n    var id = dhgrid.getSelectedRowId();\n    var index = myDataStore.indexById(id);\n    if (index <= 0)\n        return\n    var datas = myDataStore.item(id);\n    myDataStore.remove(id)\n    myDataStore.data.add(datas, index - 1)\n}\n\nfunction button6_click(sender, e) {\n\n    var id = dhgrid.getSelectedRowId();\n    var index = myDataStore.indexById(id);\n    if (index >= myDataStore.dataCount() - 1)\n        return\n    var datas = myDataStore.item(id);\n    myDataStore.remove(id)\n    myDataStore.data.add(datas, index + 1)\n}","vmdcss":"","vmdprops":"\"\"","type":"module","vmdresource":"{\"components\":[{\"cid\":\"vmdrescsss\",\"layoutConfig\":{},\"userConfig\":{}},{\"cid\":\"vmdresjss\",\"layoutConfig\":{},\"userConfig\":{},\"cn\":[{\"cid\":\"resjs\",\"id\":\"project.config.js\",\"layoutConfig\":{},\"userConfig\":{}}]},{\"cid\":\"vmdresimgs\",\"layoutConfig\":{},\"userConfig\":{}}]}"}